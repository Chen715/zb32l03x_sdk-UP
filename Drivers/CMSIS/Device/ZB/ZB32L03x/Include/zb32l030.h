/*
 * CMSIS Cortex-M+ Device Peripheral Access Layer Header File.
 * This file contains all the peripheral register's definitions, bits
 * definitions and memory mapping for ZB32L03x devices.
 *
 * This file contains:
 * - Data structures and the address mapping for all peripherals
 * - Peripheral's registers declarations and bits definition
 *
 * @file     ZB32L030.h
 * @brief    CMSIS HeaderFile
 * @version  1.0
 * @date     25. May 2022
 * @note     Generated by SVDConv V3.3.38 on Wednesday, 25.05.2022 14:58:44
 *           from File './ZB32L030.svd',
 *           last modified on Wednesday, 25.05.2022 06:52:20
 */



/** @addtogroup ZBit.
  * @{
  */


/** @addtogroup ZB32L030
  * @{
  */


#ifndef ZB32L030_H
#define ZB32L030_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup Configuration_of_CMSIS
  * @{
  */



/* =========================================================================================================================== */
/* ================                                Interrupt Number Definition                                ================ */
/* =========================================================================================================================== */

typedef enum {
/* =======================================  ARM Cortex-M0+ Specific Interrupt Numbers  ======================================= */
  Reset_IRQn                = -15,              /*!< -15  Reset Vector, invoked on Power up and warm reset                     */
  NonMaskableInt_IRQn       = -14,              /*!< -14  Non maskable Interrupt, cannot be stopped or preempted               */
  HardFault_IRQn            = -13,              /*!< -13  Hard Fault, all classes of Fault                                     */
  SVCall_IRQn               =  -5,              /*!< -5 System Service Call via SVC instruction                                */
  PendSV_IRQn               =  -2,              /*!< -2 Pendable request for system service                                    */
  SysTick_IRQn              =  -1,              /*!< -1 System Tick Timer                                                      */
/* ==========================================  ZB32L030 Specific Interrupt Numbers  ========================================== */
  GPIOA_IRQn                =   0,              /*!< 0  GPIOA                                                                  */
  GPIOB_IRQn                =   1,              /*!< 1  GPIOB global interrupt                                                 */
  GPIOC_IRQn                =   2,              /*!< 2  GPIOC global interrupt                                                 */
  GPIOD_IRQn                =   3,              /*!< 3  GPIOD global interrupt                                                 */
  FLASH_IRQn                =   4,              /*!< 4  Flash interrupt                                                        */
  UART0_IRQn                =   6,              /*!< 6  UART0                                                                  */
  UART1_IRQn                =   7,              /*!< 7  UART1 global interrupt                                                 */
  LPUART_IRQn               =   8,              /*!< 8  LPUART                                                                 */
  UART2_3_IRQn              =   9,              /*!< 9  UART2 global interrupt                                                 */
  SPI0_1_IRQn               =  10,              /*!< 10 SPI0_1                                                                 */
  TIM2C_IRQn                =  11,              /*!< 11 TIM2C global interrupt                                                 */
  I2C0_1_IRQn               =  12,              /*!< 12 I2C0_1                                                                 */
  TIM1B_IRQn                =  13,              /*!< 13 TIM1B global interrupt                                                 */
  TIM10_IRQn                =  14,              /*!< 14 TIM10                                                                  */
  TIM11_IRQn                =  15,              /*!< 15 TIM11 global interrupt                                                 */
  LPTIM_IRQn                =  16,              /*!< 16 LPTIM                                                                  */
  TIM1A_IRQn                =  17,              /*!< 17 TIM1A global interrupt                                                 */
  TIM1_IRQn                 =  18,              /*!< 18 TIM1                                                                   */
  TIM2_IRQn                 =  19,              /*!< 19 TIM2 global interrupt                                                  */
  TIM2A_IRQn                =  20,              /*!< 20 TIM2A global interrupt                                                 */
  PCA_IRQn                  =  21,              /*!< 21 PCA                                                                    */
  WWDG_IRQn                 =  22,              /*!< 22 WWDG                                                                   */
  IWDG_IRQn                 =  23,              /*!< 23 IWDG                                                                   */
  ADC_IRQn                  =  24,              /*!< 24 ADC                                                                    */
  LVD_IRQn                  =  25,              /*!< 25 LVD                                                                    */
  VC0_1_IRQn                =  26,              /*!< 26 VC0_1                                                                  */
  TIM2B_IRQn                =  27,              /*!< 27 TIM2B global interrupt                                                 */
  AWK_IRQn                  =  28,              /*!< 28 AWK                                                                    */
  OWIRE_IRQn                =  29,              /*!< 29 OWIRE                                                                  */
  RTC_IRQn                  =  30,              /*!< 30 RTC                                                                    */
  CLKTRIM_IRQn              =  31               /*!< 31 CLKTRIM                                                                */
} IRQn_Type;



/* =========================================================================================================================== */
/* ================                           Processor and Core Peripheral Section                           ================ */
/* =========================================================================================================================== */

/* ==========================  Configuration of the ARM Cortex-M0+ Processor and Core Peripherals  =========================== */
#define __CM0PLUS_REV                 0x0100U   /*!< CM0PLUS Core Revision                                                     */
#define __NVIC_PRIO_BITS               2        /*!< Number of Bits used for Priority Levels                                   */
#define __Vendor_SysTickConfig         0        /*!< Set to 1 if different SysTick Config is used                              */
#define __VTOR_PRESENT                 1        /*!< Set to 1 if CPU supports Vector Table Offset Register                     */
#define __MPU_PRESENT                  0        /*!< MPU present                                                               */
#define __FPU_PRESENT                  0        /*!< FPU present                                                               */


/** @} */ /* End of group Configuration_of_CMSIS */

#include "core_cm0plus.h"                       /*!< ARM Cortex-M0+ processor and core peripherals                             */
#include "system_zb32l03x.h"                    /*!< ZB32L030 System                                                           */

#ifndef __IM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __IM   __I
#endif
#ifndef __OM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __OM   __O
#endif
#ifndef __IOM                                   /*!< Fallback for older CMSIS versions                                         */
  #define __IOM  __IO
#endif


/* ========================================  Start of section using anonymous unions  ======================================== */
#if defined (__CC_ARM)
  #pragma push
  #pragma anon_unions
#elif defined (__ICCARM__)
  #pragma language=extended
#elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wc11-extensions"
  #pragma clang diagnostic ignored "-Wreserved-id-macro"
  #pragma clang diagnostic ignored "-Wgnu-anonymous-struct"
  #pragma clang diagnostic ignored "-Wnested-anon-types"
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning 586
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#else
  #warning Not supported compiler type
#endif


/* =========================================================================================================================== */
/* ================                            Device Specific Peripheral Section                             ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                         MMP_ALIAS                                         ================ */
/* =========================================================================================================================== */


/**
  * @brief Memory mapping (MMP_ALIAS)
  */

typedef struct {                                /*!< (@ 0x00000000) MMP_ALIAS Structure                                        */
  __IOM uint32_t  DATA0;                        /*!< (@ 0x00000000) The first address                                          */
} MMP_ALIAS_TypeDef;                               /*!< Size = 4 (0x4)                                                            */



/* =========================================================================================================================== */
/* ================                                            OPA                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Operational Amplifier (OPA)
  */

typedef struct {                                /*!< (@ 0x40005400) OPA Structure                                              */
  __IOM uint32_t  OP1_CR0;                      /*!< (@ 0x00000000) OP1 Control Register 0                                     */
  __IOM uint32_t  OP2_CR0;                      /*!< (@ 0x00000004) OP2 Control Register 0                                     */
  __IOM uint32_t  OPDAC_CR;                     /*!< (@ 0x00000008) DAC (OP1/OP2) Contorl Registet                             */
} OPA_TypeDef;                                     /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                            VC                                             ================ */
/* =========================================================================================================================== */


/**
  * @brief Voltage Comparator (VC)
  */

typedef struct {                                /*!< (@ 0x40004080) VC Structure                                               */
  __IOM uint32_t  CR0;                          /*!< (@ 0x00000000) VC Control 0                                               */
  __IOM uint32_t  CR1;                          /*!< (@ 0x00000004) VC Control 1                                               */
  __IOM uint32_t  OUTCFG;                       /*!< (@ 0x00000008) VC Output Config                                           */
  __IOM uint32_t  SR;                           /*!< (@ 0x0000000C) VC Status Register                                         */
} VC_TypeDef;                                      /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                            VC1                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Voltage Comparator (VC1)
  */

typedef struct {                                /*!< (@ 0x40004100) VC1 Structure                                              */
  __IOM uint32_t  CR0;                          /*!< (@ 0x00000000) VC Control 0                                               */
  __IOM uint32_t  CR1;                          /*!< (@ 0x00000004) VC Control 1                                               */
  __IOM uint32_t  OUTCFG;                       /*!< (@ 0x00000008) VC Output Config                                           */
  __IOM uint32_t  SR;                           /*!< (@ 0x0000000C) VC0 Status Register                                        */
} VC1_TypeDef;                                     /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                            DBG                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Debug MCU (DBG)
  */

typedef struct {                                /*!< (@ 0x40004C00) DBG Structure                                              */
  __IOM uint32_t  APBFZ;                        /*!< (@ 0x00000000) Mode Control Register                                      */
} DBG_TypeDef;                                     /*!< Size = 4 (0x4)                                                            */



/* =========================================================================================================================== */
/* ================                                            LVD                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief LVD (LVD)
  */

typedef struct {                                /*!< (@ 0x40004000) LVD Structure                                              */
  __IOM uint32_t  CR;                           /*!< (@ 0x00000000) Control Register                                           */
  __IOM uint32_t  SR;                           /*!< (@ 0x00000004) LVD Status                                                 */
} LVD_TypeDef;                                     /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                            ADC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief ADC Register (ADC)
  */

typedef struct {                                /*!< (@ 0x40002C00) ADC Structure                                              */
  __IOM uint32_t  CR0;                          /*!< (@ 0x00000000) ADC Config Register 0                                      */
  __IOM uint32_t  CR1;                          /*!< (@ 0x00000004) ADC Config Register 1                                      */
  __IOM uint32_t  CR2;                          /*!< (@ 0x00000008) ADC Config Register2                                       */
  __IOM uint32_t  RESULT0;                      /*!< (@ 0x0000000C) Channel 0 Result Register                                  */
  __IOM uint32_t  RESULT1;                      /*!< (@ 0x00000010) Channel 1 Result Register                                  */
  __IOM uint32_t  RESULT2;                      /*!< (@ 0x00000014) Channel 2 Result Register                                  */
  __IOM uint32_t  RESULT3;                      /*!< (@ 0x00000018) Channel 3 Result Register                                  */
  __IOM uint32_t  RESULT4;                      /*!< (@ 0x0000001C) Channel 4 Result Register                                  */
  __IOM uint32_t  RESULT5;                      /*!< (@ 0x00000020) Channel 5 Result Register                                  */
  __IOM uint32_t  RESULT6;                      /*!< (@ 0x00000024) Channel 6 Result Register                                  */
  __IOM uint32_t  RESULT7;                      /*!< (@ 0x00000028) Channel 7 Result Register                                  */
  __IOM uint32_t  RESULT;                       /*!< (@ 0x0000002C) Channel Result Register                                    */
  __IOM uint32_t  RESULT_ACC;                   /*!< (@ 0x00000030) Channel Result accumulate                                  */
  __IOM uint32_t  HT;                           /*!< (@ 0x00000034) Compare High Threshold                                     */
  __IOM uint32_t  LT;                           /*!< (@ 0x00000038) Compare Low Threshold                                      */
  __IM  uint32_t  RESERVED[2];
  __IOM uint32_t  INTEN;                        /*!< (@ 0x00000044) Interrupt Enable Register                                  */
  __IOM uint32_t  INTCLR;                       /*!< (@ 0x00000048) Interrupt Clear Register                                   */
  __IOM uint32_t  RAWINTSR;                     /*!< (@ 0x0000004C) Interrupt Status Register before mask                      */
  __IOM uint32_t  MSKINTSR;                     /*!< (@ 0x00000050) Interrupt Status Register Behind mask                      */
} ADC_TypeDef;                                     /*!< Size = 84 (0x54)                                                          */



/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief RTC (RTC)
  */

typedef struct {                                /*!< (@ 0x40003000) RTC Structure                                              */
  __IOM uint32_t  CR;                           /*!< (@ 0x00000000) CR                                                         */
  __IOM uint32_t  CLKCR;                        /*!< (@ 0x00000004) CLKCR                                                      */
  __IOM uint32_t  TIME;                         /*!< (@ 0x00000008) TIME                                                       */
  __IOM uint32_t  DATE;                         /*!< (@ 0x0000000C) DATE                                                       */
  __IOM uint32_t  ALM1TIME;                     /*!< (@ 0x00000010) ALM                                                        */
  __IOM uint32_t  ALM1DATE;                     /*!< (@ 0x00000014) ALM                                                        */
  __IOM uint32_t  ALM2PRD;                      /*!< (@ 0x00000018) ALM PR                                                     */
  __IOM uint32_t  RCLKTRIM;                     /*!< (@ 0x0000001C) RTC clock trim                                             */
  __IOM uint32_t  ISR;                          /*!< (@ 0x00000020) Init                                                       */
  __IOM uint32_t  INTCLR;                       /*!< (@ 0x00000024) Status Clean                                               */
  __IOM uint32_t  WPR;                          /*!< (@ 0x00000028) RTC                                                        */
} RTC_TypeDef;                                     /*!< Size = 44 (0x2c)                                                          */



/* =========================================================================================================================== */
/* ================                                          CLKTRIM                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief CLK_TRIM (CLKTRIM)
  */

typedef struct {                                /*!< (@ 0x40003400) CLKTRIM Structure                                          */
  __IOM uint32_t  CR;                           /*!< (@ 0x00000000) Config Register                                            */
  __IOM uint32_t  REFCON;                       /*!< (@ 0x00000004) Reference Count Orignal Config Register                    */
  __IOM uint32_t  REFCNT;                       /*!< (@ 0x00000008) Reference Count Register                                   */
  __IOM uint32_t  CALCNT;                       /*!< (@ 0x0000000C) Calibration count register                                 */
  __IOM uint32_t  IFR;                          /*!< (@ 0x00000010) Interrupt Flag Register                                    */
  __IOM uint32_t  ICLR;                         /*!< (@ 0x00000014) Interrupt Flag Clear Register                              */
  __IOM uint32_t  CALCON;                       /*!< (@ 0x00000018) Count Overtime Control Register                            */
} CLKTRIM_TypeDef;                                 /*!< Size = 28 (0x1c)                                                          */



/* =========================================================================================================================== */
/* ================                                           OWIRE                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief One Wire (OWIRE)
  */

typedef struct {                                /*!< (@ 0x40003800) OWIRE Structure                                            */
  __IOM uint32_t  CR;                           /*!< (@ 0x00000000) 1-Wire Model Control Register                              */
  __IOM uint32_t  NFCR;                         /*!< (@ 0x00000004) 1-Wire Input EndPoint Control                              */
  __IOM uint32_t  RSTCNT;                       /*!< (@ 0x00000008) 1-Wire Master Reset Pulse Count register                   */
  __IOM uint32_t  PRESCNT;                      /*!< (@ 0x0000000C) 1-Wire Device Presence Pulse Count Register                */
  __IOM uint32_t  BITRATECNT;                   /*!< (@ 0x00000010) 1-Wire Bit Rate Design Count                               */
  __IOM uint32_t  DRVCNT;                       /*!< (@ 0x00000014) 1-Wire Main Read/Write Pull0                               */
  __IOM uint32_t  RDSMPCNT;                     /*!< (@ 0x00000018) 1-Wire Main Read Sample Time Setting                       */
  __IOM uint32_t  RECCNT;                       /*!< (@ 0x0000001C) 1-Wire Recover Time Count                                  */
  __IOM uint32_t  DATA;                         /*!< (@ 0x00000020) 1_Wire Data Register                                       */
  __IOM uint32_t  CMD;                          /*!< (@ 0x00000024) 1_Wire Bus Operate Command Register                        */
  __IOM uint32_t  INTEN;                        /*!< (@ 0x00000028) 1-Wire Interrupt Enable Register                           */
  __IOM uint32_t  SR;                           /*!< (@ 0x0000002C) 1-Wire Status Register                                     */
  __IOM uint32_t  INTCLR;                       /*!< (@ 0x00000030) 1-Wire Interrupt Status Clean Register                     */
} OWIRE_TypeDef;                                   /*!< Size = 52 (0x34)                                                          */



/* =========================================================================================================================== */
/* ================                                            SPI                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief SPI Register (SPI)
  */

typedef struct {                                /*!< (@ 0x40000800) SPI Structure                                              */
  __IOM uint32_t  CR;                           /*!< (@ 0x00000000) SPI Config Register                                        */
  __IOM uint32_t  SSN;                          /*!< (@ 0x00000004) SPI CHIP SELECT CONFIG                                     */
  __IOM uint32_t  SR;                           /*!< (@ 0x00000008) SPI Status Register                                        */
  __IOM uint32_t  DATA;                         /*!< (@ 0x0000000C) SPI Data register                                          */
} SPI_TypeDef;                                     /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                            I2C                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief I2C Register (I2C)
  */

typedef struct {                                /*!< (@ 0x40000C00) I2C Structure                                              */
  __IOM uint32_t  CR;                           /*!< (@ 0x00000000) I2C Config Register                                        */
  __IOM uint32_t  DATA;                         /*!< (@ 0x00000004) Data                                                       */
  __IOM uint32_t  ADDR;                         /*!< (@ 0x00000008) I2C Address Register                                       */
  __IOM uint32_t  SR;                           /*!< (@ 0x0000000C) I2C Status register                                        */
  __IOM uint32_t  TIMRUN;                       /*!< (@ 0x00000010) I2C Baund Count Enable                                     */
  __IOM uint32_t  BAUDCR;                       /*!< (@ 0x00000014) Baud Control Register                                      */
} I2C_TypeDef;                                     /*!< Size = 24 (0x18)                                                          */



/* =========================================================================================================================== */
/* ================                                          LPUART                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Low Power UART Register (LPUART)
  */

typedef struct {                                /*!< (@ 0x40005000) LPUART Structure                                           */
  __IOM uint32_t  SBUF;                         /*!< (@ 0x00000000) Data BUFF                                                  */
  __IOM uint32_t  SCON;                         /*!< (@ 0x00000004) Control Register                                           */
  __IOM uint32_t  SADDR;                        /*!< (@ 0x00000008) LPUART Address Register                                    */
  __IOM uint32_t  SADEN;                        /*!< (@ 0x0000000C) LPUART Address Mask Register                               */
  __IOM uint32_t  INTSR;                        /*!< (@ 0x00000010) LPUART Interrupt flag Status Register                      */
  __IOM uint32_t  INTCLR;                       /*!< (@ 0x00000014) LPUART Interruput flag Clear Register                      */
  __IOM uint32_t  BAUDCR;                       /*!< (@ 0x00000018) LPUART Baud Control Register                               */
} LPUART_TypeDef;                                  /*!< Size = 28 (0x1c)                                                          */



/* =========================================================================================================================== */
/* ================                                           UART                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief UART Register (UART)
  */

typedef struct {                                /*!< (@ 0x40000000) UART Structure                                             */
  __IOM uint32_t  SCON;                         /*!< (@ 0x00000000) UART Control Register                                      */
  __IOM uint32_t  SBUF;                         /*!< (@ 0x00000004) Data BUFF                                                  */
  __IOM uint32_t  SADDR;                        /*!< (@ 0x00000008) Address Register                                           */
  __IOM uint32_t  SADEN;                        /*!< (@ 0x0000000C) Address Mask Register                                      */
  __IOM uint32_t  INTSR;                        /*!< (@ 0x00000010) Interrupt flag Status Register                             */
  __IOM uint32_t  INTCLR;                       /*!< (@ 0x00000014) UART Interruput flag Clear Register                        */
  __IOM uint32_t  BAUDCR;                       /*!< (@ 0x00000018) Baud Control Register                                      */
  __IOM uint32_t  IRDACR;                       /*!< (@ 0x0000001C) UART IrDA Control Register                                 */
} UART_TypeDef;                                    /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                           WWDG                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Window Watch Dog (WWDG)
  */

typedef struct {                                /*!< (@ 0x40002000) WWDG Structure                                             */
  __IOM uint32_t  RLOAD;                        /*!< (@ 0x00000000) Count ReLoad Register                                      */
  __IOM uint32_t  CR;                           /*!< (@ 0x00000004) WWDG Control Register                                      */
  __IOM uint32_t  INTEN;                        /*!< (@ 0x00000008) Interrupt Enable Register                                  */
  __IOM uint32_t  SR;                           /*!< (@ 0x0000000C) WWDG Interrupt Status Register                             */
  __IOM uint32_t  INTCLR;                       /*!< (@ 0x00000010) WWDG Interrupt Clear Register                              */
  __IOM uint32_t  CNTVAL;                       /*!< (@ 0x00000014) Count Value                                                */
} WWDG_TypeDef;                                    /*!< Size = 24 (0x18)                                                          */



/* =========================================================================================================================== */
/* ================                                           IWDG                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Independ Watch Dog (IWDG)
  */

typedef struct {                                /*!< (@ 0x40002400) IWDG Structure                                             */
  __IOM uint32_t  CMDCR;                        /*!< (@ 0x00000000) IWDG Control Command Register                              */
  __IOM uint32_t  CFGR;                         /*!< (@ 0x00000004) IWDG Config Register                                       */
  __IOM uint32_t  RLOAD;                        /*!< (@ 0x00000008) Count ReLoad Register                                      */
  __IOM uint32_t  CNTVAL;                       /*!< (@ 0x0000000C) Count Value                                                */
  __IOM uint32_t  SR;                           /*!< (@ 0x00000010) IWDG Interrupt Status Register                             */
  __IOM uint32_t  INTCLR;                       /*!< (@ 0x00000014) IWDG Interrupt Clear Register                              */
  __IOM uint32_t  UNLOCK;                       /*!< (@ 0x00000018) IWDG register Writer Protect                               */
} IWDG_TypeDef;                                    /*!< Size = 28 (0x1c)                                                          */



/* =========================================================================================================================== */
/* ================                                           BEEP                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief BEEP (BEEP)
  */

typedef struct {                                /*!< (@ 0x40004800) BEEP Structure                                             */
  __IOM uint32_t  CSR;                          /*!< (@ 0x00000000) BEEP Control Status Register                               */
} BEEP_TypeDef;                                    /*!< Size = 4 (0x4)                                                            */



/* =========================================================================================================================== */
/* ================                                            AWK                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Auto wake (AWK)
  */

typedef struct {                                /*!< (@ 0x40002800) AWK Structure                                              */
  __IOM uint32_t  CR;                           /*!< (@ 0x00000000) Auto Wake Timer Control Register                           */
  __IOM uint32_t  RLOAD;                        /*!< (@ 0x00000004) Auto Wake Timer ReLoad Data Register                       */
  __IOM uint32_t  SR;                           /*!< (@ 0x00000008) Auto Wake Timer Status Register                            */
  __IOM uint32_t  INTCLR;                       /*!< (@ 0x0000000C) Auto Wake Interrupt Clear Register                         */
} AWK_TypeDef;                                     /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                           LPTIM                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Low Power Timer (LPTIM)
  */

typedef struct {                                /*!< (@ 0x40004400) LPTIM Structure                                            */
  __IOM uint32_t  CNTVAL;                       /*!< (@ 0x00000000) Low Power Count Read_Only Register                         */
  __IOM uint32_t  CR;                           /*!< (@ 0x00000004) LPTIM Control Register                                     */
  __IOM uint32_t  LOAD;                         /*!< (@ 0x00000008) LPTIM Reload Register                                      */
  __IOM uint32_t  INTSR;                        /*!< (@ 0x0000000C) LPTIM Interrupt Status                                     */
  __IOM uint32_t  INTCLR;                       /*!< (@ 0x00000010) LPTIM Interrupt Clear Register                             */
  __IOM uint32_t  BGLOAD;                       /*!< (@ 0x00000014) LPTIM Circle reload Register                               */
} LPTIM_TypeDef;                                   /*!< Size = 24 (0x18)                                                          */



/* =========================================================================================================================== */
/* ================                                          BASETIM                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief BASE TIMER (BASETIM)
  */

typedef struct {                                /*!< (@ 0x40001800) BASETIM Structure                                          */
  __IOM uint32_t  CR;                           /*!< (@ 0x00000000) TIM10 Control Register                                     */
  __IOM uint32_t  LOAD;                         /*!< (@ 0x00000004) 32bits Auto Load Register                                  */
  __IOM uint32_t  CNT;                          /*!< (@ 0x00000008) Read Count Register，Only Read                            */
  __IOM uint32_t  RAWINTSR;                     /*!< (@ 0x0000000C) RAWINTSR                                                   */
  __IOM uint32_t  MSKINTSR;                     /*!< (@ 0x00000010) Read Interrupt Register                                    */
  __IOM uint32_t  INTCLR;                       /*!< (@ 0x00000014) Interrupt Clear Register                                   */
  __IOM uint32_t  BGLOAD;                       /*!< (@ 0x00000018) 32Bits Circles Reload Register                             */
} BASETIM_TypeDef;                                 /*!< Size = 28 (0x1c)                                                          */



/* =========================================================================================================================== */
/* ================                                            PCA                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Programmable Counter Array (PCA)
  */

typedef struct {                                /*!< (@ 0x40001400) PCA Structure                                              */
  __IOM uint32_t  CR;                           /*!< (@ 0x00000000) Control Register                                           */
  __IOM uint32_t  MOD;                          /*!< (@ 0x00000004) Mode Register                                              */
  __IOM uint32_t  CNT;                          /*!< (@ 0x00000008) PCA Count Register                                         */
  __IOM uint32_t  INTCLR;                       /*!< (@ 0x0000000C) PCA Interrupt Clear Register                               */
  __IOM uint32_t  CCAPM0;                       /*!< (@ 0x00000010) PCA Captuer/Compare Model 0 Mode Register                  */
  __IOM uint32_t  CCAPM1;                       /*!< (@ 0x00000014) PCA Captuer/Compare Model 1 Mode Register                  */
  __IOM uint32_t  CCAPM2;                       /*!< (@ 0x00000018) PCA Captuer/Compare Model 2 Mode Register                  */
  __IOM uint32_t  CCAPM3;                       /*!< (@ 0x0000001C) PCA Captuer/Compare Model 3 Mode Register                  */
  __IOM uint32_t  CCAPM4;                       /*!< (@ 0x00000020) PCA Captuer/Compare Model 4 Mode Register                  */
  __IM  uint32_t  RESERVED[3];
  __IOM uint32_t  CCAP0L;                       /*!< (@ 0x00000030) PCA Capture/Compare Model0 Low 8 bits Register             */
  __IOM uint32_t  CCAP0H;                       /*!< (@ 0x00000034) PCA Capture/Compare Model0 High 8 bits Register            */
  __IOM uint32_t  CCAP1L;                       /*!< (@ 0x00000038) PCA Capture/Compare Model 1 Low 8 bits Register            */
  __IOM uint32_t  CCAP1H;                       /*!< (@ 0x0000003C) PCA Capture/Compare Model 1 High 8 bits Register           */
  __IOM uint32_t  CCAP2L;                       /*!< (@ 0x00000040) PCA Capture/Compare Model 2 Low 8 bits Register            */
  __IOM uint32_t  CCAP2H;                       /*!< (@ 0x00000044) PCA Capture/Compare Model 2 High 8 bits Register           */
  __IOM uint32_t  CCAP3L;                       /*!< (@ 0x00000048) PCA Capture/Compare Model 3 Low 8 bits Register            */
  __IOM uint32_t  CCAP3H;                       /*!< (@ 0x0000004C) PCA Capture/Compare Model 3 High 8 bits Register           */
  __IOM uint32_t  CCAP4L;                       /*!< (@ 0x00000050) PCA Capture/Compare Model 4 Low 8 bits Register            */
  __IOM uint32_t  CCAP4H;                       /*!< (@ 0x00000054) PCA Capture/Compare Model 4 High 8 bits Register           */
  __IOM uint32_t  CCAPO;                        /*!< (@ 0x00000058) PCA EndPoint Output Flag Register                          */
  __IOM uint32_t  POCR;                         /*!< (@ 0x0000005C) PCA EndPoint Output Control Register                       */
  __IOM uint32_t  CCAP0;                        /*!< (@ 0x00000060) PCA Capture/Compare Model0 16 bits Register                */
  __IOM uint32_t  CCAP1;                        /*!< (@ 0x00000064) PCA Capture/Compare Model 1 16 bits Register               */
  __IOM uint32_t  CCAP2;                        /*!< (@ 0x00000068) PCA Capture/Compare Model 2 16 bits Register               */
  __IOM uint32_t  CCAP3;                        /*!< (@ 0x0000006C) PCA Capture/Compare Model 3 16 bits Register               */
  __IOM uint32_t  CCAP4;                        /*!< (@ 0x00000070) PCA Capture/Compare Model 4 16 bits Register               */
} PCA_TypeDef;                                     /*!< Size = 116 (0x74)                                                         */



/* =========================================================================================================================== */
/* ================                                            TIM                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Advance Timer (TIM)
  */

typedef struct {                                /*!< (@ 0x40001000) TIM Structure                                              */
  __IOM uint32_t  CR1;                          /*!< (@ 0x00000000) TIM Control Register1                                      */
  __IOM uint32_t  CR2;                          /*!< (@ 0x00000004) TIM Control Register 2                                     */
  __IOM uint32_t  SMCR;                         /*!< (@ 0x00000008) TIM Master mode Control Register                           */
  __IOM uint32_t  DIER;                         /*!< (@ 0x0000000C) TIM Interrupt Enable Register                              */
  __IOM uint32_t  SR;                           /*!< (@ 0x00000010) TIM Status Register                                        */
  __IOM uint32_t  EGR;                          /*!< (@ 0x00000014) TIM Event Trig Register                                    */

  union {
    __IOM uint32_t CCMR1_OUT;                   /*!< (@ 0x00000018) TIM Capture/Compare Mode Register 1 (Output mode)          */
    __IOM uint32_t CCMR1_IN;                    /*!< (@ 0x00000018) TIM Capture/Compare Mode Register 1 (Input mode)           */
  };

  union {
    __IOM uint32_t CCMR2_OUT;                   /*!< (@ 0x0000001C) TIM Capture/Compare Mode Register 2 (Output mode)          */
    __IOM uint32_t CCMR2_IN;                    /*!< (@ 0x0000001C) TIM Capture/Compare Mode Register 2 (Input mode)           */
  };
  __IOM uint32_t  CCER;                         /*!< (@ 0x00000020) TIM Captuer/Compare Enable Register                        */
  __IOM uint32_t  CNT;                          /*!< (@ 0x00000024) TIM Count                                                  */
  __IOM uint32_t  PSC;                          /*!< (@ 0x00000028) TIM Prescale Register                                      */
  __IOM uint32_t  ARR;                          /*!< (@ 0x0000002C) TIM Auto Load Register                                     */
  __IOM uint32_t  RCR;                          /*!< (@ 0x00000030) TIM Repeate Count Register                                 */
  __IOM uint32_t  CCR1;                         /*!< (@ 0x00000034) Captuer/Compare Register1                                  */
  __IOM uint32_t  CCR2;                         /*!< (@ 0x00000038) Capture/Compare Register2                                  */
  __IOM uint32_t  CCR3;                         /*!< (@ 0x0000003C) Capture/Compare Register3                                  */
  __IOM uint32_t  CCR4;                         /*!< (@ 0x00000040) TIM Capture/Compare Register4                              */
  __IOM uint32_t  BDTR;                         /*!< (@ 0x00000044) TIM Brush and DEAD Register                                */
} TIM_TypeDef;                                     /*!< Size = 72 (0x48)                                                          */



/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief CRC Register (CRC)
  */

typedef struct {                                /*!< (@ 0x40020800) CRC Structure                                              */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  RESULT;                       /*!< (@ 0x00000004) Result register                                            */
  __IM  uint32_t  RESERVED1[30];
  __IOM uint32_t  DATA0;                        /*!< (@ 0x00000080) CRC Data Register (0x80 ~ 0xFF)                            */
} CRC_TypeDef;                                     /*!< Size = 132 (0x84)                                                         */



/* =========================================================================================================================== */
/* ================                                           FLASH                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Flash Controller (FLASH)
  */

typedef struct {                                /*!< (@ 0x40020400) FLASH Structure                                            */
  __IOM uint32_t  CR;                           /*!< (@ 0x00000000) Control Register                                           */
  __IOM uint32_t  IFR;                          /*!< (@ 0x00000004) Interrupt flag Register                                    */
  __IOM uint32_t  ICLR;                         /*!< (@ 0x00000008) Interrupt Flag Clear Register                              */
  __IOM uint32_t  BYPASS;                       /*!< (@ 0x0000000C) 0X5A5A-0XA5A5 sequence Register                            */
  __IOM uint32_t  SLOCK0;                       /*!< (@ 0x00000010) Sector Write Protect Register0                             */
  __IOM uint32_t  SLOCK1;                       /*!< (@ 0x00000014) Sector Write Protect Register1                             */
  __IOM uint32_t  ISPCON;                       /*!< (@ 0x00000018) Flash ISP Control register                                 */
  __IOM uint32_t  IAPCON;                       /*!< (@ 0x0000001C) Flash IAP Control register                                 */
  __IOM uint32_t  IAP_SIZE;                     /*!< (@ 0x00000020) Flash IAP Size register                                    */
  __IOM uint32_t  ISP_AUX_FLAG;                 /*!< (@ 0x00000024) ISP_AUX_FLAG register                                      */
  __IM  uint32_t  RESERVED[4];
  __IOM uint32_t  SWCFG;                        /*!< (@ 0x00000038) Flash configuration                                        */
  __IOM uint32_t  HWCFG;                        /*!< (@ 0x0000003C) Flash configuration                                        */
} FLASH_TypeDef;                                   /*!< Size = 64 (0x40)                                                          */



/* =========================================================================================================================== */
/* ================                                           GPIO                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief GPIO register list (GPIO)
  */

typedef struct {                                /*!< (@ 0x40021000) GPIO Structure                                             */
  __IOM uint32_t  DIRCR;                        /*!< (@ 0x00000000) Input/Output direction Register                            */
  __IOM uint32_t  OTYPER;                       /*!< (@ 0x00000004) Output Type register                                       */
  __IOM uint32_t  ODR;                          /*!< (@ 0x00000008) Output Data Register                                       */
  __IOM uint32_t  IDR;                          /*!< (@ 0x0000000C) Input Data Register                                        */
  __IOM uint32_t  INTEN;                        /*!< (@ 0x00000010) Inerrupt Enable Register                                   */
  __IM  uint32_t  RAWINTSR;                     /*!< (@ 0x00000014) Interrupt Raw Status register                              */
  __IM  uint32_t  MSKINTSR;                     /*!< (@ 0x00000018) Interrupt Status Register                                  */
  __OM  uint32_t  INTCLR;                       /*!< (@ 0x0000001C) Interrupt Clear Register                                   */
  __IOM uint32_t  INTTYPCR;                     /*!< (@ 0x00000020) Interrupt Style Register                                   */
  __IOM uint32_t  INTPOLCR;                     /*!< (@ 0x00000024) Interrupt Sytle Value Register                             */
  __IOM uint32_t  INTANY;                       /*!< (@ 0x00000028) Edge Trigger Interrupt Register                            */
  __OM  uint32_t  ODSET;                        /*!< (@ 0x0000002C) Output Setting Register                                    */
  __OM  uint32_t  ODCLR;                        /*!< (@ 0x00000030) Output Clear Register                                      */
  __IOM uint32_t  INDBEN;                       /*!< (@ 0x00000034) Input Debounce and synchronous Enable Register             */
  __IOM uint32_t  DBCLKCR;                      /*!< (@ 0x00000038) Input Debounce clock Config register                       */
  __IOM uint32_t  PUPDR;                        /*!< (@ 0x0000003C) PullUp and PullDown Register                               */
  __IOM uint32_t  SLEWCR;                       /*!< (@ 0x00000040) Voltage Convertion Speed Control                           */
  __IOM uint32_t  DRVCR;                        /*!< (@ 0x00000044) Driver Strength Config                                     */
  __IOM uint32_t  AFRL;                         /*!< (@ 0x00000048) Alternate Function Register (0 ~7)                         */
  __IOM uint32_t  AFRH;                         /*!< (@ 0x0000004C) Alternate Function Register (8 ~ 15)                       */
} GPIO_TypeDef;                                    /*!< Size = 80 (0x50)                                                          */



/* =========================================================================================================================== */
/* ================                                          OBYTES                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Option Bytes as user configuration (OBYTES)
  */

typedef struct {                                /*!< (@ 0x08000000) OBYTES Structure                                           */
  __IM  uint32_t  USERCFG0;                     /*!< (@ 0x00000000) user configuration                                         */
  __IM  uint32_t  USERCFG1;                     /*!< (@ 0x00000004) user configuration                                         */
  __IM  uint32_t  USERCFG2;                     /*!< (@ 0x00000008) user configuration                                         */
} OBYTES_TypeDef;                                  /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                          SYSCFG                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief system configuration of NVR (SYSCFG)
  */

typedef struct {                                /*!< (@ 0x18000000) SYSCFG Structure                                           */
  __IM  uint32_t  WORD0380;                     /*!< (@ 0x00000000) system configuration                                       */
  __IM  uint32_t  RESERVED[31];
  __IM  uint32_t  WORD03A0;                     /*!< (@ 0x00000080) system configuration                                       */
  __IM  uint32_t  WORD03A1;                     /*!< (@ 0x00000084) system configuration                                       */
  __IM  uint32_t  RESERVED1[4];
  __IM  uint32_t  WORD03A6;                     /*!< (@ 0x00000098) system configuration                                       */
  __IM  uint32_t  RESERVED2;
  __IM  uint32_t  WORD03A8;                     /*!< (@ 0x000000A0) system configuration                                       */
  __IM  uint32_t  WORD03A9;                     /*!< (@ 0x000000A4) system configuration                                       */
  __IM  uint32_t  WORD03AA;                     /*!< (@ 0x000000A8) system configuration                                       */
  __IM  uint32_t  RESERVED3;
  __IM  uint32_t  WORD03AC;                     /*!< (@ 0x000000B0) system configuration                                       */
  __IM  uint32_t  WORD03AD;                     /*!< (@ 0x000000B4) system configuration                                       */
  __IM  uint32_t  RESERVED4[2];
  __IM  uint32_t  WORD03B0;                     /*!< (@ 0x000000C0) system configuration                                       */
  __IM  uint32_t  WORD03B1;                     /*!< (@ 0x000000C4) system configuration                                       */
  __IM  uint32_t  WORD03B2;                     /*!< (@ 0x000000C8) system configuration                                       */
  __IM  uint32_t  RESERVED5;
  __IM  uint32_t  WORD03B4;                     /*!< (@ 0x000000D0) system configuration                                       */
  __IM  uint32_t  WORD03B5;                     /*!< (@ 0x000000D4) system configuration                                       */
  __IM  uint32_t  RESERVED6[6];
  __IM  uint32_t  WORD03BC;                     /*!< (@ 0x000000F0) system configuration                                       */
  __IM  uint32_t  WORD03BD;                     /*!< (@ 0x000000F4) system configuration                                       */
  __IM  uint32_t  WORD03BE;                     /*!< (@ 0x000000F8) system configuration                                       */
  __IM  uint32_t  WORD03BF;                     /*!< (@ 0x000000FC) system configuration                                       */
} SYSCFG_TypeDef;                                  /*!< Size = 256 (0x100)                                                        */



/* =========================================================================================================================== */
/* ================                                          SYSCON                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief system control config (SYSCON)
  */

typedef struct {                                /*!< (@ 0x40001C00) SYSCON Structure                                           */
  __IOM uint32_t  CFGR0;                        /*!< (@ 0x00000000) System Control setting regist 0                            */
  __IOM uint32_t  PORTINTCR;                    /*!< (@ 0x00000004) Port interrupt mode setting                                */
  __IOM uint32_t  PORTCR;                       /*!< (@ 0x00000008) PORT control register                                      */
  __IOM uint32_t  PCACR;                        /*!< (@ 0x0000000C) PCA Capture channel source select                          */
  __IOM uint32_t  TIM1CR;                       /*!< (@ 0x00000010) TIM1 Channel Source Select                                 */
  __IOM uint32_t  TIM2CR;                       /*!< (@ 0x00000014) TIM2 Channel Source Select                                 */
  __IOM uint32_t  TIM1ACR;                      /*!< (@ 0x00000018) TIM1A Channel Source Select                                */
  __IOM uint32_t  TIM1BCR;                      /*!< (@ 0x0000001C) TIM1B Channel Source Select                                */
  __IOM uint32_t  TIM2ACR;                      /*!< (@ 0x00000020) TIM2A Channel Source Select                                */
  __IOM uint32_t  TIM2BCR;                      /*!< (@ 0x00000024) TIM2B Channel Source Select                                */
  __IOM uint32_t  TIM2CCR;                      /*!< (@ 0x00000028) TIM2C Channel Source Select                                */
  __IM  uint32_t  RESERVED[9];
  __IOM uint32_t  UNLOCK;                       /*!< (@ 0x00000050) Syscon Register Write Enable                               */
} SYSCON_TypeDef;                                  /*!< Size = 84 (0x54)                                                          */



/* =========================================================================================================================== */
/* ================                                            RCC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Reset and Clock Control (RCC)
  */

typedef struct {                                /*!< (@ 0x40020000) RCC Structure                                              */
  __IOM uint32_t  HCLKDIV;                      /*!< (@ 0x00000000) AHB CLK Prescale                                           */
  __IOM uint32_t  PCLKDIV;                      /*!< (@ 0x00000004) APB CLK Prescale                                           */
  __IOM uint32_t  HCLKEN;                       /*!< (@ 0x00000008) AHB Peripheral Model Clk Enable                            */
  __IOM uint32_t  PCLKEN;                       /*!< (@ 0x0000000C) APB Peripheral Model CLK Enable                            */
  __IOM uint32_t  MCOCR;                        /*!< (@ 0x00000010) Clock Output Control Register                              */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  RSTCR;                        /*!< (@ 0x00000018) System Reset Control                                       */
  __IOM uint32_t  RSTSR;                        /*!< (@ 0x0000001C) Reset Status                                               */
  __IOM uint32_t  SYSCLKCR;                     /*!< (@ 0x00000020) CLK Setting                                                */
  __IOM uint32_t  SYSCLKSEL;                    /*!< (@ 0x00000024) System Clock Select                                        */
  __IOM uint32_t  HIRCCR;                       /*!< (@ 0x00000028) HIRC Control                                               */
  __IOM uint32_t  HXTCR;                        /*!< (@ 0x0000002C) HXT Control                                                */
  __IOM uint32_t  SIRCCR;                       /*!< (@ 0x00000030) SIRC Control                                               */
  __IOM uint32_t  LXTCR;                        /*!< (@ 0x00000034) LXT Control                                                */
  __IOM uint32_t  IRQLATENCY;                   /*!< (@ 0x00000038) M0 IRQ latency                                             */
  __IOM uint32_t  STICKCR;                      /*!< (@ 0x0000003C) SysTick Timer Circle Adjust                                */
  __IOM uint32_t  SWDIOCR;                      /*!< (@ 0x00000040) SWDIO Endpoint Function Select                             */
  __IOM uint32_t  PERIRST;                      /*!< (@ 0x00000044) Peripheral Model Control                                   */
  __IOM uint32_t  RTCRST;                       /*!< (@ 0x00000048) RTC Control                                                */
  __IOM uint32_t  MASK_INT_T;                   /*!< (@ 0x0000004C) mask interrupt time                                        */
  __IM  uint32_t  RESERVED1[4];
  __IOM uint32_t  UNLOCK;                       /*!< (@ 0x00000060) Register Protect                                           */
} RCC_TypeDef;                                     /*!< Size = 100 (0x64)                                                         */


/** @} */ /* End of group Device_Peripheral_peripherals */


/* =========================================================================================================================== */
/* ================                          Device Specific Peripheral Address Map                           ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripheralAddr
  * @{
  */

#define MMP_ALIAS_BASE              0x00000000UL
#define EFLASH_MEM_BASE             0x00000000UL
#define ESRAM_MEM_BASE              0x20000000UL
#define DEV_UID_BASE                0x180000F0UL
#define OPA_BASE                    0x40005400UL
#define VC_BASE                     0x40004080UL
#define VC0_BASE                    0x40004080UL
#define VC1_BASE                    0x40004100UL
#define DBG_BASE                    0x40004C00UL
#define LVD_BASE                    0x40004000UL
#define ADC_BASE                    0x40002C00UL
#define RTC_BASE                    0x40003000UL
#define CLKTRIM_BASE                0x40003400UL
#define OWIRE_BASE                  0x40003800UL
#define SPI_BASE                    0x40000800UL
#define SPI0_BASE                   0x40000800UL
#define SPI1_BASE                   0x40000A00UL
#define I2C_BASE                    0x40000C00UL
#define I2C0_BASE                   0x40000C00UL
#define I2C1_BASE                   0x40000E00UL
#define LPUART_BASE                 0x40005000UL
#define UART_BASE                   0x40000000UL
#define UART0_BASE                  0x40000000UL
#define UART1_BASE                  0x40000400UL
#define UART2_BASE                  0x40000200UL
#define UART3_BASE                  0x40000600UL
#define WWDG_BASE                   0x40002000UL
#define IWDG_BASE                   0x40002400UL
#define BEEP_BASE                   0x40004800UL
#define AWK_BASE                    0x40002800UL
#define LPTIM_BASE                  0x40004400UL
#define BASETIM_BASE                0x40001800UL
#define TIM10_BASE                  0x40001800UL
#define TIM11_BASE                  0x40001900UL
#define PCA_BASE                    0x40001400UL
#define TIM_BASE                    0x40001000UL
#define TIM1_BASE                   0x40001000UL
#define TIM1A_BASE                  0x40001200UL
#define TIM1B_BASE                  0x40001300UL
#define TIM2_BASE                   0x40003C00UL
#define TIM2A_BASE                  0x40003D00UL
#define TIM2B_BASE                  0x40003E00UL
#define TIM2C_BASE                  0x40003F00UL
#define CRC_BASE                    0x40020800UL
#define FLASH_BASE                  0x40020400UL
#define GPIO_BASE                   0x40021000UL
#define GPIOA_BASE                  0x40021000UL
#define GPIOB_BASE                  0x40021400UL
#define GPIOC_BASE                  0x40021800UL
#define GPIOD_BASE                  0x40021C00UL
#define OBYTES_BASE                 0x08000000UL
#define SYSCFG_BASE                 0x18000000UL
#define SYSCON_BASE                 0x40001C00UL
#define RCC_BASE                    0x40020000UL

/** @} */ /* End of group Device_Peripheral_peripheralAddr */


/* =========================================================================================================================== */
/* ================                                  Peripheral declaration                                   ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_declaration
  * @{
  */

#define MMP_ALIAS                   ((MMP_ALIAS_TypeDef*)         MMP_ALIAS_BASE)
#define EFLASH_MEM                  ((MMP_ALIAS_TypeDef*)         EFLASH_MEM_BASE)
#define ESRAM_MEM                   ((MMP_ALIAS_TypeDef*)         ESRAM_MEM_BASE)
#define DEV_UID                     ((MMP_ALIAS_TypeDef*)         DEV_UID_BASE)
#define OPA                         ((OPA_TypeDef*)               OPA_BASE)
#define VC                          ((VC_TypeDef*)                VC_BASE)
#define VC0                         ((VC_TypeDef*)                VC0_BASE)
#define VC1                         ((VC1_TypeDef*)               VC1_BASE)
#define DBG                         ((DBG_TypeDef*)               DBG_BASE)
#define LVD                         ((LVD_TypeDef*)               LVD_BASE)
#define ADC                         ((ADC_TypeDef*)               ADC_BASE)
#define RTC                         ((RTC_TypeDef*)               RTC_BASE)
#define CLKTRIM                     ((CLKTRIM_TypeDef*)           CLKTRIM_BASE)
#define OWIRE                       ((OWIRE_TypeDef*)             OWIRE_BASE)
#define SPI                         ((SPI_TypeDef*)               SPI_BASE)
#define SPI0                        ((SPI_TypeDef*)               SPI0_BASE)
#define SPI1                        ((SPI_TypeDef*)               SPI1_BASE)
#define I2C                         ((I2C_TypeDef*)               I2C_BASE)
#define I2C0                        ((I2C_TypeDef*)               I2C0_BASE)
#define I2C1                        ((I2C_TypeDef*)               I2C1_BASE)
#define LPUART                      ((LPUART_TypeDef*)            LPUART_BASE)
#define UART                        ((UART_TypeDef*)              UART_BASE)
#define UART0                       ((UART_TypeDef*)              UART0_BASE)
#define UART1                       ((UART_TypeDef*)              UART1_BASE)
#define UART2                       ((UART_TypeDef*)              UART2_BASE)
#define UART3                       ((UART_TypeDef*)              UART3_BASE)
#define WWDG                        ((WWDG_TypeDef*)              WWDG_BASE)
#define IWDG                        ((IWDG_TypeDef*)              IWDG_BASE)
#define BEEP                        ((BEEP_TypeDef*)              BEEP_BASE)
#define AWK                         ((AWK_TypeDef*)               AWK_BASE)
#define LPTIM                       ((LPTIM_TypeDef*)             LPTIM_BASE)
#define BASETIM                     ((BASETIM_TypeDef*)           BASETIM_BASE)
#define TIM10                       ((BASETIM_TypeDef*)           TIM10_BASE)
#define TIM11                       ((BASETIM_TypeDef*)           TIM11_BASE)
#define PCA                         ((PCA_TypeDef*)               PCA_BASE)
#define TIM                         ((TIM_TypeDef*)               TIM_BASE)
#define TIM1                        ((TIM_TypeDef*)               TIM1_BASE)
#define TIM1A                       ((TIM_TypeDef*)               TIM1A_BASE)
#define TIM1B                       ((TIM_TypeDef*)               TIM1B_BASE)
#define TIM2                        ((TIM_TypeDef*)               TIM2_BASE)
#define TIM2A                       ((TIM_TypeDef*)               TIM2A_BASE)
#define TIM2B                       ((TIM_TypeDef*)               TIM2B_BASE)
#define TIM2C                       ((TIM_TypeDef*)               TIM2C_BASE)
#define CRC                         ((CRC_TypeDef*)               CRC_BASE)
#define FLASH                       ((FLASH_TypeDef*)             FLASH_BASE)
#define GPIO                        ((GPIO_TypeDef*)              GPIO_BASE)
#define GPIOA                       ((GPIO_TypeDef*)              GPIOA_BASE)
#define GPIOB                       ((GPIO_TypeDef*)              GPIOB_BASE)
#define GPIOC                       ((GPIO_TypeDef*)              GPIOC_BASE)
#define GPIOD                       ((GPIO_TypeDef*)              GPIOD_BASE)
#define OBYTES                      ((OBYTES_TypeDef*)            OBYTES_BASE)
#define SYSCFG                      ((SYSCFG_TypeDef*)            SYSCFG_BASE)
#define SYSCON                      ((SYSCON_TypeDef*)            SYSCON_BASE)
#define RCC                         ((RCC_TypeDef*)               RCC_BASE)

/** @} */ /* End of group Device_Peripheral_declaration */


/* =========================================  End of section using anonymous unions  ========================================= */
#if defined (__CC_ARM)
  #pragma pop
#elif defined (__ICCARM__)
  /* leave anonymous unions enabled */
#elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic pop
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning restore
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#endif


/* =========================================================================================================================== */
/* ================                                Pos/Mask Peripheral Section                                ================ */
/* =========================================================================================================================== */


/** @addtogroup PosMask_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                         MMP_ALIAS                                         ================ */
/* =========================================================================================================================== */

/* =========================================================  DATA0  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            OPA                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  OP1_CR0  ======================================================== */
#define OPA_OP1_CR0_OP1EN_Pos             (0UL)                     /*!< OP1EN (Bit 0)                                         */
#define OPA_OP1_CR0_OP1EN_Msk             (0x1UL)                   /*!< OP1EN (Bitfield-Mask: 0x01)                           */
#define OPA_OP1_CR0_OP1EN                      OPA_OP1_CR0_OP1EN_Msk
#define OPA_OP1_CR0_SW1PVSS_Pos           (1UL)                     /*!< SW1PVSS (Bit 1)                                       */
#define OPA_OP1_CR0_SW1PVSS_Msk           (0x2UL)                   /*!< SW1PVSS (Bitfield-Mask: 0x01)                         */
#define OPA_OP1_CR0_SW1PVSS                      OPA_OP1_CR0_SW1PVSS_Msk
#define OPA_OP1_CR0_SW1NVSS_Pos           (2UL)                     /*!< SW1NVSS (Bit 2)                                       */
#define OPA_OP1_CR0_SW1NVSS_Msk           (0x4UL)                   /*!< SW1NVSS (Bitfield-Mask: 0x01)                         */
#define OPA_OP1_CR0_SW1NVSS                      OPA_OP1_CR0_SW1NVSS_Msk
#define OPA_OP1_CR0_SW1_0_Pos             (16UL)                    /*!< SW1_0 (Bit 16)                                        */
#define OPA_OP1_CR0_SW1_0_Msk             (0x10000UL)               /*!< SW1_0 (Bitfield-Mask: 0x01)                           */
#define OPA_OP1_CR0_SW1_0                      OPA_OP1_CR0_SW1_0_Msk
#define OPA_OP1_CR0_SW1_1_Pos             (17UL)                    /*!< SW1_1 (Bit 17)                                        */
#define OPA_OP1_CR0_SW1_1_Msk             (0x20000UL)               /*!< SW1_1 (Bitfield-Mask: 0x01)                           */
#define OPA_OP1_CR0_SW1_1                      OPA_OP1_CR0_SW1_1_Msk
#define OPA_OP1_CR0_SW1_2_Pos             (18UL)                    /*!< SW1_2 (Bit 18)                                        */
#define OPA_OP1_CR0_SW1_2_Msk             (0x40000UL)               /*!< SW1_2 (Bitfield-Mask: 0x01)                           */
#define OPA_OP1_CR0_SW1_2                      OPA_OP1_CR0_SW1_2_Msk
#define OPA_OP1_CR0_SW1_7_Pos             (23UL)                    /*!< SW1_7 (Bit 23)                                        */
#define OPA_OP1_CR0_SW1_7_Msk             (0x800000UL)              /*!< SW1_7 (Bitfield-Mask: 0x01)                           */
#define OPA_OP1_CR0_SW1_7                      OPA_OP1_CR0_SW1_7_Msk
#define OPA_OP1_CR0_SW12EN_Pos            (31UL)                    /*!< SW12EN (Bit 31)                                       */
#define OPA_OP1_CR0_SW12EN_Msk            (0x80000000UL)            /*!< SW12EN (Bitfield-Mask: 0x01)                          */
#define OPA_OP1_CR0_SW12EN                      OPA_OP1_CR0_SW12EN_Msk
/* ========================================================  OP2_CR0  ======================================================== */
#define OPA_OP2_CR0_OP2EN_Pos             (0UL)                     /*!< OP2EN (Bit 0)                                         */
#define OPA_OP2_CR0_OP2EN_Msk             (0x1UL)                   /*!< OP2EN (Bitfield-Mask: 0x01)                           */
#define OPA_OP2_CR0_OP2EN                      OPA_OP2_CR0_OP2EN_Msk
#define OPA_OP2_CR0_SW2PVSS_Pos           (1UL)                     /*!< SW2PVSS (Bit 1)                                       */
#define OPA_OP2_CR0_SW2PVSS_Msk           (0x2UL)                   /*!< SW2PVSS (Bitfield-Mask: 0x01)                         */
#define OPA_OP2_CR0_SW2PVSS                      OPA_OP2_CR0_SW2PVSS_Msk
#define OPA_OP2_CR0_SW2NVSS_Pos           (2UL)                     /*!< SW2NVSS (Bit 2)                                       */
#define OPA_OP2_CR0_SW2NVSS_Msk           (0x4UL)                   /*!< SW2NVSS (Bitfield-Mask: 0x01)                         */
#define OPA_OP2_CR0_SW2NVSS                      OPA_OP2_CR0_SW2NVSS_Msk
#define OPA_OP2_CR0_SW2_Pos               (16UL)                    /*!< SW2 (Bit 16)                                          */
#define OPA_OP2_CR0_SW2_Msk               (0xff0000UL)              /*!< SW2 (Bitfield-Mask: 0xff)                             */
#define OPA_OP2_CR0_SW2                      OPA_OP2_CR0_SW2_Msk
/* =======================================================  OPDAC_CR  ======================================================== */
#define OPA_OPDAC_CR_OPDAC_Pos            (0UL)                     /*!< OPDAC (Bit 0)                                         */
#define OPA_OPDAC_CR_OPDAC_Msk            (0x3fUL)                  /*!< OPDAC (Bitfield-Mask: 0x3f)                           */
#define OPA_OPDAC_CR_OPDAC                      OPA_OPDAC_CR_OPDAC_Msk
#define OPA_OPDAC_CR_OPDAC_EN_Pos         (8UL)                     /*!< OPDAC_EN (Bit 8)                                      */
#define OPA_OPDAC_CR_OPDAC_EN_Msk         (0x100UL)                 /*!< OPDAC_EN (Bitfield-Mask: 0x01)                        */
#define OPA_OPDAC_CR_OPDAC_EN                      OPA_OPDAC_CR_OPDAC_EN_Msk
#define OPA_OPDAC_CR_OPDAC_BUF_EN_Pos     (9UL)                     /*!< OPDAC_BUF_EN (Bit 9)                                  */
#define OPA_OPDAC_CR_OPDAC_BUF_EN_Msk     (0x200UL)                 /*!< OPDAC_BUF_EN (Bitfield-Mask: 0x01)                    */
#define OPA_OPDAC_CR_OPDAC_BUF_EN                      OPA_OPDAC_CR_OPDAC_BUF_EN_Msk
#define OPA_OPDAC_CR_OPDAC_VREF_Pos       (10UL)                    /*!< OPDAC_VREF (Bit 10)                                   */
#define OPA_OPDAC_CR_OPDAC_VREF_Msk       (0x400UL)                 /*!< OPDAC_VREF (Bitfield-Mask: 0x01)                      */
#define OPA_OPDAC_CR_OPDAC_VREF                      OPA_OPDAC_CR_OPDAC_VREF_Msk


/* =========================================================================================================================== */
/* ================                                            VC                                             ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR0  ========================================================== */
#define VC_CR0_VPxINSEL_Pos               (0UL)                     /*!< VPxINSEL (Bit 0)                                      */
#define VC_CR0_VPxINSEL_Msk               (0xfUL)                   /*!< VPxINSEL (Bitfield-Mask: 0x0f)                        */
#define VC_CR0_VPxINSEL                      VC_CR0_VPxINSEL_Msk
#define VC_CR0_VNxINSEL_Pos               (8UL)                     /*!< VNxINSEL (Bit 8)                                      */
#define VC_CR0_VNxINSEL_Msk               (0xf00UL)                 /*!< VNxINSEL (Bitfield-Mask: 0x0f)                        */
#define VC_CR0_VNxINSEL                      VC_CR0_VNxINSEL_Msk
#define VC_CR0_DACVREF_Pos                (12UL)                    /*!< DACVREF (Bit 12)                                      */
#define VC_CR0_DACVREF_Msk                (0x1000UL)                /*!< DACVREF (Bitfield-Mask: 0x01)                         */
#define VC_CR0_DACVREF                      VC_CR0_DACVREF_Msk
#define VC_CR0_DAC_CxO_Pos                (16UL)                    /*!< DAC_CxO (Bit 16)                                      */
#define VC_CR0_DAC_CxO_Msk                (0x3f0000UL)              /*!< DAC_CxO (Bitfield-Mask: 0x3f)                         */
#define VC_CR0_DAC_CxO                      VC_CR0_DAC_CxO_Msk
#define VC_CR0_DAC_CxEN_Pos               (22UL)                    /*!< DAC_CxEN (Bit 22)                                     */
#define VC_CR0_DAC_CxEN_Msk               (0x400000UL)              /*!< DAC_CxEN (Bitfield-Mask: 0x01)                        */
#define VC_CR0_DAC_CxEN                      VC_CR0_DAC_CxEN_Msk
/* ==========================================================  CR1  ========================================================== */
#define VC_CR1_VCEN_Pos                   (0UL)                     /*!< VCEN (Bit 0)                                          */
#define VC_CR1_VCEN_Msk                   (0x1UL)                   /*!< VCEN (Bitfield-Mask: 0x01)                            */
#define VC_CR1_VCEN                      VC_CR1_VCEN_Msk
#define VC_CR1_VCHY_EN_Pos                (1UL)                     /*!< VCHY_EN (Bit 1)                                       */
#define VC_CR1_VCHY_EN_Msk                (0x2UL)                   /*!< VCHY_EN (Bitfield-Mask: 0x01)                         */
#define VC_CR1_VCHY_EN                      VC_CR1_VCHY_EN_Msk
#define VC_CR1_FLTCLK_SEL_Pos             (2UL)                     /*!< FLTCLK_SEL (Bit 2)                                    */
#define VC_CR1_FLTCLK_SEL_Msk             (0xcUL)                   /*!< FLTCLK_SEL (Bitfield-Mask: 0x03)                      */
#define VC_CR1_FLTCLK_SEL                      VC_CR1_FLTCLK_SEL_Msk
#define VC_CR1_FLTEN_Pos                  (8UL)                     /*!< FLTEN (Bit 8)                                         */
#define VC_CR1_FLTEN_Msk                  (0x100UL)                 /*!< FLTEN (Bitfield-Mask: 0x01)                           */
#define VC_CR1_FLTEN                      VC_CR1_FLTEN_Msk
#define VC_CR1_FALLINTEN_Pos              (12UL)                    /*!< FALLINTEN (Bit 12)                                    */
#define VC_CR1_FALLINTEN_Msk              (0x1000UL)                /*!< FALLINTEN (Bitfield-Mask: 0x01)                       */
#define VC_CR1_FALLINTEN                      VC_CR1_FALLINTEN_Msk
#define VC_CR1_RISEINTEN_Pos              (13UL)                    /*!< RISEINTEN (Bit 13)                                    */
#define VC_CR1_RISEINTEN_Msk              (0x2000UL)                /*!< RISEINTEN (Bitfield-Mask: 0x01)                       */
#define VC_CR1_RISEINTEN                      VC_CR1_RISEINTEN_Msk
#define VC_CR1_HIGHINTEN_Pos              (14UL)                    /*!< HIGHINTEN (Bit 14)                                    */
#define VC_CR1_HIGHINTEN_Msk              (0x4000UL)                /*!< HIGHINTEN (Bitfield-Mask: 0x01)                       */
#define VC_CR1_HIGHINTEN                      VC_CR1_HIGHINTEN_Msk
#define VC_CR1_INT_EN_Pos                 (15UL)                    /*!< INT_EN (Bit 15)                                       */
#define VC_CR1_INT_EN_Msk                 (0x8000UL)                /*!< INT_EN (Bitfield-Mask: 0x01)                          */
#define VC_CR1_INT_EN                      VC_CR1_INT_EN_Msk
#define VC_CR1_FLT_NUM_Pos                (16UL)                    /*!< FLT_NUM (Bit 16)                                      */
#define VC_CR1_FLT_NUM_Msk                (0xffff0000UL)            /*!< FLT_NUM (Bitfield-Mask: 0xffff)                       */
#define VC_CR1_FLT_NUM                      VC_CR1_FLT_NUM_Msk
/* ========================================================  OUTCFG  ========================================================= */
#define VC_OUTCFG_INV_TIMX_Pos            (0UL)                     /*!< INV_TIMX (Bit 0)                                      */
#define VC_OUTCFG_INV_TIMX_Msk            (0x1UL)                   /*!< INV_TIMX (Bitfield-Mask: 0x01)                        */
#define VC_OUTCFG_INV_TIMX                      VC_OUTCFG_INV_TIMX_Msk
#define VC_OUTCFG_TIM10_EN_Pos            (1UL)                     /*!< TIM10_EN (Bit 1)                                      */
#define VC_OUTCFG_TIM10_EN_Msk            (0x2UL)                   /*!< TIM10_EN (Bitfield-Mask: 0x01)                        */
#define VC_OUTCFG_TIM10_EN                      VC_OUTCFG_TIM10_EN_Msk
#define VC_OUTCFG_TIM11_EN_Pos            (2UL)                     /*!< TIM11_EN (Bit 2)                                      */
#define VC_OUTCFG_TIM11_EN_Msk            (0x4UL)                   /*!< TIM11_EN (Bitfield-Mask: 0x01)                        */
#define VC_OUTCFG_TIM11_EN                      VC_OUTCFG_TIM11_EN_Msk
#define VC_OUTCFG_LPTIM_EN_Pos            (4UL)                     /*!< LPTIM_EN (Bit 4)                                      */
#define VC_OUTCFG_LPTIM_EN_Msk            (0x10UL)                  /*!< LPTIM_EN (Bitfield-Mask: 0x01)                        */
#define VC_OUTCFG_LPTIM_EN                      VC_OUTCFG_LPTIM_EN_Msk
#define VC_OUTCFG_LPTIMEXT_EN_Pos         (5UL)                     /*!< LPTIMEXT_EN (Bit 5)                                   */
#define VC_OUTCFG_LPTIMEXT_EN_Msk         (0x20UL)                  /*!< LPTIMEXT_EN (Bitfield-Mask: 0x01)                     */
#define VC_OUTCFG_LPTIMEXT_EN                      VC_OUTCFG_LPTIMEXT_EN_Msk
#define VC_OUTCFG_INV_PCA_Pos             (6UL)                     /*!< INV_PCA (Bit 6)                                       */
#define VC_OUTCFG_INV_PCA_Msk             (0x40UL)                  /*!< INV_PCA (Bitfield-Mask: 0x01)                         */
#define VC_OUTCFG_INV_PCA                      VC_OUTCFG_INV_PCA_Msk
#define VC_OUTCFG_PCACAP0_EN_Pos          (7UL)                     /*!< PCACAP0_EN (Bit 7)                                    */
#define VC_OUTCFG_PCACAP0_EN_Msk          (0x80UL)                  /*!< PCACAP0_EN (Bitfield-Mask: 0x01)                      */
#define VC_OUTCFG_PCACAP0_EN                      VC_OUTCFG_PCACAP0_EN_Msk
#define VC_OUTCFG_PCAECI_EN_Pos           (8UL)                     /*!< PCAECI_EN (Bit 8)                                     */
#define VC_OUTCFG_PCAECI_EN_Msk           (0x100UL)                 /*!< PCAECI_EN (Bitfield-Mask: 0x01)                       */
#define VC_OUTCFG_PCAECI_EN                      VC_OUTCFG_PCAECI_EN_Msk
#define VC_OUTCFG_INV_TM1CH1_Pos          (9UL)                     /*!< INV_TM1CH1 (Bit 9)                                    */
#define VC_OUTCFG_INV_TM1CH1_Msk          (0x200UL)                 /*!< INV_TM1CH1 (Bitfield-Mask: 0x01)                      */
#define VC_OUTCFG_INV_TM1CH1                      VC_OUTCFG_INV_TM1CH1_Msk
#define VC_OUTCFG_TM1CH1_EN_Pos           (10UL)                    /*!< TM1CH1_EN (Bit 10)                                    */
#define VC_OUTCFG_TM1CH1_EN_Msk           (0x400UL)                 /*!< TM1CH1_EN (Bitfield-Mask: 0x01)                       */
#define VC_OUTCFG_TM1CH1_EN                      VC_OUTCFG_TM1CH1_EN_Msk
#define VC_OUTCFG_INV_TM1CH2_Pos          (11UL)                    /*!< INV_TM1CH2 (Bit 11)                                   */
#define VC_OUTCFG_INV_TM1CH2_Msk          (0x800UL)                 /*!< INV_TM1CH2 (Bitfield-Mask: 0x01)                      */
#define VC_OUTCFG_INV_TM1CH2                      VC_OUTCFG_INV_TM1CH2_Msk
#define VC_OUTCFG_TM1CH2_EN_Pos           (12UL)                    /*!< TM1CH2_EN (Bit 12)                                    */
#define VC_OUTCFG_TM1CH2_EN_Msk           (0x1000UL)                /*!< TM1CH2_EN (Bitfield-Mask: 0x01)                       */
#define VC_OUTCFG_TM1CH2_EN                      VC_OUTCFG_TM1CH2_EN_Msk
#define VC_OUTCFG_INV_TM1CH3_Pos          (13UL)                    /*!< INV_TM1CH3 (Bit 13)                                   */
#define VC_OUTCFG_INV_TM1CH3_Msk          (0x2000UL)                /*!< INV_TM1CH3 (Bitfield-Mask: 0x01)                      */
#define VC_OUTCFG_INV_TM1CH3                      VC_OUTCFG_INV_TM1CH3_Msk
#define VC_OUTCFG_TIM1CH3_EN_Pos          (14UL)                    /*!< TIM1CH3_EN (Bit 14)                                   */
#define VC_OUTCFG_TIM1CH3_EN_Msk          (0x4000UL)                /*!< TIM1CH3_EN (Bitfield-Mask: 0x01)                      */
#define VC_OUTCFG_TIM1CH3_EN                      VC_OUTCFG_TIM1CH3_EN_Msk
#define VC_OUTCFG_INV_TM1CH4_Pos          (15UL)                    /*!< INV_TM1CH4 (Bit 15)                                   */
#define VC_OUTCFG_INV_TM1CH4_Msk          (0x8000UL)                /*!< INV_TM1CH4 (Bitfield-Mask: 0x01)                      */
#define VC_OUTCFG_INV_TM1CH4                      VC_OUTCFG_INV_TM1CH4_Msk
#define VC_OUTCFG_TM1CH4_EN_Pos           (16UL)                    /*!< TM1CH4_EN (Bit 16)                                    */
#define VC_OUTCFG_TM1CH4_EN_Msk           (0x10000UL)               /*!< TM1CH4_EN (Bitfield-Mask: 0x01)                       */
#define VC_OUTCFG_TM1CH4_EN                      VC_OUTCFG_TM1CH4_EN_Msk
#define VC_OUTCFG_TM1BKE_Pos              (17UL)                    /*!< TM1BKE (Bit 17)                                       */
#define VC_OUTCFG_TM1BKE_Msk              (0x20000UL)               /*!< TM1BKE (Bitfield-Mask: 0x01)                          */
#define VC_OUTCFG_TM1BKE                      VC_OUTCFG_TM1BKE_Msk
#define VC_OUTCFG_INV_PAD_Pos             (18UL)                    /*!< INV_PAD (Bit 18)                                      */
#define VC_OUTCFG_INV_PAD_Msk             (0x40000UL)               /*!< INV_PAD (Bitfield-Mask: 0x01)                         */
#define VC_OUTCFG_INV_PAD                      VC_OUTCFG_INV_PAD_Msk
/* ==========================================================  SR  =========================================================== */
#define VC_SR_INTF_Pos                    (0UL)                     /*!< INTF (Bit 0)                                          */
#define VC_SR_INTF_Msk                    (0x1UL)                   /*!< INTF (Bitfield-Mask: 0x01)                            */
#define VC_SR_INTF                      VC_SR_INTF_Msk
#define VC_SR_VC_FLOUT_Pos                (1UL)                     /*!< VC_FLOUT (Bit 1)                                      */
#define VC_SR_VC_FLOUT_Msk                (0x2UL)                   /*!< VC_FLOUT (Bitfield-Mask: 0x01)                        */
#define VC_SR_VC_FLOUT                      VC_SR_VC_FLOUT_Msk


/* =========================================================================================================================== */
/* ================                                            VC1                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR0  ========================================================== */
#define VC1_CR0_VPxINSEL_Pos              (0UL)                     /*!< VPxINSEL (Bit 0)                                      */
#define VC1_CR0_VPxINSEL_Msk              (0xfUL)                   /*!< VPxINSEL (Bitfield-Mask: 0x0f)                        */
#define VC1_CR0_VPxINSEL                      VC1_CR0_VPxINSEL_Msk
#define VC1_CR0_VNxINSEL_Pos              (8UL)                     /*!< VNxINSEL (Bit 8)                                      */
#define VC1_CR0_VNxINSEL_Msk              (0xf00UL)                 /*!< VNxINSEL (Bitfield-Mask: 0x0f)                        */
#define VC1_CR0_VNxINSEL                      VC1_CR0_VNxINSEL_Msk
#define VC1_CR0_DAC_CxO_Pos               (16UL)                    /*!< DAC_CxO (Bit 16)                                      */
#define VC1_CR0_DAC_CxO_Msk               (0x3f0000UL)              /*!< DAC_CxO (Bitfield-Mask: 0x3f)                         */
#define VC1_CR0_DAC_CxO                      VC1_CR0_DAC_CxO_Msk
/* ==========================================================  CR1  ========================================================== */
#define VC1_CR1_VCEN_Pos                  (0UL)                     /*!< VCEN (Bit 0)                                          */
#define VC1_CR1_VCEN_Msk                  (0x1UL)                   /*!< VCEN (Bitfield-Mask: 0x01)                            */
#define VC1_CR1_VCEN                      VC1_CR1_VCEN_Msk
#define VC1_CR1_VCHY_EN_Pos               (1UL)                     /*!< VCHY_EN (Bit 1)                                       */
#define VC1_CR1_VCHY_EN_Msk               (0x2UL)                   /*!< VCHY_EN (Bitfield-Mask: 0x01)                         */
#define VC1_CR1_VCHY_EN                      VC1_CR1_VCHY_EN_Msk
#define VC1_CR1_FLTCLK_SEL_Pos            (2UL)                     /*!< FLTCLK_SEL (Bit 2)                                    */
#define VC1_CR1_FLTCLK_SEL_Msk            (0xcUL)                   /*!< FLTCLK_SEL (Bitfield-Mask: 0x03)                      */
#define VC1_CR1_FLTCLK_SEL                      VC1_CR1_FLTCLK_SEL_Msk
#define VC1_CR1_FLTEN_Pos                 (8UL)                     /*!< FLTEN (Bit 8)                                         */
#define VC1_CR1_FLTEN_Msk                 (0x100UL)                 /*!< FLTEN (Bitfield-Mask: 0x01)                           */
#define VC1_CR1_FLTEN                      VC1_CR1_FLTEN_Msk
#define VC1_CR1_FALLINTEN_Pos             (12UL)                    /*!< FALLINTEN (Bit 12)                                    */
#define VC1_CR1_FALLINTEN_Msk             (0x1000UL)                /*!< FALLINTEN (Bitfield-Mask: 0x01)                       */
#define VC1_CR1_FALLINTEN                      VC1_CR1_FALLINTEN_Msk
#define VC1_CR1_RISEINTEN_Pos             (13UL)                    /*!< RISEINTEN (Bit 13)                                    */
#define VC1_CR1_RISEINTEN_Msk             (0x2000UL)                /*!< RISEINTEN (Bitfield-Mask: 0x01)                       */
#define VC1_CR1_RISEINTEN                      VC1_CR1_RISEINTEN_Msk
#define VC1_CR1_HIGHINTEN_Pos             (14UL)                    /*!< HIGHINTEN (Bit 14)                                    */
#define VC1_CR1_HIGHINTEN_Msk             (0x4000UL)                /*!< HIGHINTEN (Bitfield-Mask: 0x01)                       */
#define VC1_CR1_HIGHINTEN                      VC1_CR1_HIGHINTEN_Msk
#define VC1_CR1_INT_EN_Pos                (15UL)                    /*!< INT_EN (Bit 15)                                       */
#define VC1_CR1_INT_EN_Msk                (0x8000UL)                /*!< INT_EN (Bitfield-Mask: 0x01)                          */
#define VC1_CR1_INT_EN                      VC1_CR1_INT_EN_Msk
#define VC1_CR1_FLT_NUM_Pos               (16UL)                    /*!< FLT_NUM (Bit 16)                                      */
#define VC1_CR1_FLT_NUM_Msk               (0xffff0000UL)            /*!< FLT_NUM (Bitfield-Mask: 0xffff)                       */
#define VC1_CR1_FLT_NUM                      VC1_CR1_FLT_NUM_Msk
/* ========================================================  OUTCFG  ========================================================= */
#define VC1_OUTCFG_INV_TM1ACH1_Pos        (9UL)                     /*!< INV_TM1ACH1 (Bit 9)                                   */
#define VC1_OUTCFG_INV_TM1ACH1_Msk        (0x200UL)                 /*!< INV_TM1ACH1 (Bitfield-Mask: 0x01)                     */
#define VC1_OUTCFG_INV_TM1ACH1                      VC1_OUTCFG_INV_TM1ACH1_Msk
#define VC1_OUTCFG_TM1ACH1_EN_Pos         (10UL)                    /*!< TM1ACH1_EN (Bit 10)                                   */
#define VC1_OUTCFG_TM1ACH1_EN_Msk         (0x400UL)                 /*!< TM1ACH1_EN (Bitfield-Mask: 0x01)                      */
#define VC1_OUTCFG_TM1ACH1_EN                      VC1_OUTCFG_TM1ACH1_EN_Msk
#define VC1_OUTCFG_INV_TM1ACH2_Pos        (11UL)                    /*!< INV_TM1ACH2 (Bit 11)                                  */
#define VC1_OUTCFG_INV_TM1ACH2_Msk        (0x800UL)                 /*!< INV_TM1ACH2 (Bitfield-Mask: 0x01)                     */
#define VC1_OUTCFG_INV_TM1ACH2                      VC1_OUTCFG_INV_TM1ACH2_Msk
#define VC1_OUTCFG_TM1ACH2_EN_Pos         (12UL)                    /*!< TM1ACH2_EN (Bit 12)                                   */
#define VC1_OUTCFG_TM1ACH2_EN_Msk         (0x1000UL)                /*!< TM1ACH2_EN (Bitfield-Mask: 0x01)                      */
#define VC1_OUTCFG_TM1ACH2_EN                      VC1_OUTCFG_TM1ACH2_EN_Msk
#define VC1_OUTCFG_INV_TM1ACH3_Pos        (13UL)                    /*!< INV_TM1ACH3 (Bit 13)                                  */
#define VC1_OUTCFG_INV_TM1ACH3_Msk        (0x2000UL)                /*!< INV_TM1ACH3 (Bitfield-Mask: 0x01)                     */
#define VC1_OUTCFG_INV_TM1ACH3                      VC1_OUTCFG_INV_TM1ACH3_Msk
#define VC1_OUTCFG_TIM1ACH3_EN_Pos        (14UL)                    /*!< TIM1ACH3_EN (Bit 14)                                  */
#define VC1_OUTCFG_TIM1ACH3_EN_Msk        (0x4000UL)                /*!< TIM1ACH3_EN (Bitfield-Mask: 0x01)                     */
#define VC1_OUTCFG_TIM1ACH3_EN                      VC1_OUTCFG_TIM1ACH3_EN_Msk
#define VC1_OUTCFG_INV_TM1ACH4_Pos        (15UL)                    /*!< INV_TM1ACH4 (Bit 15)                                  */
#define VC1_OUTCFG_INV_TM1ACH4_Msk        (0x8000UL)                /*!< INV_TM1ACH4 (Bitfield-Mask: 0x01)                     */
#define VC1_OUTCFG_INV_TM1ACH4                      VC1_OUTCFG_INV_TM1ACH4_Msk
#define VC1_OUTCFG_TM1ACH4_EN_Pos         (16UL)                    /*!< TM1ACH4_EN (Bit 16)                                   */
#define VC1_OUTCFG_TM1ACH4_EN_Msk         (0x10000UL)               /*!< TM1ACH4_EN (Bitfield-Mask: 0x01)                      */
#define VC1_OUTCFG_TM1ACH4_EN                      VC1_OUTCFG_TM1ACH4_EN_Msk
#define VC1_OUTCFG_TM1ABKE_Pos            (17UL)                    /*!< TM1ABKE (Bit 17)                                      */
#define VC1_OUTCFG_TM1ABKE_Msk            (0x20000UL)               /*!< TM1ABKE (Bitfield-Mask: 0x01)                         */
#define VC1_OUTCFG_TM1ABKE                      VC1_OUTCFG_TM1ABKE_Msk
#define VC1_OUTCFG_INV_PAD_Pos            (18UL)                    /*!< INV_PAD (Bit 18)                                      */
#define VC1_OUTCFG_INV_PAD_Msk            (0x40000UL)               /*!< INV_PAD (Bitfield-Mask: 0x01)                         */
#define VC1_OUTCFG_INV_PAD                      VC1_OUTCFG_INV_PAD_Msk
/* ==========================================================  SR  =========================================================== */
#define VC1_SR_INTF_Pos                   (0UL)                     /*!< INTF (Bit 0)                                          */
#define VC1_SR_INTF_Msk                   (0x1UL)                   /*!< INTF (Bitfield-Mask: 0x01)                            */
#define VC1_SR_INTF                      VC1_SR_INTF_Msk
#define VC1_SR_VC_FLOUT_Pos               (1UL)                     /*!< VC_FLOUT (Bit 1)                                      */
#define VC1_SR_VC_FLOUT_Msk               (0x2UL)                   /*!< VC_FLOUT (Bitfield-Mask: 0x01)                        */
#define VC1_SR_VC_FLOUT                      VC1_SR_VC_FLOUT_Msk


/* =========================================================================================================================== */
/* ================                                            DBG                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  APBFZ  ========================================================= */
#define DBG_APBFZ_TIM10DBGSTOP_Pos        (0UL)                     /*!< TIM10DBGSTOP (Bit 0)                                  */
#define DBG_APBFZ_TIM10DBGSTOP_Msk        (0x1UL)                   /*!< TIM10DBGSTOP (Bitfield-Mask: 0x01)                    */
#define DBG_APBFZ_TIM10DBGSTOP                      DBG_APBFZ_TIM10DBGSTOP_Msk
#define DBG_APBFZ_TIM11DBGSTOP_Pos        (1UL)                     /*!< TIM11DBGSTOP (Bit 1)                                  */
#define DBG_APBFZ_TIM11DBGSTOP_Msk        (0x2UL)                   /*!< TIM11DBGSTOP (Bitfield-Mask: 0x01)                    */
#define DBG_APBFZ_TIM11DBGSTOP                      DBG_APBFZ_TIM11DBGSTOP_Msk
#define DBG_APBFZ_LPTIMDBGSTOP_Pos        (2UL)                     /*!< LPTIMDBGSTOP (Bit 2)                                  */
#define DBG_APBFZ_LPTIMDBGSTOP_Msk        (0x4UL)                   /*!< LPTIMDBGSTOP (Bitfield-Mask: 0x01)                    */
#define DBG_APBFZ_LPTIMDBGSTOP                      DBG_APBFZ_LPTIMDBGSTOP_Msk
#define DBG_APBFZ_TIM1ADBGSTOP_Pos        (3UL)                     /*!< TIM1ADBGSTOP (Bit 3)                                  */
#define DBG_APBFZ_TIM1ADBGSTOP_Msk        (0x8UL)                   /*!< TIM1ADBGSTOP (Bitfield-Mask: 0x01)                    */
#define DBG_APBFZ_TIM1ADBGSTOP                      DBG_APBFZ_TIM1ADBGSTOP_Msk
#define DBG_APBFZ_PCADBGSTOP_Pos          (4UL)                     /*!< PCADBGSTOP (Bit 4)                                    */
#define DBG_APBFZ_PCADBGSTOP_Msk          (0x10UL)                  /*!< PCADBGSTOP (Bitfield-Mask: 0x01)                      */
#define DBG_APBFZ_PCADBGSTOP                      DBG_APBFZ_PCADBGSTOP_Msk
#define DBG_APBFZ_TIM1DBGSTOP_Pos         (5UL)                     /*!< TIM1DBGSTOP (Bit 5)                                   */
#define DBG_APBFZ_TIM1DBGSTOP_Msk         (0x20UL)                  /*!< TIM1DBGSTOP (Bitfield-Mask: 0x01)                     */
#define DBG_APBFZ_TIM1DBGSTOP                      DBG_APBFZ_TIM1DBGSTOP_Msk
#define DBG_APBFZ_RTCDBGSTOP_Pos          (6UL)                     /*!< RTCDBGSTOP (Bit 6)                                    */
#define DBG_APBFZ_RTCDBGSTOP_Msk          (0x40UL)                  /*!< RTCDBGSTOP (Bitfield-Mask: 0x01)                      */
#define DBG_APBFZ_RTCDBGSTOP                      DBG_APBFZ_RTCDBGSTOP_Msk
#define DBG_APBFZ_TIM1BDBGSTOP_Pos        (7UL)                     /*!< TIM1BDBGSTOP (Bit 7)                                  */
#define DBG_APBFZ_TIM1BDBGSTOP_Msk        (0x80UL)                  /*!< TIM1BDBGSTOP (Bitfield-Mask: 0x01)                    */
#define DBG_APBFZ_TIM1BDBGSTOP                      DBG_APBFZ_TIM1BDBGSTOP_Msk
#define DBG_APBFZ_BEEPDBGSTOP_Pos         (8UL)                     /*!< BEEPDBGSTOP (Bit 8)                                   */
#define DBG_APBFZ_BEEPDBGSTOP_Msk         (0x100UL)                 /*!< BEEPDBGSTOP (Bitfield-Mask: 0x01)                     */
#define DBG_APBFZ_BEEPDBGSTOP                      DBG_APBFZ_BEEPDBGSTOP_Msk
#define DBG_APBFZ_IWDGDBGSTOP_Pos         (9UL)                     /*!< IWDGDBGSTOP (Bit 9)                                   */
#define DBG_APBFZ_IWDGDBGSTOP_Msk         (0x200UL)                 /*!< IWDGDBGSTOP (Bitfield-Mask: 0x01)                     */
#define DBG_APBFZ_IWDGDBGSTOP                      DBG_APBFZ_IWDGDBGSTOP_Msk
#define DBG_APBFZ_WWDGDBGSTOP_Pos         (10UL)                    /*!< WWDGDBGSTOP (Bit 10)                                  */
#define DBG_APBFZ_WWDGDBGSTOP_Msk         (0x400UL)                 /*!< WWDGDBGSTOP (Bitfield-Mask: 0x01)                     */
#define DBG_APBFZ_WWDGDBGSTOP                      DBG_APBFZ_WWDGDBGSTOP_Msk
#define DBG_APBFZ_TIM2DBGSTOP_Pos         (11UL)                    /*!< TIM2DBGSTOP (Bit 11)                                  */
#define DBG_APBFZ_TIM2DBGSTOP_Msk         (0x800UL)                 /*!< TIM2DBGSTOP (Bitfield-Mask: 0x01)                     */
#define DBG_APBFZ_TIM2DBGSTOP                      DBG_APBFZ_TIM2DBGSTOP_Msk
#define DBG_APBFZ_TIM2ADBGSTOP_Pos        (12UL)                    /*!< TIM2ADBGSTOP (Bit 12)                                 */
#define DBG_APBFZ_TIM2ADBGSTOP_Msk        (0x1000UL)                /*!< TIM2ADBGSTOP (Bitfield-Mask: 0x01)                    */
#define DBG_APBFZ_TIM2ADBGSTOP                      DBG_APBFZ_TIM2ADBGSTOP_Msk
#define DBG_APBFZ_TIM2BDBGSTOP_Pos        (13UL)                    /*!< TIM2BDBGSTOP (Bit 13)                                 */
#define DBG_APBFZ_TIM2BDBGSTOP_Msk        (0x2000UL)                /*!< TIM2BDBGSTOP (Bitfield-Mask: 0x01)                    */
#define DBG_APBFZ_TIM2BDBGSTOP                      DBG_APBFZ_TIM2BDBGSTOP_Msk
#define DBG_APBFZ_TIM2CDBGSTOP_Pos        (14UL)                    /*!< TIM2CDBGSTOP (Bit 14)                                 */
#define DBG_APBFZ_TIM2CDBGSTOP_Msk        (0x4000UL)                /*!< TIM2CDBGSTOP (Bitfield-Mask: 0x01)                    */
#define DBG_APBFZ_TIM2CDBGSTOP                      DBG_APBFZ_TIM2CDBGSTOP_Msk
#define DBG_APBFZ_KEY_Pos                 (16UL)                    /*!< KEY (Bit 16)                                          */
#define DBG_APBFZ_KEY_Msk                 (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define DBG_APBFZ_KEY                      DBG_APBFZ_KEY_Msk


/* =========================================================================================================================== */
/* ================                                            LVD                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
#define LVD_CR_DIV_SEL_Pos                (0UL)                     /*!< DIV_SEL (Bit 0)                                       */
#define LVD_CR_DIV_SEL_Msk                (0x7UL)                   /*!< DIV_SEL (Bitfield-Mask: 0x07)                         */
#define LVD_CR_DIV_SEL                      LVD_CR_DIV_SEL_Msk
#define LVD_CR_LVDEN_Pos                  (5UL)                     /*!< LVDEN (Bit 5)                                         */
#define LVD_CR_LVDEN_Msk                  (0x20UL)                  /*!< LVDEN (Bitfield-Mask: 0x01)                           */
#define LVD_CR_LVDEN                      LVD_CR_LVDEN_Msk
#define LVD_CR_ACT_Pos                    (6UL)                     /*!< ACT (Bit 6)                                           */
#define LVD_CR_ACT_Msk                    (0x40UL)                  /*!< ACT (Bitfield-Mask: 0x01)                             */
#define LVD_CR_ACT                      LVD_CR_ACT_Msk
#define LVD_CR_FLTEN_Pos                  (7UL)                     /*!< FLTEN (Bit 7)                                         */
#define LVD_CR_FLTEN_Msk                  (0x80UL)                  /*!< FLTEN (Bitfield-Mask: 0x01)                           */
#define LVD_CR_FLTEN                      LVD_CR_FLTEN_Msk
#define LVD_CR_FLTCLK_SEL_Pos             (8UL)                     /*!< FLTCLK_SEL (Bit 8)                                    */
#define LVD_CR_FLTCLK_SEL_Msk             (0x300UL)                 /*!< FLTCLK_SEL (Bitfield-Mask: 0x03)                      */
#define LVD_CR_FLTCLK_SEL                      LVD_CR_FLTCLK_SEL_Msk
#define LVD_CR_FALLINTEN_Pos              (12UL)                    /*!< FALLINTEN (Bit 12)                                    */
#define LVD_CR_FALLINTEN_Msk              (0x1000UL)                /*!< FALLINTEN (Bitfield-Mask: 0x01)                       */
#define LVD_CR_FALLINTEN                      LVD_CR_FALLINTEN_Msk
#define LVD_CR_RISEINTEN_Pos              (13UL)                    /*!< RISEINTEN (Bit 13)                                    */
#define LVD_CR_RISEINTEN_Msk              (0x2000UL)                /*!< RISEINTEN (Bitfield-Mask: 0x01)                       */
#define LVD_CR_RISEINTEN                      LVD_CR_RISEINTEN_Msk
#define LVD_CR_HIGHINTEN_Pos              (14UL)                    /*!< HIGHINTEN (Bit 14)                                    */
#define LVD_CR_HIGHINTEN_Msk              (0x4000UL)                /*!< HIGHINTEN (Bitfield-Mask: 0x01)                       */
#define LVD_CR_HIGHINTEN                      LVD_CR_HIGHINTEN_Msk
#define LVD_CR_INT_EN_Pos                 (15UL)                    /*!< INT_EN (Bit 15)                                       */
#define LVD_CR_INT_EN_Msk                 (0x8000UL)                /*!< INT_EN (Bitfield-Mask: 0x01)                          */
#define LVD_CR_INT_EN                      LVD_CR_INT_EN_Msk
#define LVD_CR_FLT_NUM_Pos                (16UL)                    /*!< FLT_NUM (Bit 16)                                      */
#define LVD_CR_FLT_NUM_Msk                (0xffff0000UL)            /*!< FLT_NUM (Bitfield-Mask: 0xffff)                       */
#define LVD_CR_FLT_NUM                      LVD_CR_FLT_NUM_Msk
/* ==========================================================  SR  =========================================================== */
#define LVD_SR_INTF_Pos                   (0UL)                     /*!< INTF (Bit 0)                                          */
#define LVD_SR_INTF_Msk                   (0x1UL)                   /*!< INTF (Bitfield-Mask: 0x01)                            */
#define LVD_SR_INTF                      LVD_SR_INTF_Msk


/* =========================================================================================================================== */
/* ================                                            ADC                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR0  ========================================================== */
#define ADC_CR0_ADCEN_Pos                 (0UL)                     /*!< ADCEN (Bit 0)                                         */
#define ADC_CR0_ADCEN_Msk                 (0x1UL)                   /*!< ADCEN (Bitfield-Mask: 0x01)                           */
#define ADC_CR0_ADCEN                      ADC_CR0_ADCEN_Msk
#define ADC_CR0_START_Pos                 (1UL)                     /*!< START (Bit 1)                                         */
#define ADC_CR0_START_Msk                 (0x2UL)                   /*!< START (Bitfield-Mask: 0x01)                           */
#define ADC_CR0_START                      ADC_CR0_START_Msk
#define ADC_CR0_VRSEL_Pos                 (2UL)                     /*!< VRSEL (Bit 2)                                         */
#define ADC_CR0_VRSEL_Msk                 (0xcUL)                   /*!< VRSEL (Bitfield-Mask: 0x03)                           */
#define ADC_CR0_VRSEL                      ADC_CR0_VRSEL_Msk
#define ADC_CR0_CLKSEL_Pos                (4UL)                     /*!< CLKSEL (Bit 4)                                        */
#define ADC_CR0_CLKSEL_Msk                (0x70UL)                  /*!< CLKSEL (Bitfield-Mask: 0x07)                          */
#define ADC_CR0_CLKSEL                      ADC_CR0_CLKSEL_Msk
#define ADC_CR0_SEL_Pos                   (7UL)                     /*!< SEL (Bit 7)                                           */
#define ADC_CR0_SEL_Msk                   (0xf80UL)                 /*!< SEL (Bitfield-Mask: 0x1f)                             */
#define ADC_CR0_SEL                      ADC_CR0_SEL_Msk
#define ADC_CR0_SAM_Pos                   (14UL)                    /*!< SAM (Bit 14)                                          */
#define ADC_CR0_SAM_Msk                   (0x4000UL)                /*!< SAM (Bitfield-Mask: 0x01)                             */
#define ADC_CR0_SAM                      ADC_CR0_SAM_Msk
#define ADC_CR0_STATERST_Pos              (15UL)                    /*!< STATERST (Bit 15)                                     */
#define ADC_CR0_STATERST_Msk              (0x8000UL)                /*!< STATERST (Bitfield-Mask: 0x01)                        */
#define ADC_CR0_STATERST                      ADC_CR0_STATERST_Msk
#define ADC_CR0_ADCK_SF_Pos               (16UL)                    /*!< ADCK_SF (Bit 16)                                      */
#define ADC_CR0_ADCK_SF_Msk               (0x70000UL)               /*!< ADCK_SF (Bitfield-Mask: 0x07)                         */
#define ADC_CR0_ADCK_SF                      ADC_CR0_ADCK_SF_Msk
#define ADC_CR0_CT_STATE_Pos              (20UL)                    /*!< CT_STATE (Bit 20)                                     */
#define ADC_CR0_CT_STATE_Msk              (0x100000UL)              /*!< CT_STATE (Bitfield-Mask: 0x01)                        */
#define ADC_CR0_CT_STATE                      ADC_CR0_CT_STATE_Msk
/* ==========================================================  CR1  ========================================================== */
#define ADC_CR1_TRIGS0_Pos                (0UL)                     /*!< TRIGS0 (Bit 0)                                        */
#define ADC_CR1_TRIGS0_Msk                (0x1fUL)                  /*!< TRIGS0 (Bitfield-Mask: 0x1f)                          */
#define ADC_CR1_TRIGS0                      ADC_CR1_TRIGS0_Msk
#define ADC_CR1_TRIGS1_Pos                (5UL)                     /*!< TRIGS1 (Bit 5)                                        */
#define ADC_CR1_TRIGS1_Msk                (0x3e0UL)                 /*!< TRIGS1 (Bitfield-Mask: 0x1f)                          */
#define ADC_CR1_TRIGS1                      ADC_CR1_TRIGS1_Msk
#define ADC_CR1_CT_Pos                    (10UL)                    /*!< CT (Bit 10)                                           */
#define ADC_CR1_CT_Msk                    (0x400UL)                 /*!< CT (Bitfield-Mask: 0x01)                              */
#define ADC_CR1_CT                      ADC_CR1_CT_Msk
#define ADC_CR1_RACC_EN_Pos               (11UL)                    /*!< RACC_EN (Bit 11)                                      */
#define ADC_CR1_RACC_EN_Msk               (0x800UL)                 /*!< RACC_EN (Bitfield-Mask: 0x01)                         */
#define ADC_CR1_RACC_EN                      ADC_CR1_RACC_EN_Msk
#define ADC_CR1_LTCMP_Pos                 (12UL)                    /*!< LTCMP (Bit 12)                                        */
#define ADC_CR1_LTCMP_Msk                 (0x1000UL)                /*!< LTCMP (Bitfield-Mask: 0x01)                           */
#define ADC_CR1_LTCMP                      ADC_CR1_LTCMP_Msk
#define ADC_CR1_HTCMP_Pos                 (13UL)                    /*!< HTCMP (Bit 13)                                        */
#define ADC_CR1_HTCMP_Msk                 (0x2000UL)                /*!< HTCMP (Bitfield-Mask: 0x01)                           */
#define ADC_CR1_HTCMP                      ADC_CR1_HTCMP_Msk
#define ADC_CR1_REGCMP_Pos                (14UL)                    /*!< REGCMP (Bit 14)                                       */
#define ADC_CR1_REGCMP_Msk                (0x4000UL)                /*!< REGCMP (Bitfield-Mask: 0x01)                          */
#define ADC_CR1_REGCMP                      ADC_CR1_REGCMP_Msk
#define ADC_CR1_RACC_CLR_Pos              (15UL)                    /*!< RACC_CLR (Bit 15)                                     */
#define ADC_CR1_RACC_CLR_Msk              (0x8000UL)                /*!< RACC_CLR (Bitfield-Mask: 0x01)                        */
#define ADC_CR1_RACC_CLR                      ADC_CR1_RACC_CLR_Msk
/* ==========================================================  CR2  ========================================================== */
#define ADC_CR2_CHEN_Pos                  (0UL)                     /*!< CHEN (Bit 0)                                          */
#define ADC_CR2_CHEN_Msk                  (0xffUL)                  /*!< CHEN (Bitfield-Mask: 0xff)                            */
#define ADC_CR2_CHEN                      ADC_CR2_CHEN_Msk
#define ADC_CR2_ADCCNT_Pos                (8UL)                     /*!< ADCCNT (Bit 8)                                        */
#define ADC_CR2_ADCCNT_Msk                (0xff00UL)                /*!< ADCCNT (Bitfield-Mask: 0xff)                          */
#define ADC_CR2_ADCCNT                      ADC_CR2_ADCCNT_Msk
#define ADC_CR2_CIRCLE_MODE_Pos           (16UL)                    /*!< CIRCLE_MODE (Bit 16)                                  */
#define ADC_CR2_CIRCLE_MODE_Msk           (0x10000UL)               /*!< CIRCLE_MODE (Bitfield-Mask: 0x01)                     */
#define ADC_CR2_CIRCLE_MODE                      ADC_CR2_CIRCLE_MODE_Msk
#define ADC_CR2_CHSEL_Pos                 (17UL)                    /*!< CHSEL (Bit 17)                                        */
#define ADC_CR2_CHSEL_Msk                 (0x60000UL)               /*!< CHSEL (Bitfield-Mask: 0x03)                           */
#define ADC_CR2_CHSEL                      ADC_CR2_CHSEL_Msk
/* ========================================================  RESULT0  ======================================================== */
#define ADC_RESULT0_RESULT0_Pos           (0UL)                     /*!< RESULT0 (Bit 0)                                       */
#define ADC_RESULT0_RESULT0_Msk           (0xfffUL)                 /*!< RESULT0 (Bitfield-Mask: 0xfff)                        */
#define ADC_RESULT0_RESULT0                      ADC_RESULT0_RESULT0_Msk
/* ========================================================  RESULT1  ======================================================== */
#define ADC_RESULT1_RESULT1_Pos           (0UL)                     /*!< RESULT1 (Bit 0)                                       */
#define ADC_RESULT1_RESULT1_Msk           (0xfffUL)                 /*!< RESULT1 (Bitfield-Mask: 0xfff)                        */
#define ADC_RESULT1_RESULT1                      ADC_RESULT1_RESULT1_Msk
/* ========================================================  RESULT2  ======================================================== */
#define ADC_RESULT2_RESULT2_Pos           (0UL)                     /*!< RESULT2 (Bit 0)                                       */
#define ADC_RESULT2_RESULT2_Msk           (0xfffUL)                 /*!< RESULT2 (Bitfield-Mask: 0xfff)                        */
#define ADC_RESULT2_RESULT2                      ADC_RESULT2_RESULT2_Msk
/* ========================================================  RESULT3  ======================================================== */
#define ADC_RESULT3_RESULT3_Pos           (0UL)                     /*!< RESULT3 (Bit 0)                                       */
#define ADC_RESULT3_RESULT3_Msk           (0xfffUL)                 /*!< RESULT3 (Bitfield-Mask: 0xfff)                        */
#define ADC_RESULT3_RESULT3                      ADC_RESULT3_RESULT3_Msk
/* ========================================================  RESULT4  ======================================================== */
#define ADC_RESULT4_RESULT4_Pos           (0UL)                     /*!< RESULT4 (Bit 0)                                       */
#define ADC_RESULT4_RESULT4_Msk           (0xfffUL)                 /*!< RESULT4 (Bitfield-Mask: 0xfff)                        */
#define ADC_RESULT4_RESULT4                      ADC_RESULT4_RESULT4_Msk
/* ========================================================  RESULT5  ======================================================== */
#define ADC_RESULT5_RESULT5_Pos           (0UL)                     /*!< RESULT5 (Bit 0)                                       */
#define ADC_RESULT5_RESULT5_Msk           (0xfffUL)                 /*!< RESULT5 (Bitfield-Mask: 0xfff)                        */
#define ADC_RESULT5_RESULT5                      ADC_RESULT5_RESULT5_Msk
/* ========================================================  RESULT6  ======================================================== */
#define ADC_RESULT6_RESULT6_Pos           (0UL)                     /*!< RESULT6 (Bit 0)                                       */
#define ADC_RESULT6_RESULT6_Msk           (0xfffUL)                 /*!< RESULT6 (Bitfield-Mask: 0xfff)                        */
#define ADC_RESULT6_RESULT6                      ADC_RESULT6_RESULT6_Msk
/* ========================================================  RESULT7  ======================================================== */
#define ADC_RESULT7_RESULT7_Pos           (0UL)                     /*!< RESULT7 (Bit 0)                                       */
#define ADC_RESULT7_RESULT7_Msk           (0xfffUL)                 /*!< RESULT7 (Bitfield-Mask: 0xfff)                        */
#define ADC_RESULT7_RESULT7                      ADC_RESULT7_RESULT7_Msk
/* ========================================================  RESULT  ========================================================= */
#define ADC_RESULT_RESULT_Pos             (0UL)                     /*!< RESULT (Bit 0)                                        */
#define ADC_RESULT_RESULT_Msk             (0xfffUL)                 /*!< RESULT (Bitfield-Mask: 0xfff)                         */
#define ADC_RESULT_RESULT                      ADC_RESULT_RESULT_Msk
/* ======================================================  RESULT_ACC  ======================================================= */
#define ADC_RESULT_ACC_RESUL_ACC_Pos      (0UL)                     /*!< RESUL_ACC (Bit 0)                                     */
#define ADC_RESULT_ACC_RESUL_ACC_Msk      (0xfffffUL)               /*!< RESUL_ACC (Bitfield-Mask: 0xfffff)                    */
#define ADC_RESULT_ACC_RESUL_ACC                      ADC_RESULT_ACC_RESUL_ACC_Msk
/* ==========================================================  HT  =========================================================== */
#define ADC_HT_HT_Pos                     (0UL)                     /*!< HT (Bit 0)                                            */
#define ADC_HT_HT_Msk                     (0xfffUL)                 /*!< HT (Bitfield-Mask: 0xfff)                             */
#define ADC_HT_HT                      ADC_HT_HT_Msk
/* ==========================================================  LT  =========================================================== */
#define ADC_LT_LT_Pos                     (0UL)                     /*!< LT (Bit 0)                                            */
#define ADC_LT_LT_Msk                     (0xfffUL)                 /*!< LT (Bitfield-Mask: 0xfff)                             */
#define ADC_LT_LT                      ADC_LT_LT_Msk
/* =========================================================  INTEN  ========================================================= */
#define ADC_INTEN_ADCXIEN_0_Pos           (0UL)                     /*!< ADCXIEN_0 (Bit 0)                                     */
#define ADC_INTEN_ADCXIEN_0_Msk           (0x1UL)                   /*!< ADCXIEN_0 (Bitfield-Mask: 0x01)                       */
#define ADC_INTEN_ADCXIEN_0                      ADC_INTEN_ADCXIEN_0_Msk
#define ADC_INTEN_ADCXIEN_1_Pos           (1UL)                     /*!< ADCXIEN_1 (Bit 1)                                     */
#define ADC_INTEN_ADCXIEN_1_Msk           (0x2UL)                   /*!< ADCXIEN_1 (Bitfield-Mask: 0x01)                       */
#define ADC_INTEN_ADCXIEN_1                      ADC_INTEN_ADCXIEN_1_Msk
#define ADC_INTEN_ADCXIEN_2_Pos           (2UL)                     /*!< ADCXIEN_2 (Bit 2)                                     */
#define ADC_INTEN_ADCXIEN_2_Msk           (0x4UL)                   /*!< ADCXIEN_2 (Bitfield-Mask: 0x01)                       */
#define ADC_INTEN_ADCXIEN_2                      ADC_INTEN_ADCXIEN_2_Msk
#define ADC_INTEN_ADCXIEN_3_Pos           (3UL)                     /*!< ADCXIEN_3 (Bit 3)                                     */
#define ADC_INTEN_ADCXIEN_3_Msk           (0x8UL)                   /*!< ADCXIEN_3 (Bitfield-Mask: 0x01)                       */
#define ADC_INTEN_ADCXIEN_3                      ADC_INTEN_ADCXIEN_3_Msk
#define ADC_INTEN_ADCXIEN_4_Pos           (4UL)                     /*!< ADCXIEN_4 (Bit 4)                                     */
#define ADC_INTEN_ADCXIEN_4_Msk           (0x10UL)                  /*!< ADCXIEN_4 (Bitfield-Mask: 0x01)                       */
#define ADC_INTEN_ADCXIEN_4                      ADC_INTEN_ADCXIEN_4_Msk
#define ADC_INTEN_ADCXIEN_5_Pos           (5UL)                     /*!< ADCXIEN_5 (Bit 5)                                     */
#define ADC_INTEN_ADCXIEN_5_Msk           (0x20UL)                  /*!< ADCXIEN_5 (Bitfield-Mask: 0x01)                       */
#define ADC_INTEN_ADCXIEN_5                      ADC_INTEN_ADCXIEN_5_Msk
#define ADC_INTEN_ADCXIEN_6_Pos           (6UL)                     /*!< ADCXIEN_6 (Bit 6)                                     */
#define ADC_INTEN_ADCXIEN_6_Msk           (0x40UL)                  /*!< ADCXIEN_6 (Bitfield-Mask: 0x01)                       */
#define ADC_INTEN_ADCXIEN_6                      ADC_INTEN_ADCXIEN_6_Msk
#define ADC_INTEN_ADCXIEN_7_Pos           (7UL)                     /*!< ADCXIEN_7 (Bit 7)                                     */
#define ADC_INTEN_ADCXIEN_7_Msk           (0x80UL)                  /*!< ADCXIEN_7 (Bitfield-Mask: 0x01)                       */
#define ADC_INTEN_ADCXIEN_7                      ADC_INTEN_ADCXIEN_7_Msk
#define ADC_INTEN_LLT_IEN_Pos             (8UL)                     /*!< LLT_IEN (Bit 8)                                       */
#define ADC_INTEN_LLT_IEN_Msk             (0x100UL)                 /*!< LLT_IEN (Bitfield-Mask: 0x01)                         */
#define ADC_INTEN_LLT_IEN                      ADC_INTEN_LLT_IEN_Msk
#define ADC_INTEN_HHT_IEN_Pos             (9UL)                     /*!< HHT_IEN (Bit 9)                                       */
#define ADC_INTEN_HHT_IEN_Msk             (0x200UL)                 /*!< HHT_IEN (Bitfield-Mask: 0x01)                         */
#define ADC_INTEN_HHT_IEN                      ADC_INTEN_HHT_IEN_Msk
#define ADC_INTEN_REG_IEN_Pos             (10UL)                    /*!< REG_IEN (Bit 10)                                      */
#define ADC_INTEN_REG_IEN_Msk             (0x400UL)                 /*!< REG_IEN (Bitfield-Mask: 0x01)                         */
#define ADC_INTEN_REG_IEN                      ADC_INTEN_REG_IEN_Msk
#define ADC_INTEN_CONT_IEN_Pos            (11UL)                    /*!< CONT_IEN (Bit 11)                                     */
#define ADC_INTEN_CONT_IEN_Msk            (0x800UL)                 /*!< CONT_IEN (Bitfield-Mask: 0x01)                        */
#define ADC_INTEN_CONT_IEN                      ADC_INTEN_CONT_IEN_Msk
#define ADC_INTEN_ADCXIEN_8_Pos           (16UL)                    /*!< ADCXIEN_8 (Bit 16)                                    */
#define ADC_INTEN_ADCXIEN_8_Msk           (0x10000UL)               /*!< ADCXIEN_8 (Bitfield-Mask: 0x01)                       */
#define ADC_INTEN_ADCXIEN_8                      ADC_INTEN_ADCXIEN_8_Msk
#define ADC_INTEN_ADCXIEN_9_Pos           (17UL)                    /*!< ADCXIEN_9 (Bit 17)                                    */
#define ADC_INTEN_ADCXIEN_9_Msk           (0x20000UL)               /*!< ADCXIEN_9 (Bitfield-Mask: 0x01)                       */
#define ADC_INTEN_ADCXIEN_9                      ADC_INTEN_ADCXIEN_9_Msk
#define ADC_INTEN_ADCXIEN_10_Pos          (18UL)                    /*!< ADCXIEN_10 (Bit 18)                                   */
#define ADC_INTEN_ADCXIEN_10_Msk          (0x40000UL)               /*!< ADCXIEN_10 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_10                      ADC_INTEN_ADCXIEN_10_Msk
#define ADC_INTEN_ADCXIEN_11_Pos          (19UL)                    /*!< ADCXIEN_11 (Bit 19)                                   */
#define ADC_INTEN_ADCXIEN_11_Msk          (0x80000UL)               /*!< ADCXIEN_11 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_11                      ADC_INTEN_ADCXIEN_11_Msk
#define ADC_INTEN_ADCXIEN_12_Pos          (20UL)                    /*!< ADCXIEN_12 (Bit 20)                                   */
#define ADC_INTEN_ADCXIEN_12_Msk          (0x100000UL)              /*!< ADCXIEN_12 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_12                      ADC_INTEN_ADCXIEN_12_Msk
#define ADC_INTEN_ADCXIEN_13_Pos          (21UL)                    /*!< ADCXIEN_13 (Bit 21)                                   */
#define ADC_INTEN_ADCXIEN_13_Msk          (0x200000UL)              /*!< ADCXIEN_13 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_13                      ADC_INTEN_ADCXIEN_13_Msk
#define ADC_INTEN_ADCXIEN_14_Pos          (22UL)                    /*!< ADCXIEN_14 (Bit 22)                                   */
#define ADC_INTEN_ADCXIEN_14_Msk          (0x400000UL)              /*!< ADCXIEN_14 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_14                      ADC_INTEN_ADCXIEN_14_Msk
#define ADC_INTEN_ADCXIEN_15_Pos          (23UL)                    /*!< ADCXIEN_15 (Bit 23)                                   */
#define ADC_INTEN_ADCXIEN_15_Msk          (0x800000UL)              /*!< ADCXIEN_15 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_15                      ADC_INTEN_ADCXIEN_15_Msk
#define ADC_INTEN_ADCXIEN_16_Pos          (24UL)                    /*!< ADCXIEN_16 (Bit 24)                                   */
#define ADC_INTEN_ADCXIEN_16_Msk          (0x1000000UL)             /*!< ADCXIEN_16 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_16                      ADC_INTEN_ADCXIEN_16_Msk
#define ADC_INTEN_ADCXIEN_17_Pos          (25UL)                    /*!< ADCXIEN_17 (Bit 25)                                   */
#define ADC_INTEN_ADCXIEN_17_Msk          (0x2000000UL)             /*!< ADCXIEN_17 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_17                      ADC_INTEN_ADCXIEN_17_Msk
#define ADC_INTEN_ADCXIEN_18_Pos          (26UL)                    /*!< ADCXIEN_18 (Bit 26)                                   */
#define ADC_INTEN_ADCXIEN_18_Msk          (0x4000000UL)             /*!< ADCXIEN_18 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_18                      ADC_INTEN_ADCXIEN_18_Msk
#define ADC_INTEN_ADCXIEN_19_Pos          (27UL)                    /*!< ADCXIEN_19 (Bit 27)                                   */
#define ADC_INTEN_ADCXIEN_19_Msk          (0x8000000UL)             /*!< ADCXIEN_19 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_19                      ADC_INTEN_ADCXIEN_19_Msk
#define ADC_INTEN_ADCXIEN_20_Pos          (28UL)                    /*!< ADCXIEN_20 (Bit 28)                                   */
#define ADC_INTEN_ADCXIEN_20_Msk          (0x10000000UL)            /*!< ADCXIEN_20 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_20                      ADC_INTEN_ADCXIEN_20_Msk
#define ADC_INTEN_ADCXIEN_21_Pos          (29UL)                    /*!< ADCXIEN_21 (Bit 29)                                   */
#define ADC_INTEN_ADCXIEN_21_Msk          (0x20000000UL)            /*!< ADCXIEN_21 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_21                      ADC_INTEN_ADCXIEN_21_Msk
#define ADC_INTEN_ADCXIEN_22_Pos          (30UL)                    /*!< ADCXIEN_22 (Bit 30)                                   */
#define ADC_INTEN_ADCXIEN_22_Msk          (0x40000000UL)            /*!< ADCXIEN_22 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_22                      ADC_INTEN_ADCXIEN_22_Msk
#define ADC_INTEN_ADCXIEN_23_Pos          (31UL)                    /*!< ADCXIEN_23 (Bit 31)                                   */
#define ADC_INTEN_ADCXIEN_23_Msk          (0x80000000UL)            /*!< ADCXIEN_23 (Bitfield-Mask: 0x01)                      */
#define ADC_INTEN_ADCXIEN_23                      ADC_INTEN_ADCXIEN_23_Msk
/* ========================================================  INTCLR  ========================================================= */
#define ADC_INTCLR_ADCICLR_Pos            (0UL)                     /*!< ADCICLR (Bit 0)                                       */
#define ADC_INTCLR_ADCICLR_Msk            (0xffUL)                  /*!< ADCICLR (Bitfield-Mask: 0xff)                         */
#define ADC_INTCLR_ADCICLR                      ADC_INTCLR_ADCICLR_Msk
#define ADC_INTCLR_LLT_INTC_Pos           (8UL)                     /*!< LLT_INTC (Bit 8)                                      */
#define ADC_INTCLR_LLT_INTC_Msk           (0x100UL)                 /*!< LLT_INTC (Bitfield-Mask: 0x01)                        */
#define ADC_INTCLR_LLT_INTC                      ADC_INTCLR_LLT_INTC_Msk
#define ADC_INTCLR_HHT_INTC_Pos           (9UL)                     /*!< HHT_INTC (Bit 9)                                      */
#define ADC_INTCLR_HHT_INTC_Msk           (0x200UL)                 /*!< HHT_INTC (Bitfield-Mask: 0x01)                        */
#define ADC_INTCLR_HHT_INTC                      ADC_INTCLR_HHT_INTC_Msk
#define ADC_INTCLR_REG_INTC_Pos           (10UL)                    /*!< REG_INTC (Bit 10)                                     */
#define ADC_INTCLR_REG_INTC_Msk           (0x400UL)                 /*!< REG_INTC (Bitfield-Mask: 0x01)                        */
#define ADC_INTCLR_REG_INTC                      ADC_INTCLR_REG_INTC_Msk
#define ADC_INTCLR_CONT_INTC_Pos          (11UL)                    /*!< CONT_INTC (Bit 11)                                    */
#define ADC_INTCLR_CONT_INTC_Msk          (0x800UL)                 /*!< CONT_INTC (Bitfield-Mask: 0x01)                       */
#define ADC_INTCLR_CONT_INTC                      ADC_INTCLR_CONT_INTC_Msk
#define ADC_INTCLR_ADCICLR_1_Pos          (16UL)                    /*!< ADCICLR_1 (Bit 16)                                    */
#define ADC_INTCLR_ADCICLR_1_Msk          (0xff0000UL)              /*!< ADCICLR_1 (Bitfield-Mask: 0xff)                       */
#define ADC_INTCLR_ADCICLR_1                      ADC_INTCLR_ADCICLR_1_Msk
#define ADC_INTCLR_ADCICLR_2_Pos          (24UL)                    /*!< ADCICLR_2 (Bit 24)                                    */
#define ADC_INTCLR_ADCICLR_2_Msk          (0xff000000UL)            /*!< ADCICLR_2 (Bitfield-Mask: 0xff)                       */
#define ADC_INTCLR_ADCICLR_2                      ADC_INTCLR_ADCICLR_2_Msk
/* =======================================================  RAWINTSR  ======================================================== */
#define ADC_RAWINTSR_ADCRIS_Pos           (0UL)                     /*!< ADCRIS (Bit 0)                                        */
#define ADC_RAWINTSR_ADCRIS_Msk           (0xffUL)                  /*!< ADCRIS (Bitfield-Mask: 0xff)                          */
#define ADC_RAWINTSR_ADCRIS                      ADC_RAWINTSR_ADCRIS_Msk
#define ADC_RAWINTSR_LLT_INTF_Pos         (8UL)                     /*!< LLT_INTF (Bit 8)                                      */
#define ADC_RAWINTSR_LLT_INTF_Msk         (0x100UL)                 /*!< LLT_INTF (Bitfield-Mask: 0x01)                        */
#define ADC_RAWINTSR_LLT_INTF                      ADC_RAWINTSR_LLT_INTF_Msk
#define ADC_RAWINTSR_HHT_INTF_Pos         (9UL)                     /*!< HHT_INTF (Bit 9)                                      */
#define ADC_RAWINTSR_HHT_INTF_Msk         (0x200UL)                 /*!< HHT_INTF (Bitfield-Mask: 0x01)                        */
#define ADC_RAWINTSR_HHT_INTF                      ADC_RAWINTSR_HHT_INTF_Msk
#define ADC_RAWINTSR_REG_INTF_Pos         (10UL)                    /*!< REG_INTF (Bit 10)                                     */
#define ADC_RAWINTSR_REG_INTF_Msk         (0x400UL)                 /*!< REG_INTF (Bitfield-Mask: 0x01)                        */
#define ADC_RAWINTSR_REG_INTF                      ADC_RAWINTSR_REG_INTF_Msk
#define ADC_RAWINTSR_CONT_INTF_Pos        (11UL)                    /*!< CONT_INTF (Bit 11)                                    */
#define ADC_RAWINTSR_CONT_INTF_Msk        (0x800UL)                 /*!< CONT_INTF (Bitfield-Mask: 0x01)                       */
#define ADC_RAWINTSR_CONT_INTF                      ADC_RAWINTSR_CONT_INTF_Msk
#define ADC_RAWINTSR_ADCRIS_1_Pos         (16UL)                    /*!< ADCRIS_1 (Bit 16)                                     */
#define ADC_RAWINTSR_ADCRIS_1_Msk         (0xff0000UL)              /*!< ADCRIS_1 (Bitfield-Mask: 0xff)                        */
#define ADC_RAWINTSR_ADCRIS_1                      ADC_RAWINTSR_ADCRIS_1_Msk
#define ADC_RAWINTSR_ADCRIS_2_Pos         (24UL)                    /*!< ADCRIS_2 (Bit 24)                                     */
#define ADC_RAWINTSR_ADCRIS_2_Msk         (0xff000000UL)            /*!< ADCRIS_2 (Bitfield-Mask: 0xff)                        */
#define ADC_RAWINTSR_ADCRIS_2                      ADC_RAWINTSR_ADCRIS_2_Msk
/* =======================================================  MSKINTSR  ======================================================== */
#define ADC_MSKINTSR_ADCMIS_0_Pos         (0UL)                     /*!< ADCMIS_0 (Bit 0)                                      */
#define ADC_MSKINTSR_ADCMIS_0_Msk         (0x1UL)                   /*!< ADCMIS_0 (Bitfield-Mask: 0x01)                        */
#define ADC_MSKINTSR_ADCMIS_0                      ADC_MSKINTSR_ADCMIS_0_Msk
#define ADC_MSKINTSR_ADCMIS_1_Pos         (1UL)                     /*!< ADCMIS_1 (Bit 1)                                      */
#define ADC_MSKINTSR_ADCMIS_1_Msk         (0x2UL)                   /*!< ADCMIS_1 (Bitfield-Mask: 0x01)                        */
#define ADC_MSKINTSR_ADCMIS_1                      ADC_MSKINTSR_ADCMIS_1_Msk
#define ADC_MSKINTSR_ADCMIS_2_Pos         (2UL)                     /*!< ADCMIS_2 (Bit 2)                                      */
#define ADC_MSKINTSR_ADCMIS_2_Msk         (0x4UL)                   /*!< ADCMIS_2 (Bitfield-Mask: 0x01)                        */
#define ADC_MSKINTSR_ADCMIS_2                      ADC_MSKINTSR_ADCMIS_2_Msk
#define ADC_MSKINTSR_ADCMIS_3_Pos         (3UL)                     /*!< ADCMIS_3 (Bit 3)                                      */
#define ADC_MSKINTSR_ADCMIS_3_Msk         (0x8UL)                   /*!< ADCMIS_3 (Bitfield-Mask: 0x01)                        */
#define ADC_MSKINTSR_ADCMIS_3                      ADC_MSKINTSR_ADCMIS_3_Msk
#define ADC_MSKINTSR_ADCMIS_4_Pos         (4UL)                     /*!< ADCMIS_4 (Bit 4)                                      */
#define ADC_MSKINTSR_ADCMIS_4_Msk         (0x10UL)                  /*!< ADCMIS_4 (Bitfield-Mask: 0x01)                        */
#define ADC_MSKINTSR_ADCMIS_4                      ADC_MSKINTSR_ADCMIS_4_Msk
#define ADC_MSKINTSR_ADCMIS_5_Pos         (5UL)                     /*!< ADCMIS_5 (Bit 5)                                      */
#define ADC_MSKINTSR_ADCMIS_5_Msk         (0x20UL)                  /*!< ADCMIS_5 (Bitfield-Mask: 0x01)                        */
#define ADC_MSKINTSR_ADCMIS_5                      ADC_MSKINTSR_ADCMIS_5_Msk
#define ADC_MSKINTSR_ADCMIS_6_Pos         (6UL)                     /*!< ADCMIS_6 (Bit 6)                                      */
#define ADC_MSKINTSR_ADCMIS_6_Msk         (0x40UL)                  /*!< ADCMIS_6 (Bitfield-Mask: 0x01)                        */
#define ADC_MSKINTSR_ADCMIS_6                      ADC_MSKINTSR_ADCMIS_6_Msk
#define ADC_MSKINTSR_ADCMIS_7_Pos         (7UL)                     /*!< ADCMIS_7 (Bit 7)                                      */
#define ADC_MSKINTSR_ADCMIS_7_Msk         (0x80UL)                  /*!< ADCMIS_7 (Bitfield-Mask: 0x01)                        */
#define ADC_MSKINTSR_ADCMIS_7                      ADC_MSKINTSR_ADCMIS_7_Msk
#define ADC_MSKINTSR_LLT_MIF_Pos          (8UL)                     /*!< LLT_MIF (Bit 8)                                       */
#define ADC_MSKINTSR_LLT_MIF_Msk          (0x100UL)                 /*!< LLT_MIF (Bitfield-Mask: 0x01)                         */
#define ADC_MSKINTSR_LLT_MIF                      ADC_MSKINTSR_LLT_MIF_Msk
#define ADC_MSKINTSR_HHT_MIF_Pos          (9UL)                     /*!< HHT_MIF (Bit 9)                                       */
#define ADC_MSKINTSR_HHT_MIF_Msk          (0x200UL)                 /*!< HHT_MIF (Bitfield-Mask: 0x01)                         */
#define ADC_MSKINTSR_HHT_MIF                      ADC_MSKINTSR_HHT_MIF_Msk
#define ADC_MSKINTSR_REG_MIF_Pos          (10UL)                    /*!< REG_MIF (Bit 10)                                      */
#define ADC_MSKINTSR_REG_MIF_Msk          (0x400UL)                 /*!< REG_MIF (Bitfield-Mask: 0x01)                         */
#define ADC_MSKINTSR_REG_MIF                      ADC_MSKINTSR_REG_MIF_Msk
#define ADC_MSKINTSR_CONT_MIF_Pos         (11UL)                    /*!< CONT_MIF (Bit 11)                                     */
#define ADC_MSKINTSR_CONT_MIF_Msk         (0x800UL)                 /*!< CONT_MIF (Bitfield-Mask: 0x01)                        */
#define ADC_MSKINTSR_CONT_MIF                      ADC_MSKINTSR_CONT_MIF_Msk
#define ADC_MSKINTSR_ADCMIS_8_Pos         (16UL)                    /*!< ADCMIS_8 (Bit 16)                                     */
#define ADC_MSKINTSR_ADCMIS_8_Msk         (0x10000UL)               /*!< ADCMIS_8 (Bitfield-Mask: 0x01)                        */
#define ADC_MSKINTSR_ADCMIS_8                      ADC_MSKINTSR_ADCMIS_8_Msk
#define ADC_MSKINTSR_ADCMIS_9_Pos         (17UL)                    /*!< ADCMIS_9 (Bit 17)                                     */
#define ADC_MSKINTSR_ADCMIS_9_Msk         (0x20000UL)               /*!< ADCMIS_9 (Bitfield-Mask: 0x01)                        */
#define ADC_MSKINTSR_ADCMIS_9                      ADC_MSKINTSR_ADCMIS_9_Msk
#define ADC_MSKINTSR_ADCMIS_10_Pos        (18UL)                    /*!< ADCMIS_10 (Bit 18)                                    */
#define ADC_MSKINTSR_ADCMIS_10_Msk        (0x40000UL)               /*!< ADCMIS_10 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_10                      ADC_MSKINTSR_ADCMIS_10_Msk
#define ADC_MSKINTSR_ADCMIS_11_Pos        (19UL)                    /*!< ADCMIS_11 (Bit 19)                                    */
#define ADC_MSKINTSR_ADCMIS_11_Msk        (0x80000UL)               /*!< ADCMIS_11 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_11                      ADC_MSKINTSR_ADCMIS_11_Msk
#define ADC_MSKINTSR_ADCMIS_12_Pos        (20UL)                    /*!< ADCMIS_12 (Bit 20)                                    */
#define ADC_MSKINTSR_ADCMIS_12_Msk        (0x100000UL)              /*!< ADCMIS_12 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_12                      ADC_MSKINTSR_ADCMIS_12_Msk
#define ADC_MSKINTSR_ADCMIS_13_Pos        (21UL)                    /*!< ADCMIS_13 (Bit 21)                                    */
#define ADC_MSKINTSR_ADCMIS_13_Msk        (0x200000UL)              /*!< ADCMIS_13 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_13                      ADC_MSKINTSR_ADCMIS_13_Msk
#define ADC_MSKINTSR_ADCMIS_14_Pos        (22UL)                    /*!< ADCMIS_14 (Bit 22)                                    */
#define ADC_MSKINTSR_ADCMIS_14_Msk        (0x400000UL)              /*!< ADCMIS_14 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_14                      ADC_MSKINTSR_ADCMIS_14_Msk
#define ADC_MSKINTSR_ADCMIS_15_Pos        (23UL)                    /*!< ADCMIS_15 (Bit 23)                                    */
#define ADC_MSKINTSR_ADCMIS_15_Msk        (0x800000UL)              /*!< ADCMIS_15 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_15                      ADC_MSKINTSR_ADCMIS_15_Msk
#define ADC_MSKINTSR_ADCMIS_16_Pos        (24UL)                    /*!< ADCMIS_16 (Bit 24)                                    */
#define ADC_MSKINTSR_ADCMIS_16_Msk        (0x1000000UL)             /*!< ADCMIS_16 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_16                      ADC_MSKINTSR_ADCMIS_16_Msk
#define ADC_MSKINTSR_ADCMIS_17_Pos        (25UL)                    /*!< ADCMIS_17 (Bit 25)                                    */
#define ADC_MSKINTSR_ADCMIS_17_Msk        (0x2000000UL)             /*!< ADCMIS_17 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_17                      ADC_MSKINTSR_ADCMIS_17_Msk
#define ADC_MSKINTSR_ADCMIS_18_Pos        (26UL)                    /*!< ADCMIS_18 (Bit 26)                                    */
#define ADC_MSKINTSR_ADCMIS_18_Msk        (0x4000000UL)             /*!< ADCMIS_18 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_18                      ADC_MSKINTSR_ADCMIS_18_Msk
#define ADC_MSKINTSR_ADCMIS_19_Pos        (27UL)                    /*!< ADCMIS_19 (Bit 27)                                    */
#define ADC_MSKINTSR_ADCMIS_19_Msk        (0x8000000UL)             /*!< ADCMIS_19 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_19                      ADC_MSKINTSR_ADCMIS_19_Msk
#define ADC_MSKINTSR_ADCMIS_20_Pos        (28UL)                    /*!< ADCMIS_20 (Bit 28)                                    */
#define ADC_MSKINTSR_ADCMIS_20_Msk        (0x10000000UL)            /*!< ADCMIS_20 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_20                      ADC_MSKINTSR_ADCMIS_20_Msk
#define ADC_MSKINTSR_ADCMIS_21_Pos        (29UL)                    /*!< ADCMIS_21 (Bit 29)                                    */
#define ADC_MSKINTSR_ADCMIS_21_Msk        (0x20000000UL)            /*!< ADCMIS_21 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_21                      ADC_MSKINTSR_ADCMIS_21_Msk
#define ADC_MSKINTSR_ADCMIS_22_Pos        (30UL)                    /*!< ADCMIS_22 (Bit 30)                                    */
#define ADC_MSKINTSR_ADCMIS_22_Msk        (0x40000000UL)            /*!< ADCMIS_22 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_22                      ADC_MSKINTSR_ADCMIS_22_Msk
#define ADC_MSKINTSR_ADCMIS_23_Pos        (31UL)                    /*!< ADCMIS_23 (Bit 31)                                    */
#define ADC_MSKINTSR_ADCMIS_23_Msk        (0x80000000UL)            /*!< ADCMIS_23 (Bitfield-Mask: 0x01)                       */
#define ADC_MSKINTSR_ADCMIS_23                      ADC_MSKINTSR_ADCMIS_23_Msk


/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
#define RTC_CR_BYPSHAD_Pos                (0UL)                     /*!< BYPSHAD (Bit 0)                                       */
#define RTC_CR_BYPSHAD_Msk                (0x1UL)                   /*!< BYPSHAD (Bitfield-Mask: 0x01)                         */
#define RTC_CR_BYPSHAD                      RTC_CR_BYPSHAD_Msk
#define RTC_CR_RTC1HZOE_Pos               (1UL)                     /*!< RTC1HZOE (Bit 1)                                      */
#define RTC_CR_RTC1HZOE_Msk               (0x2UL)                   /*!< RTC1HZOE (Bitfield-Mask: 0x01)                        */
#define RTC_CR_RTC1HZOE                      RTC_CR_RTC1HZOE_Msk
#define RTC_CR_FMT_Pos                    (2UL)                     /*!< FMT (Bit 2)                                           */
#define RTC_CR_FMT_Msk                    (0x4UL)                   /*!< FMT (Bitfield-Mask: 0x01)                             */
#define RTC_CR_FMT                      RTC_CR_FMT_Msk
#define RTC_CR_ALM1_INTEN_Pos             (4UL)                     /*!< ALM1_INTEN (Bit 4)                                    */
#define RTC_CR_ALM1_INTEN_Msk             (0x10UL)                  /*!< ALM1_INTEN (Bitfield-Mask: 0x01)                      */
#define RTC_CR_ALM1_INTEN                      RTC_CR_ALM1_INTEN_Msk
#define RTC_CR_ALM2_INTEN_Pos             (5UL)                     /*!< ALM2_INTEN (Bit 5)                                    */
#define RTC_CR_ALM2_INTEN_Msk             (0x20UL)                  /*!< ALM2_INTEN (Bitfield-Mask: 0x01)                      */
#define RTC_CR_ALM2_INTEN                      RTC_CR_ALM2_INTEN_Msk
#define RTC_CR_ALM1EN_Pos                 (6UL)                     /*!< ALM1EN (Bit 6)                                        */
#define RTC_CR_ALM1EN_Msk                 (0x40UL)                  /*!< ALM1EN (Bitfield-Mask: 0x01)                          */
#define RTC_CR_ALM1EN                      RTC_CR_ALM1EN_Msk
#define RTC_CR_START_Pos                  (8UL)                     /*!< START (Bit 8)                                         */
#define RTC_CR_START_Msk                  (0x100UL)                 /*!< START (Bitfield-Mask: 0x01)                           */
#define RTC_CR_START                      RTC_CR_START_Msk
/* =========================================================  CLKCR  ========================================================= */
#define RTC_CLKCR_HXTDIV_Pos              (0UL)                     /*!< HXTDIV (Bit 0)                                        */
#define RTC_CLKCR_HXTDIV_Msk              (0x3ffUL)                 /*!< HXTDIV (Bitfield-Mask: 0x3ff)                         */
#define RTC_CLKCR_HXTDIV                      RTC_CLKCR_HXTDIV_Msk
#define RTC_CLKCR_RTCCKSEL_Pos            (16UL)                    /*!< RTCCKSEL (Bit 16)                                     */
#define RTC_CLKCR_RTCCKSEL_Msk            (0x30000UL)               /*!< RTCCKSEL (Bitfield-Mask: 0x03)                        */
#define RTC_CLKCR_RTCCKSEL                      RTC_CLKCR_RTCCKSEL_Msk
#define RTC_CLKCR_RTCCKEN_Pos             (20UL)                    /*!< RTCCKEN (Bit 20)                                      */
#define RTC_CLKCR_RTCCKEN_Msk             (0x100000UL)              /*!< RTCCKEN (Bitfield-Mask: 0x01)                         */
#define RTC_CLKCR_RTCCKEN                      RTC_CLKCR_RTCCKEN_Msk
/* =========================================================  TIME  ========================================================== */
#define RTC_TIME_SEC_Pos                  (0UL)                     /*!< SEC (Bit 0)                                           */
#define RTC_TIME_SEC_Msk                  (0x7fUL)                  /*!< SEC (Bitfield-Mask: 0x7f)                             */
#define RTC_TIME_SEC                      RTC_TIME_SEC_Msk
#define RTC_TIME_MIN_Pos                  (8UL)                     /*!< MIN (Bit 8)                                           */
#define RTC_TIME_MIN_Msk                  (0x7f00UL)                /*!< MIN (Bitfield-Mask: 0x7f)                             */
#define RTC_TIME_MIN                      RTC_TIME_MIN_Msk
#define RTC_TIME_HOUR19_Pos               (16UL)                    /*!< HOUR19 (Bit 16)                                       */
#define RTC_TIME_HOUR19_Msk               (0x1f0000UL)              /*!< HOUR19 (Bitfield-Mask: 0x1f)                          */
#define RTC_TIME_HOUR19                      RTC_TIME_HOUR19_Msk
#define RTC_TIME_H20_PA_Pos               (21UL)                    /*!< H20_PA (Bit 21)                                       */
#define RTC_TIME_H20_PA_Msk               (0x200000UL)              /*!< H20_PA (Bitfield-Mask: 0x01)                          */
#define RTC_TIME_H20_PA                      RTC_TIME_H20_PA_Msk
#define RTC_TIME_WEEK_Pos                 (24UL)                    /*!< WEEK (Bit 24)                                         */
#define RTC_TIME_WEEK_Msk                 (0x7000000UL)             /*!< WEEK (Bitfield-Mask: 0x07)                            */
#define RTC_TIME_WEEK                      RTC_TIME_WEEK_Msk
/* =========================================================  DATE  ========================================================== */
#define RTC_DATE_DAY_Pos                  (0UL)                     /*!< DAY (Bit 0)                                           */
#define RTC_DATE_DAY_Msk                  (0x3fUL)                  /*!< DAY (Bitfield-Mask: 0x3f)                             */
#define RTC_DATE_DAY                      RTC_DATE_DAY_Msk
#define RTC_DATE_MONTH_Pos                (8UL)                     /*!< MONTH (Bit 8)                                         */
#define RTC_DATE_MONTH_Msk                (0x1f00UL)                /*!< MONTH (Bitfield-Mask: 0x1f)                           */
#define RTC_DATE_MONTH                      RTC_DATE_MONTH_Msk
#define RTC_DATE_CEN_Pos                  (15UL)                    /*!< CEN (Bit 15)                                          */
#define RTC_DATE_CEN_Msk                  (0x8000UL)                /*!< CEN (Bitfield-Mask: 0x01)                             */
#define RTC_DATE_CEN                      RTC_DATE_CEN_Msk
#define RTC_DATE_YEAR_Pos                 (16UL)                    /*!< YEAR (Bit 16)                                         */
#define RTC_DATE_YEAR_Msk                 (0xff0000UL)              /*!< YEAR (Bitfield-Mask: 0xff)                            */
#define RTC_DATE_YEAR                      RTC_DATE_YEAR_Msk
/* =======================================================  ALM1TIME  ======================================================== */
#define RTC_ALM1TIME_ALSEC_Pos            (0UL)                     /*!< ALSEC (Bit 0)                                         */
#define RTC_ALM1TIME_ALSEC_Msk            (0x7fUL)                  /*!< ALSEC (Bitfield-Mask: 0x7f)                           */
#define RTC_ALM1TIME_ALSEC                      RTC_ALM1TIME_ALSEC_Msk
#define RTC_ALM1TIME_ALMIN_Pos            (8UL)                     /*!< ALMIN (Bit 8)                                         */
#define RTC_ALM1TIME_ALMIN_Msk            (0x7f00UL)                /*!< ALMIN (Bitfield-Mask: 0x7f)                           */
#define RTC_ALM1TIME_ALMIN                      RTC_ALM1TIME_ALMIN_Msk
#define RTC_ALM1TIME_ALHOUR19_Pos         (16UL)                    /*!< ALHOUR19 (Bit 16)                                     */
#define RTC_ALM1TIME_ALHOUR19_Msk         (0x1f0000UL)              /*!< ALHOUR19 (Bitfield-Mask: 0x1f)                        */
#define RTC_ALM1TIME_ALHOUR19                      RTC_ALM1TIME_ALHOUR19_Msk
#define RTC_ALM1TIME_ALH20_PA_Pos         (21UL)                    /*!< ALH20_PA (Bit 21)                                     */
#define RTC_ALM1TIME_ALH20_PA_Msk         (0x200000UL)              /*!< ALH20_PA (Bitfield-Mask: 0x01)                        */
#define RTC_ALM1TIME_ALH20_PA                      RTC_ALM1TIME_ALH20_PA_Msk
#define RTC_ALM1TIME_ALWEEK_Pos           (24UL)                    /*!< ALWEEK (Bit 24)                                       */
#define RTC_ALM1TIME_ALWEEK_Msk           (0x7000000UL)             /*!< ALWEEK (Bitfield-Mask: 0x07)                          */
#define RTC_ALM1TIME_ALWEEK                      RTC_ALM1TIME_ALWEEK_Msk
/* =======================================================  ALM1DATE  ======================================================== */
#define RTC_ALM1DATE_ALDAY_Pos            (0UL)                     /*!< ALDAY (Bit 0)                                         */
#define RTC_ALM1DATE_ALDAY_Msk            (0x3fUL)                  /*!< ALDAY (Bitfield-Mask: 0x3f)                           */
#define RTC_ALM1DATE_ALDAY                      RTC_ALM1DATE_ALDAY_Msk
#define RTC_ALM1DATE_ALMONTH_Pos          (8UL)                     /*!< ALMONTH (Bit 8)                                       */
#define RTC_ALM1DATE_ALMONTH_Msk          (0x1f00UL)                /*!< ALMONTH (Bitfield-Mask: 0x1f)                         */
#define RTC_ALM1DATE_ALMONTH                      RTC_ALM1DATE_ALMONTH_Msk
#define RTC_ALM1DATE_ALCEN_Pos            (15UL)                    /*!< ALCEN (Bit 15)                                        */
#define RTC_ALM1DATE_ALCEN_Msk            (0x8000UL)                /*!< ALCEN (Bitfield-Mask: 0x01)                           */
#define RTC_ALM1DATE_ALCEN                      RTC_ALM1DATE_ALCEN_Msk
#define RTC_ALM1DATE_ALYEAR_Pos           (16UL)                    /*!< ALYEAR (Bit 16)                                       */
#define RTC_ALM1DATE_ALYEAR_Msk           (0xff0000UL)              /*!< ALYEAR (Bitfield-Mask: 0xff)                          */
#define RTC_ALM1DATE_ALYEAR                      RTC_ALM1DATE_ALYEAR_Msk
#define RTC_ALM1DATE_ALMSECEN_Pos         (24UL)                    /*!< ALMSECEN (Bit 24)                                     */
#define RTC_ALM1DATE_ALMSECEN_Msk         (0x1000000UL)             /*!< ALMSECEN (Bitfield-Mask: 0x01)                        */
#define RTC_ALM1DATE_ALMSECEN                      RTC_ALM1DATE_ALMSECEN_Msk
#define RTC_ALM1DATE_ALMMINEN_Pos         (25UL)                    /*!< ALMMINEN (Bit 25)                                     */
#define RTC_ALM1DATE_ALMMINEN_Msk         (0x2000000UL)             /*!< ALMMINEN (Bitfield-Mask: 0x01)                        */
#define RTC_ALM1DATE_ALMMINEN                      RTC_ALM1DATE_ALMMINEN_Msk
#define RTC_ALM1DATE_ALMHOUREN_Pos        (26UL)                    /*!< ALMHOUREN (Bit 26)                                    */
#define RTC_ALM1DATE_ALMHOUREN_Msk        (0x4000000UL)             /*!< ALMHOUREN (Bitfield-Mask: 0x01)                       */
#define RTC_ALM1DATE_ALMHOUREN                      RTC_ALM1DATE_ALMHOUREN_Msk
#define RTC_ALM1DATE_ALMWEEKEN_Pos        (27UL)                    /*!< ALMWEEKEN (Bit 27)                                    */
#define RTC_ALM1DATE_ALMWEEKEN_Msk        (0x8000000UL)             /*!< ALMWEEKEN (Bitfield-Mask: 0x01)                       */
#define RTC_ALM1DATE_ALMWEEKEN                      RTC_ALM1DATE_ALMWEEKEN_Msk
#define RTC_ALM1DATE_ALMDAYEN_Pos         (28UL)                    /*!< ALMDAYEN (Bit 28)                                     */
#define RTC_ALM1DATE_ALMDAYEN_Msk         (0x10000000UL)            /*!< ALMDAYEN (Bitfield-Mask: 0x01)                        */
#define RTC_ALM1DATE_ALMDAYEN                      RTC_ALM1DATE_ALMDAYEN_Msk
#define RTC_ALM1DATE_ALMMONEN_Pos         (29UL)                    /*!< ALMMONEN (Bit 29)                                     */
#define RTC_ALM1DATE_ALMMONEN_Msk         (0x20000000UL)            /*!< ALMMONEN (Bitfield-Mask: 0x01)                        */
#define RTC_ALM1DATE_ALMMONEN                      RTC_ALM1DATE_ALMMONEN_Msk
#define RTC_ALM1DATE_ALMYEAREN_Pos        (30UL)                    /*!< ALMYEAREN (Bit 30)                                    */
#define RTC_ALM1DATE_ALMYEAREN_Msk        (0x40000000UL)            /*!< ALMYEAREN (Bitfield-Mask: 0x01)                       */
#define RTC_ALM1DATE_ALMYEAREN                      RTC_ALM1DATE_ALMYEAREN_Msk
/* ========================================================  ALM2PRD  ======================================================== */
#define RTC_ALM2PRD_ALM2PR_CNT_Pos        (0UL)                     /*!< ALM2PR_CNT (Bit 0)                                    */
#define RTC_ALM2PRD_ALM2PR_CNT_Msk        (0xfUL)                   /*!< ALM2PR_CNT (Bitfield-Mask: 0x0f)                      */
#define RTC_ALM2PRD_ALM2PR_CNT                      RTC_ALM2PRD_ALM2PR_CNT_Msk
/* =======================================================  RCLKTRIM  ======================================================== */
#define RTC_RCLKTRIM_TRIM_Pos             (0UL)                     /*!< TRIM (Bit 0)                                          */
#define RTC_RCLKTRIM_TRIM_Msk             (0xffUL)                  /*!< TRIM (Bitfield-Mask: 0xff)                            */
#define RTC_RCLKTRIM_TRIM                      RTC_RCLKTRIM_TRIM_Msk
#define RTC_RCLKTRIM_MODE_Pos             (8UL)                     /*!< MODE (Bit 8)                                          */
#define RTC_RCLKTRIM_MODE_Msk             (0x300UL)                 /*!< MODE (Bitfield-Mask: 0x03)                            */
#define RTC_RCLKTRIM_MODE                      RTC_RCLKTRIM_MODE_Msk
/* ==========================================================  ISR  ========================================================== */
#define RTC_ISR_WAIT_Pos                  (0UL)                     /*!< WAIT (Bit 0)                                          */
#define RTC_ISR_WAIT_Msk                  (0x1UL)                   /*!< WAIT (Bitfield-Mask: 0x01)                            */
#define RTC_ISR_WAIT                      RTC_ISR_WAIT_Msk
#define RTC_ISR_WAITF_Pos                 (1UL)                     /*!< WAITF (Bit 1)                                         */
#define RTC_ISR_WAITF_Msk                 (0x2UL)                   /*!< WAITF (Bitfield-Mask: 0x01)                           */
#define RTC_ISR_WAITF                      RTC_ISR_WAITF_Msk
#define RTC_ISR_RSF_Pos                   (2UL)                     /*!< RSF (Bit 2)                                           */
#define RTC_ISR_RSF_Msk                   (0x4UL)                   /*!< RSF (Bitfield-Mask: 0x01)                             */
#define RTC_ISR_RSF                      RTC_ISR_RSF_Msk
#define RTC_ISR_ALM1_F_Pos                (4UL)                     /*!< ALM1_F (Bit 4)                                        */
#define RTC_ISR_ALM1_F_Msk                (0x10UL)                  /*!< ALM1_F (Bitfield-Mask: 0x01)                          */
#define RTC_ISR_ALM1_F                      RTC_ISR_ALM1_F_Msk
#define RTC_ISR_ALM2_F_Pos                (5UL)                     /*!< ALM2_F (Bit 5)                                        */
#define RTC_ISR_ALM2_F_Msk                (0x20UL)                  /*!< ALM2_F (Bitfield-Mask: 0x01)                          */
#define RTC_ISR_ALM2_F                      RTC_ISR_ALM2_F_Msk
/* ========================================================  INTCLR  ========================================================= */
#define RTC_INTCLR_ALM1_CLR_Pos           (4UL)                     /*!< ALM1_CLR (Bit 4)                                      */
#define RTC_INTCLR_ALM1_CLR_Msk           (0x10UL)                  /*!< ALM1_CLR (Bitfield-Mask: 0x01)                        */
#define RTC_INTCLR_ALM1_CLR                      RTC_INTCLR_ALM1_CLR_Msk
#define RTC_INTCLR_ALM2_CLR_Pos           (5UL)                     /*!< ALM2_CLR (Bit 5)                                      */
#define RTC_INTCLR_ALM2_CLR_Msk           (0x20UL)                  /*!< ALM2_CLR (Bitfield-Mask: 0x01)                        */
#define RTC_INTCLR_ALM2_CLR                      RTC_INTCLR_ALM2_CLR_Msk
/* ==========================================================  WPR  ========================================================== */
#define RTC_WPR_WPR_Pos                   (0UL)                     /*!< WPR (Bit 0)                                           */
#define RTC_WPR_WPR_Msk                   (0xffUL)                  /*!< WPR (Bitfield-Mask: 0xff)                             */
#define RTC_WPR_WPR                      RTC_WPR_WPR_Msk


/* =========================================================================================================================== */
/* ================                                          CLKTRIM                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
#define CLKTRIM_CR_TRIM_START_Pos         (0UL)                     /*!< TRIM_START (Bit 0)                                    */
#define CLKTRIM_CR_TRIM_START_Msk         (0x1UL)                   /*!< TRIM_START (Bitfield-Mask: 0x01)                      */
#define CLKTRIM_CR_TRIM_START                      CLKTRIM_CR_TRIM_START_Msk
#define CLKTRIM_CR_REFCLK_SEL_Pos         (1UL)                     /*!< REFCLK_SEL (Bit 1)                                    */
#define CLKTRIM_CR_REFCLK_SEL_Msk         (0xeUL)                   /*!< REFCLK_SEL (Bitfield-Mask: 0x07)                      */
#define CLKTRIM_CR_REFCLK_SEL                      CLKTRIM_CR_REFCLK_SEL_Msk
#define CLKTRIM_CR_CALCLK_SEL_Pos         (4UL)                     /*!< CALCLK_SEL (Bit 4)                                    */
#define CLKTRIM_CR_CALCLK_SEL_Msk         (0x30UL)                  /*!< CALCLK_SEL (Bitfield-Mask: 0x03)                      */
#define CLKTRIM_CR_CALCLK_SEL                      CLKTRIM_CR_CALCLK_SEL_Msk
#define CLKTRIM_CR_MON_EN_Pos             (6UL)                     /*!< MON_EN (Bit 6)                                        */
#define CLKTRIM_CR_MON_EN_Msk             (0x40UL)                  /*!< MON_EN (Bitfield-Mask: 0x01)                          */
#define CLKTRIM_CR_MON_EN                      CLKTRIM_CR_MON_EN_Msk
#define CLKTRIM_CR_IE_Pos                 (7UL)                     /*!< IE (Bit 7)                                            */
#define CLKTRIM_CR_IE_Msk                 (0x80UL)                  /*!< IE (Bitfield-Mask: 0x01)                              */
#define CLKTRIM_CR_IE                      CLKTRIM_CR_IE_Msk
#define CLKTRIM_CR_CLKEN_Pos              (8UL)                     /*!< CLKEN (Bit 8)                                         */
#define CLKTRIM_CR_CLKEN_Msk              (0x100UL)                 /*!< CLKEN (Bitfield-Mask: 0x01)                           */
#define CLKTRIM_CR_CLKEN                      CLKTRIM_CR_CLKEN_Msk
/* ========================================================  REFCON  ========================================================= */
#define CLKTRIM_REFCON_RCNTVAL_Pos        (0UL)                     /*!< RCNTVAL (Bit 0)                                       */
#define CLKTRIM_REFCON_RCNTVAL_Msk        (0xffffffffUL)            /*!< RCNTVAL (Bitfield-Mask: 0xffffffff)                   */
#define CLKTRIM_REFCON_RCNTVAL                      CLKTRIM_REFCON_RCNTVAL_Msk
/* ========================================================  REFCNT  ========================================================= */
#define CLKTRIM_REFCNT_REFCNT_Pos         (0UL)                     /*!< REFCNT (Bit 0)                                        */
#define CLKTRIM_REFCNT_REFCNT_Msk         (0xffffffffUL)            /*!< REFCNT (Bitfield-Mask: 0xffffffff)                    */
#define CLKTRIM_REFCNT_REFCNT                      CLKTRIM_REFCNT_REFCNT_Msk
/* ========================================================  CALCNT  ========================================================= */
#define CLKTRIM_CALCNT_CALCNT_Pos         (0UL)                     /*!< CALCNT (Bit 0)                                        */
#define CLKTRIM_CALCNT_CALCNT_Msk         (0xffffffffUL)            /*!< CALCNT (Bitfield-Mask: 0xffffffff)                    */
#define CLKTRIM_CALCNT_CALCNT                      CLKTRIM_CALCNT_CALCNT_Msk
/* ==========================================================  IFR  ========================================================== */
#define CLKTRIM_IFR_STOP_Pos              (0UL)                     /*!< STOP (Bit 0)                                          */
#define CLKTRIM_IFR_STOP_Msk              (0x1UL)                   /*!< STOP (Bitfield-Mask: 0x01)                            */
#define CLKTRIM_IFR_STOP                      CLKTRIM_IFR_STOP_Msk
#define CLKTRIM_IFR_CALCNT_OVF_Pos        (1UL)                     /*!< CALCNT_OVF (Bit 1)                                    */
#define CLKTRIM_IFR_CALCNT_OVF_Msk        (0x2UL)                   /*!< CALCNT_OVF (Bitfield-Mask: 0x01)                      */
#define CLKTRIM_IFR_CALCNT_OVF                      CLKTRIM_IFR_CALCNT_OVF_Msk
#define CLKTRIM_IFR_LXT_FAULT_Pos         (2UL)                     /*!< LXT_FAULT (Bit 2)                                     */
#define CLKTRIM_IFR_LXT_FAULT_Msk         (0x4UL)                   /*!< LXT_FAULT (Bitfield-Mask: 0x01)                       */
#define CLKTRIM_IFR_LXT_FAULT                      CLKTRIM_IFR_LXT_FAULT_Msk
#define CLKTRIM_IFR_HXT_FAULT_Pos         (3UL)                     /*!< HXT_FAULT (Bit 3)                                     */
#define CLKTRIM_IFR_HXT_FAULT_Msk         (0x8UL)                   /*!< HXT_FAULT (Bitfield-Mask: 0x01)                       */
#define CLKTRIM_IFR_HXT_FAULT                      CLKTRIM_IFR_HXT_FAULT_Msk
/* =========================================================  ICLR  ========================================================== */
#define CLKTRIM_ICLR_LXT_FAULT_CLR_Pos    (2UL)                     /*!< LXT_FAULT_CLR (Bit 2)                                 */
#define CLKTRIM_ICLR_LXT_FAULT_CLR_Msk    (0x4UL)                   /*!< LXT_FAULT_CLR (Bitfield-Mask: 0x01)                   */
#define CLKTRIM_ICLR_LXT_FAULT_CLR                      CLKTRIM_ICLR_LXT_FAULT_CLR_Msk
#define CLKTRIM_ICLR_HXT_FAULT_CLR_Pos    (3UL)                     /*!< HXT_FAULT_CLR (Bit 3)                                 */
#define CLKTRIM_ICLR_HXT_FAULT_CLR_Msk    (0x8UL)                   /*!< HXT_FAULT_CLR (Bitfield-Mask: 0x01)                   */
#define CLKTRIM_ICLR_HXT_FAULT_CLR                      CLKTRIM_ICLR_HXT_FAULT_CLR_Msk
/* ========================================================  CALCON  ========================================================= */
#define CLKTRIM_CALCON_CALOVCNT_Pos       (0UL)                     /*!< CALOVCNT (Bit 0)                                      */
#define CLKTRIM_CALCON_CALOVCNT_Msk       (0xffffUL)                /*!< CALOVCNT (Bitfield-Mask: 0xffff)                      */
#define CLKTRIM_CALCON_CALOVCNT                      CLKTRIM_CALCON_CALOVCNT_Msk


/* =========================================================================================================================== */
/* ================                                           OWIRE                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
#define OWIRE_CR_CLKDIV_Pos               (0UL)                     /*!< CLKDIV (Bit 0)                                        */
#define OWIRE_CR_CLKDIV_Msk               (0x3UL)                   /*!< CLKDIV (Bitfield-Mask: 0x03)                          */
#define OWIRE_CR_CLKDIV                      OWIRE_CR_CLKDIV_Msk
#define OWIRE_CR_SIZE_Pos                 (4UL)                     /*!< SIZE (Bit 4)                                          */
#define OWIRE_CR_SIZE_Msk                 (0x10UL)                  /*!< SIZE (Bitfield-Mask: 0x01)                            */
#define OWIRE_CR_SIZE                      OWIRE_CR_SIZE_Msk
#define OWIRE_CR_EN_Pos                   (5UL)                     /*!< EN (Bit 5)                                            */
#define OWIRE_CR_EN_Msk                   (0x20UL)                  /*!< EN (Bitfield-Mask: 0x01)                              */
#define OWIRE_CR_EN                      OWIRE_CR_EN_Msk
#define OWIRE_CR_MSBFIRST_Pos             (6UL)                     /*!< MSBFIRST (Bit 6)                                      */
#define OWIRE_CR_MSBFIRST_Msk             (0x40UL)                  /*!< MSBFIRST (Bitfield-Mask: 0x01)                        */
#define OWIRE_CR_MSBFIRST                      OWIRE_CR_MSBFIRST_Msk
#define OWIRE_CR_RDMODE_Pos               (7UL)                     /*!< RDMODE (Bit 7)                                        */
#define OWIRE_CR_RDMODE_Msk               (0x80UL)                  /*!< RDMODE (Bitfield-Mask: 0x01)                          */
#define OWIRE_CR_RDMODE                      OWIRE_CR_RDMODE_Msk
/* =========================================================  NFCR  ========================================================== */
#define OWIRE_NFCR_NFDIV_Pos              (0UL)                     /*!< NFDIV (Bit 0)                                         */
#define OWIRE_NFCR_NFDIV_Msk              (0x3UL)                   /*!< NFDIV (Bitfield-Mask: 0x03)                           */
#define OWIRE_NFCR_NFDIV                      OWIRE_NFCR_NFDIV_Msk
#define OWIRE_NFCR_NFEN_Pos               (4UL)                     /*!< NFEN (Bit 4)                                          */
#define OWIRE_NFCR_NFEN_Msk               (0x10UL)                  /*!< NFEN (Bitfield-Mask: 0x01)                            */
#define OWIRE_NFCR_NFEN                      OWIRE_NFCR_NFEN_Msk
/* ========================================================  RSTCNT  ========================================================= */
#define OWIRE_RSTCNT_RSTCNT_Pos           (0UL)                     /*!< RSTCNT (Bit 0)                                        */
#define OWIRE_RSTCNT_RSTCNT_Msk           (0xffffUL)                /*!< RSTCNT (Bitfield-Mask: 0xffff)                        */
#define OWIRE_RSTCNT_RSTCNT                      OWIRE_RSTCNT_RSTCNT_Msk
/* ========================================================  PRESCNT  ======================================================== */
#define OWIRE_PRESCNT_PRESCNT_Pos         (0UL)                     /*!< PRESCNT (Bit 0)                                       */
#define OWIRE_PRESCNT_PRESCNT_Msk         (0x1fffUL)                /*!< PRESCNT (Bitfield-Mask: 0x1fff)                       */
#define OWIRE_PRESCNT_PRESCNT                      OWIRE_PRESCNT_PRESCNT_Msk
/* ======================================================  BITRATECNT  ======================================================= */
#define OWIRE_BITRATECNT_BITRATECNT_Pos   (0UL)                     /*!< BITRATECNT (Bit 0)                                    */
#define OWIRE_BITRATECNT_BITRATECNT_Msk   (0xfffUL)                 /*!< BITRATECNT (Bitfield-Mask: 0xfff)                     */
#define OWIRE_BITRATECNT_BITRATECNT                      OWIRE_BITRATECNT_BITRATECNT_Msk
/* ========================================================  DRVCNT  ========================================================= */
#define OWIRE_DRVCNT_DRVCNT_Pos           (0UL)                     /*!< DRVCNT (Bit 0)                                        */
#define OWIRE_DRVCNT_DRVCNT_Msk           (0x1ffUL)                 /*!< DRVCNT (Bitfield-Mask: 0x1ff)                         */
#define OWIRE_DRVCNT_DRVCNT                      OWIRE_DRVCNT_DRVCNT_Msk
/* =======================================================  RDSMPCNT  ======================================================== */
#define OWIRE_RDSMPCNT_RDSMPCNT_Pos       (0UL)                     /*!< RDSMPCNT (Bit 0)                                      */
#define OWIRE_RDSMPCNT_RDSMPCNT_Msk       (0x1ffUL)                 /*!< RDSMPCNT (Bitfield-Mask: 0x1ff)                       */
#define OWIRE_RDSMPCNT_RDSMPCNT                      OWIRE_RDSMPCNT_RDSMPCNT_Msk
/* ========================================================  RECCNT  ========================================================= */
#define OWIRE_RECCNT_RECCNT_Pos           (0UL)                     /*!< RECCNT (Bit 0)                                        */
#define OWIRE_RECCNT_RECCNT_Msk           (0x7ffUL)                 /*!< RECCNT (Bitfield-Mask: 0x7ff)                         */
#define OWIRE_RECCNT_RECCNT                      OWIRE_RECCNT_RECCNT_Msk
/* =========================================================  DATA  ========================================================== */
#define OWIRE_DATA_DATA_Pos               (0UL)                     /*!< DATA (Bit 0)                                          */
#define OWIRE_DATA_DATA_Msk               (0xffUL)                  /*!< DATA (Bitfield-Mask: 0xff)                            */
#define OWIRE_DATA_DATA                      OWIRE_DATA_DATA_Msk
/* ==========================================================  CMD  ========================================================== */
#define OWIRE_CMD_CMD_Pos                 (0UL)                     /*!< CMD (Bit 0)                                           */
#define OWIRE_CMD_CMD_Msk                 (0x3UL)                   /*!< CMD (Bitfield-Mask: 0x03)                             */
#define OWIRE_CMD_CMD                      OWIRE_CMD_CMD_Msk
/* =========================================================  INTEN  ========================================================= */
#define OWIRE_INTEN_ACKERREN_Pos          (0UL)                     /*!< ACKERREN (Bit 0)                                      */
#define OWIRE_INTEN_ACKERREN_Msk          (0x1UL)                   /*!< ACKERREN (Bitfield-Mask: 0x01)                        */
#define OWIRE_INTEN_ACKERREN                      OWIRE_INTEN_ACKERREN_Msk
#define OWIRE_INTEN_INITEN_Pos            (1UL)                     /*!< INITEN (Bit 1)                                        */
#define OWIRE_INTEN_INITEN_Msk            (0x2UL)                   /*!< INITEN (Bitfield-Mask: 0x01)                          */
#define OWIRE_INTEN_INITEN                      OWIRE_INTEN_INITEN_Msk
#define OWIRE_INTEN_TXDONEEN_Pos          (2UL)                     /*!< TXDONEEN (Bit 2)                                      */
#define OWIRE_INTEN_TXDONEEN_Msk          (0x4UL)                   /*!< TXDONEEN (Bitfield-Mask: 0x01)                        */
#define OWIRE_INTEN_TXDONEEN                      OWIRE_INTEN_TXDONEEN_Msk
#define OWIRE_INTEN_RXDONEEN_Pos          (3UL)                     /*!< RXDONEEN (Bit 3)                                      */
#define OWIRE_INTEN_RXDONEEN_Msk          (0x8UL)                   /*!< RXDONEEN (Bitfield-Mask: 0x01)                        */
#define OWIRE_INTEN_RXDONEEN                      OWIRE_INTEN_RXDONEEN_Msk
/* ==========================================================  SR  =========================================================== */
#define OWIRE_SR_ACKERR_Pos               (0UL)                     /*!< ACKERR (Bit 0)                                        */
#define OWIRE_SR_ACKERR_Msk               (0x1UL)                   /*!< ACKERR (Bitfield-Mask: 0x01)                          */
#define OWIRE_SR_ACKERR                      OWIRE_SR_ACKERR_Msk
#define OWIRE_SR_INITDONE_Pos             (1UL)                     /*!< INITDONE (Bit 1)                                      */
#define OWIRE_SR_INITDONE_Msk             (0x2UL)                   /*!< INITDONE (Bitfield-Mask: 0x01)                        */
#define OWIRE_SR_INITDONE                      OWIRE_SR_INITDONE_Msk
#define OWIRE_SR_TXDONE_Pos               (2UL)                     /*!< TXDONE (Bit 2)                                        */
#define OWIRE_SR_TXDONE_Msk               (0x4UL)                   /*!< TXDONE (Bitfield-Mask: 0x01)                          */
#define OWIRE_SR_TXDONE                      OWIRE_SR_TXDONE_Msk
#define OWIRE_SR_RXDONE_Pos               (3UL)                     /*!< RXDONE (Bit 3)                                        */
#define OWIRE_SR_RXDONE_Msk               (0x8UL)                   /*!< RXDONE (Bitfield-Mask: 0x01)                          */
#define OWIRE_SR_RXDONE                      OWIRE_SR_RXDONE_Msk
/* ========================================================  INTCLR  ========================================================= */
#define OWIRE_INTCLR_ACKERRCLR_Pos        (0UL)                     /*!< ACKERRCLR (Bit 0)                                     */
#define OWIRE_INTCLR_ACKERRCLR_Msk        (0x1UL)                   /*!< ACKERRCLR (Bitfield-Mask: 0x01)                       */
#define OWIRE_INTCLR_ACKERRCLR                      OWIRE_INTCLR_ACKERRCLR_Msk
#define OWIRE_INTCLR_INTDONCECLR_Pos      (1UL)                     /*!< INTDONCECLR (Bit 1)                                   */
#define OWIRE_INTCLR_INTDONCECLR_Msk      (0x2UL)                   /*!< INTDONCECLR (Bitfield-Mask: 0x01)                     */
#define OWIRE_INTCLR_INTDONCECLR                      OWIRE_INTCLR_INTDONCECLR_Msk
#define OWIRE_INTCLR_TXDONECLR_Pos        (2UL)                     /*!< TXDONECLR (Bit 2)                                     */
#define OWIRE_INTCLR_TXDONECLR_Msk        (0x4UL)                   /*!< TXDONECLR (Bitfield-Mask: 0x01)                       */
#define OWIRE_INTCLR_TXDONECLR                      OWIRE_INTCLR_TXDONECLR_Msk
#define OWIRE_INTCLR_RXDONECLR_Pos        (3UL)                     /*!< RXDONECLR (Bit 3)                                     */
#define OWIRE_INTCLR_RXDONECLR_Msk        (0x8UL)                   /*!< RXDONECLR (Bitfield-Mask: 0x01)                       */
#define OWIRE_INTCLR_RXDONECLR                      OWIRE_INTCLR_RXDONECLR_Msk


/* =========================================================================================================================== */
/* ================                                            SPI                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
#define SPI_CR_SPR0_Pos                   (0UL)                     /*!< SPR0 (Bit 0)                                          */
#define SPI_CR_SPR0_Msk                   (0x1UL)                   /*!< SPR0 (Bitfield-Mask: 0x01)                            */
#define SPI_CR_SPR0                      SPI_CR_SPR0_Msk
#define SPI_CR_SPR1_Pos                   (1UL)                     /*!< SPR1 (Bit 1)                                          */
#define SPI_CR_SPR1_Msk                   (0x2UL)                   /*!< SPR1 (Bitfield-Mask: 0x01)                            */
#define SPI_CR_SPR1                      SPI_CR_SPR1_Msk
#define SPI_CR_CPHA_Pos                   (2UL)                     /*!< CPHA (Bit 2)                                          */
#define SPI_CR_CPHA_Msk                   (0x4UL)                   /*!< CPHA (Bitfield-Mask: 0x01)                            */
#define SPI_CR_CPHA                      SPI_CR_CPHA_Msk
#define SPI_CR_CPOL_Pos                   (3UL)                     /*!< CPOL (Bit 3)                                          */
#define SPI_CR_CPOL_Msk                   (0x8UL)                   /*!< CPOL (Bitfield-Mask: 0x01)                            */
#define SPI_CR_CPOL                      SPI_CR_CPOL_Msk
#define SPI_CR_MSTR_Pos                   (4UL)                     /*!< MSTR (Bit 4)                                          */
#define SPI_CR_MSTR_Msk                   (0x10UL)                  /*!< MSTR (Bitfield-Mask: 0x01)                            */
#define SPI_CR_MSTR                      SPI_CR_MSTR_Msk
#define SPI_CR_SPEN_Pos                   (6UL)                     /*!< SPEN (Bit 6)                                          */
#define SPI_CR_SPEN_Msk                   (0x40UL)                  /*!< SPEN (Bitfield-Mask: 0x01)                            */
#define SPI_CR_SPEN                      SPI_CR_SPEN_Msk
#define SPI_CR_SPR2_Pos                   (7UL)                     /*!< SPR2 (Bit 7)                                          */
#define SPI_CR_SPR2_Msk                   (0x80UL)                  /*!< SPR2 (Bitfield-Mask: 0x01)                            */
#define SPI_CR_SPR2                      SPI_CR_SPR2_Msk
/* ==========================================================  SSN  ========================================================== */
#define SPI_SSN_SSN_Pos                   (0UL)                     /*!< SSN (Bit 0)                                           */
#define SPI_SSN_SSN_Msk                   (0x1UL)                   /*!< SSN (Bitfield-Mask: 0x01)                             */
#define SPI_SSN_SSN                      SPI_SSN_SSN_Msk
/* ==========================================================  SR  =========================================================== */
#define SPI_SR_MDF_Pos                    (4UL)                     /*!< MDF (Bit 4)                                           */
#define SPI_SR_MDF_Msk                    (0x10UL)                  /*!< MDF (Bitfield-Mask: 0x01)                             */
#define SPI_SR_MDF                      SPI_SR_MDF_Msk
#define SPI_SR_SSERR_Pos                  (5UL)                     /*!< SSERR (Bit 5)                                         */
#define SPI_SR_SSERR_Msk                  (0x20UL)                  /*!< SSERR (Bitfield-Mask: 0x01)                           */
#define SPI_SR_SSERR                      SPI_SR_SSERR_Msk
#define SPI_SR_WCOL_Pos                   (6UL)                     /*!< WCOL (Bit 6)                                          */
#define SPI_SR_WCOL_Msk                   (0x40UL)                  /*!< WCOL (Bitfield-Mask: 0x01)                            */
#define SPI_SR_WCOL                      SPI_SR_WCOL_Msk
#define SPI_SR_SPIF_Pos                   (7UL)                     /*!< SPIF (Bit 7)                                          */
#define SPI_SR_SPIF_Msk                   (0x80UL)                  /*!< SPIF (Bitfield-Mask: 0x01)                            */
#define SPI_SR_SPIF                      SPI_SR_SPIF_Msk
/* =========================================================  DATA  ========================================================== */
#define SPI_DATA_SPDATA_Pos               (0UL)                     /*!< SPDATA (Bit 0)                                        */
#define SPI_DATA_SPDATA_Msk               (0xffUL)                  /*!< SPDATA (Bitfield-Mask: 0xff)                          */
#define SPI_DATA_SPDATA                      SPI_DATA_SPDATA_Msk


/* =========================================================================================================================== */
/* ================                                            I2C                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
#define I2C_CR_H1M_Pos                    (0UL)                     /*!< H1M (Bit 0)                                           */
#define I2C_CR_H1M_Msk                    (0x1UL)                   /*!< H1M (Bitfield-Mask: 0x01)                             */
#define I2C_CR_H1M                      I2C_CR_H1M_Msk
#define I2C_CR_AA_Pos                     (2UL)                     /*!< AA (Bit 2)                                            */
#define I2C_CR_AA_Msk                     (0x4UL)                   /*!< AA (Bitfield-Mask: 0x01)                              */
#define I2C_CR_AA                      I2C_CR_AA_Msk
#define I2C_CR_SI_Pos                     (3UL)                     /*!< SI (Bit 3)                                            */
#define I2C_CR_SI_Msk                     (0x8UL)                   /*!< SI (Bitfield-Mask: 0x01)                              */
#define I2C_CR_SI                      I2C_CR_SI_Msk
#define I2C_CR_STO_Pos                    (4UL)                     /*!< STO (Bit 4)                                           */
#define I2C_CR_STO_Msk                    (0x10UL)                  /*!< STO (Bitfield-Mask: 0x01)                             */
#define I2C_CR_STO                      I2C_CR_STO_Msk
#define I2C_CR_STA_Pos                    (5UL)                     /*!< STA (Bit 5)                                           */
#define I2C_CR_STA_Msk                    (0x20UL)                  /*!< STA (Bitfield-Mask: 0x01)                             */
#define I2C_CR_STA                      I2C_CR_STA_Msk
#define I2C_CR_ENS_Pos                    (6UL)                     /*!< ENS (Bit 6)                                           */
#define I2C_CR_ENS_Msk                    (0x40UL)                  /*!< ENS (Bitfield-Mask: 0x01)                             */
#define I2C_CR_ENS                      I2C_CR_ENS_Msk
/* =========================================================  DATA  ========================================================== */
#define I2C_DATA_I2CDAT_Pos               (0UL)                     /*!< I2CDAT (Bit 0)                                        */
#define I2C_DATA_I2CDAT_Msk               (0xffUL)                  /*!< I2CDAT (Bitfield-Mask: 0xff)                          */
#define I2C_DATA_I2CDAT                      I2C_DATA_I2CDAT_Msk
/* =========================================================  ADDR  ========================================================== */
#define I2C_ADDR_GC_Pos                   (0UL)                     /*!< GC (Bit 0)                                            */
#define I2C_ADDR_GC_Msk                   (0x1UL)                   /*!< GC (Bitfield-Mask: 0x01)                              */
#define I2C_ADDR_GC                      I2C_ADDR_GC_Msk
#define I2C_ADDR_I2CADR_Pos               (1UL)                     /*!< I2CADR (Bit 1)                                        */
#define I2C_ADDR_I2CADR_Msk               (0xfeUL)                  /*!< I2CADR (Bitfield-Mask: 0x7f)                          */
#define I2C_ADDR_I2CADR                      I2C_ADDR_I2CADR_Msk
/* ==========================================================  SR  =========================================================== */
#define I2C_SR_I2CSTA_Pos                 (0UL)                     /*!< I2CSTA (Bit 0)                                        */
#define I2C_SR_I2CSTA_Msk                 (0xffUL)                  /*!< I2CSTA (Bitfield-Mask: 0xff)                          */
#define I2C_SR_I2CSTA                      I2C_SR_I2CSTA_Msk
/* ========================================================  TIMRUN  ========================================================= */
#define I2C_TIMRUN_TME_Pos                (0UL)                     /*!< TME (Bit 0)                                           */
#define I2C_TIMRUN_TME_Msk                (0x1UL)                   /*!< TME (Bitfield-Mask: 0x01)                             */
#define I2C_TIMRUN_TME                      I2C_TIMRUN_TME_Msk
/* ========================================================  BAUDCR  ========================================================= */
#define I2C_BAUDCR_TM_Pos                 (0UL)                     /*!< TM (Bit 0)                                            */
#define I2C_BAUDCR_TM_Msk                 (0xffUL)                  /*!< TM (Bitfield-Mask: 0xff)                              */
#define I2C_BAUDCR_TM                      I2C_BAUDCR_TM_Msk


/* =========================================================================================================================== */
/* ================                                          LPUART                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  SBUF  ========================================================== */
#define LPUART_SBUF_SBUF_Pos              (0UL)                     /*!< SBUF (Bit 0)                                          */
#define LPUART_SBUF_SBUF_Msk              (0xffUL)                  /*!< SBUF (Bitfield-Mask: 0xff)                            */
#define LPUART_SBUF_SBUF                      LPUART_SBUF_SBUF_Msk
/* =========================================================  SCON  ========================================================== */
#define LPUART_SCON_RIEN_Pos              (0UL)                     /*!< RIEN (Bit 0)                                          */
#define LPUART_SCON_RIEN_Msk              (0x1UL)                   /*!< RIEN (Bitfield-Mask: 0x01)                            */
#define LPUART_SCON_RIEN                      LPUART_SCON_RIEN_Msk
#define LPUART_SCON_TIEN_Pos              (1UL)                     /*!< TIEN (Bit 1)                                          */
#define LPUART_SCON_TIEN_Msk              (0x2UL)                   /*!< TIEN (Bitfield-Mask: 0x01)                            */
#define LPUART_SCON_TIEN                      LPUART_SCON_TIEN_Msk
#define LPUART_SCON_RB8_Pos               (2UL)                     /*!< RB8 (Bit 2)                                           */
#define LPUART_SCON_RB8_Msk               (0x4UL)                   /*!< RB8 (Bitfield-Mask: 0x01)                             */
#define LPUART_SCON_RB8                      LPUART_SCON_RB8_Msk
#define LPUART_SCON_TB8_Pos               (3UL)                     /*!< TB8 (Bit 3)                                           */
#define LPUART_SCON_TB8_Msk               (0x8UL)                   /*!< TB8 (Bitfield-Mask: 0x01)                             */
#define LPUART_SCON_TB8                      LPUART_SCON_TB8_Msk
#define LPUART_SCON_REN_Pos               (4UL)                     /*!< REN (Bit 4)                                           */
#define LPUART_SCON_REN_Msk               (0x10UL)                  /*!< REN (Bitfield-Mask: 0x01)                             */
#define LPUART_SCON_REN                      LPUART_SCON_REN_Msk
#define LPUART_SCON_SM2_Pos               (5UL)                     /*!< SM2 (Bit 5)                                           */
#define LPUART_SCON_SM2_Msk               (0x20UL)                  /*!< SM2 (Bitfield-Mask: 0x01)                             */
#define LPUART_SCON_SM2                      LPUART_SCON_SM2_Msk
#define LPUART_SCON_SM0_SM1_Pos           (6UL)                     /*!< SM0_SM1 (Bit 6)                                       */
#define LPUART_SCON_SM0_SM1_Msk           (0xc0UL)                  /*!< SM0_SM1 (Bitfield-Mask: 0x03)                         */
#define LPUART_SCON_SM0_SM1                      LPUART_SCON_SM0_SM1_Msk
#define LPUART_SCON_TEEN_Pos              (8UL)                     /*!< TEEN (Bit 8)                                          */
#define LPUART_SCON_TEEN_Msk              (0x100UL)                 /*!< TEEN (Bitfield-Mask: 0x01)                            */
#define LPUART_SCON_TEEN                      LPUART_SCON_TEEN_Msk
#define LPUART_SCON_DBAUD_Pos             (9UL)                     /*!< DBAUD (Bit 9)                                         */
#define LPUART_SCON_DBAUD_Msk             (0x200UL)                 /*!< DBAUD (Bitfield-Mask: 0x01)                           */
#define LPUART_SCON_DBAUD                      LPUART_SCON_DBAUD_Msk
#define LPUART_SCON_LPMODE_Pos            (10UL)                    /*!< LPMODE (Bit 10)                                       */
#define LPUART_SCON_LPMODE_Msk            (0x400UL)                 /*!< LPMODE (Bitfield-Mask: 0x01)                          */
#define LPUART_SCON_LPMODE                      LPUART_SCON_LPMODE_Msk
#define LPUART_SCON_SCLKSEL_Pos           (11UL)                    /*!< SCLKSEL (Bit 11)                                      */
#define LPUART_SCON_SCLKSEL_Msk           (0x1800UL)                /*!< SCLKSEL (Bitfield-Mask: 0x03)                         */
#define LPUART_SCON_SCLKSEL                      LPUART_SCON_SCLKSEL_Msk
#define LPUART_SCON_PRSC_Pos              (13UL)                    /*!< PRSC (Bit 13)                                         */
#define LPUART_SCON_PRSC_Msk              (0xe000UL)                /*!< PRSC (Bitfield-Mask: 0x07)                            */
#define LPUART_SCON_PRSC                      LPUART_SCON_PRSC_Msk
#define LPUART_SCON_EN_Pos                (16UL)                    /*!< EN (Bit 16)                                           */
#define LPUART_SCON_EN_Msk                (0x10000UL)               /*!< EN (Bitfield-Mask: 0x01)                              */
#define LPUART_SCON_EN                      LPUART_SCON_EN_Msk
/* =========================================================  SADDR  ========================================================= */
#define LPUART_SADDR_SADDR_Pos            (0UL)                     /*!< SADDR (Bit 0)                                         */
#define LPUART_SADDR_SADDR_Msk            (0xffUL)                  /*!< SADDR (Bitfield-Mask: 0xff)                           */
#define LPUART_SADDR_SADDR                      LPUART_SADDR_SADDR_Msk
/* =========================================================  SADEN  ========================================================= */
#define LPUART_SADEN_SADEN_Pos            (0UL)                     /*!< SADEN (Bit 0)                                         */
#define LPUART_SADEN_SADEN_Msk            (0xffUL)                  /*!< SADEN (Bitfield-Mask: 0xff)                           */
#define LPUART_SADEN_SADEN                      LPUART_SADEN_SADEN_Msk
/* =========================================================  INTSR  ========================================================= */
#define LPUART_INTSR_RI_Pos               (0UL)                     /*!< RI (Bit 0)                                            */
#define LPUART_INTSR_RI_Msk               (0x1UL)                   /*!< RI (Bitfield-Mask: 0x01)                              */
#define LPUART_INTSR_RI                      LPUART_INTSR_RI_Msk
#define LPUART_INTSR_TI_Pos               (1UL)                     /*!< TI (Bit 1)                                            */
#define LPUART_INTSR_TI_Msk               (0x2UL)                   /*!< TI (Bitfield-Mask: 0x01)                              */
#define LPUART_INTSR_TI                      LPUART_INTSR_TI_Msk
#define LPUART_INTSR_FE_Pos               (2UL)                     /*!< FE (Bit 2)                                            */
#define LPUART_INTSR_FE_Msk               (0x4UL)                   /*!< FE (Bitfield-Mask: 0x01)                              */
#define LPUART_INTSR_FE                      LPUART_INTSR_FE_Msk
/* ========================================================  INTCLR  ========================================================= */
#define LPUART_INTCLR_RICLR_Pos           (0UL)                     /*!< RICLR (Bit 0)                                         */
#define LPUART_INTCLR_RICLR_Msk           (0x1UL)                   /*!< RICLR (Bitfield-Mask: 0x01)                           */
#define LPUART_INTCLR_RICLR                      LPUART_INTCLR_RICLR_Msk
#define LPUART_INTCLR_TICLR_Pos           (1UL)                     /*!< TICLR (Bit 1)                                         */
#define LPUART_INTCLR_TICLR_Msk           (0x2UL)                   /*!< TICLR (Bitfield-Mask: 0x01)                           */
#define LPUART_INTCLR_TICLR                      LPUART_INTCLR_TICLR_Msk
#define LPUART_INTCLR_FECLR_Pos           (2UL)                     /*!< FECLR (Bit 2)                                         */
#define LPUART_INTCLR_FECLR_Msk           (0x4UL)                   /*!< FECLR (Bitfield-Mask: 0x01)                           */
#define LPUART_INTCLR_FECLR                      LPUART_INTCLR_FECLR_Msk
/* ========================================================  BAUDCR  ========================================================= */
#define LPUART_BAUDCR_BRG_Pos             (0UL)                     /*!< BRG (Bit 0)                                           */
#define LPUART_BAUDCR_BRG_Msk             (0xffffUL)                /*!< BRG (Bitfield-Mask: 0xffff)                           */
#define LPUART_BAUDCR_BRG                      LPUART_BAUDCR_BRG_Msk
#define LPUART_BAUDCR_SELF_BRG_Pos        (16UL)                    /*!< SELF_BRG (Bit 16)                                     */
#define LPUART_BAUDCR_SELF_BRG_Msk        (0x10000UL)               /*!< SELF_BRG (Bitfield-Mask: 0x01)                        */
#define LPUART_BAUDCR_SELF_BRG                      LPUART_BAUDCR_SELF_BRG_Msk


/* =========================================================================================================================== */
/* ================                                           UART                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  SCON  ========================================================== */
#define UART_SCON_RIEN_Pos                (0UL)                     /*!< RIEN (Bit 0)                                          */
#define UART_SCON_RIEN_Msk                (0x1UL)                   /*!< RIEN (Bitfield-Mask: 0x01)                            */
#define UART_SCON_RIEN                      UART_SCON_RIEN_Msk
#define UART_SCON_TIEN_Pos                (1UL)                     /*!< TIEN (Bit 1)                                          */
#define UART_SCON_TIEN_Msk                (0x2UL)                   /*!< TIEN (Bitfield-Mask: 0x01)                            */
#define UART_SCON_TIEN                      UART_SCON_TIEN_Msk
#define UART_SCON_RB8_Pos                 (2UL)                     /*!< RB8 (Bit 2)                                           */
#define UART_SCON_RB8_Msk                 (0x4UL)                   /*!< RB8 (Bitfield-Mask: 0x01)                             */
#define UART_SCON_RB8                      UART_SCON_RB8_Msk
#define UART_SCON_TB8_Pos                 (3UL)                     /*!< TB8 (Bit 3)                                           */
#define UART_SCON_TB8_Msk                 (0x8UL)                   /*!< TB8 (Bitfield-Mask: 0x01)                             */
#define UART_SCON_TB8                      UART_SCON_TB8_Msk
#define UART_SCON_REN_Pos                 (4UL)                     /*!< REN (Bit 4)                                           */
#define UART_SCON_REN_Msk                 (0x10UL)                  /*!< REN (Bitfield-Mask: 0x01)                             */
#define UART_SCON_REN                      UART_SCON_REN_Msk
#define UART_SCON_SM2_Pos                 (5UL)                     /*!< SM2 (Bit 5)                                           */
#define UART_SCON_SM2_Msk                 (0x20UL)                  /*!< SM2 (Bitfield-Mask: 0x01)                             */
#define UART_SCON_SM2                      UART_SCON_SM2_Msk
#define UART_SCON_SM0_SM1_Pos             (6UL)                     /*!< SM0_SM1 (Bit 6)                                       */
#define UART_SCON_SM0_SM1_Msk             (0xc0UL)                  /*!< SM0_SM1 (Bitfield-Mask: 0x03)                         */
#define UART_SCON_SM0_SM1                      UART_SCON_SM0_SM1_Msk
#define UART_SCON_FEEN_Pos                (8UL)                     /*!< FEEN (Bit 8)                                          */
#define UART_SCON_FEEN_Msk                (0x100UL)                 /*!< FEEN (Bitfield-Mask: 0x01)                            */
#define UART_SCON_FEEN                      UART_SCON_FEEN_Msk
#define UART_SCON_DBAUD_Pos               (9UL)                     /*!< DBAUD (Bit 9)                                         */
#define UART_SCON_DBAUD_Msk               (0x200UL)                 /*!< DBAUD (Bitfield-Mask: 0x01)                           */
#define UART_SCON_DBAUD                      UART_SCON_DBAUD_Msk
/* =========================================================  SBUF  ========================================================== */
#define UART_SBUF_SBUF_Pos                (0UL)                     /*!< SBUF (Bit 0)                                          */
#define UART_SBUF_SBUF_Msk                (0xffUL)                  /*!< SBUF (Bitfield-Mask: 0xff)                            */
#define UART_SBUF_SBUF                      UART_SBUF_SBUF_Msk
/* =========================================================  SADDR  ========================================================= */
#define UART_SADDR_SADDR_Pos              (0UL)                     /*!< SADDR (Bit 0)                                         */
#define UART_SADDR_SADDR_Msk              (0xffUL)                  /*!< SADDR (Bitfield-Mask: 0xff)                           */
#define UART_SADDR_SADDR                      UART_SADDR_SADDR_Msk
/* =========================================================  SADEN  ========================================================= */
#define UART_SADEN_SADEN_Pos              (0UL)                     /*!< SADEN (Bit 0)                                         */
#define UART_SADEN_SADEN_Msk              (0xffUL)                  /*!< SADEN (Bitfield-Mask: 0xff)                           */
#define UART_SADEN_SADEN                      UART_SADEN_SADEN_Msk
/* =========================================================  INTSR  ========================================================= */
#define UART_INTSR_RI_Pos                 (0UL)                     /*!< RI (Bit 0)                                            */
#define UART_INTSR_RI_Msk                 (0x1UL)                   /*!< RI (Bitfield-Mask: 0x01)                              */
#define UART_INTSR_RI                      UART_INTSR_RI_Msk
#define UART_INTSR_TI_Pos                 (1UL)                     /*!< TI (Bit 1)                                            */
#define UART_INTSR_TI_Msk                 (0x2UL)                   /*!< TI (Bitfield-Mask: 0x01)                              */
#define UART_INTSR_TI                      UART_INTSR_TI_Msk
#define UART_INTSR_FE_Pos                 (2UL)                     /*!< FE (Bit 2)                                            */
#define UART_INTSR_FE_Msk                 (0x4UL)                   /*!< FE (Bitfield-Mask: 0x01)                              */
#define UART_INTSR_FE                      UART_INTSR_FE_Msk
/* ========================================================  INTCLR  ========================================================= */
#define UART_INTCLR_RICLR_Pos             (0UL)                     /*!< RICLR (Bit 0)                                         */
#define UART_INTCLR_RICLR_Msk             (0x1UL)                   /*!< RICLR (Bitfield-Mask: 0x01)                           */
#define UART_INTCLR_RICLR                      UART_INTCLR_RICLR_Msk
#define UART_INTCLR_TICLR_Pos             (1UL)                     /*!< TICLR (Bit 1)                                         */
#define UART_INTCLR_TICLR_Msk             (0x2UL)                   /*!< TICLR (Bitfield-Mask: 0x01)                           */
#define UART_INTCLR_TICLR                      UART_INTCLR_TICLR_Msk
#define UART_INTCLR_FECLR_Pos             (2UL)                     /*!< FECLR (Bit 2)                                         */
#define UART_INTCLR_FECLR_Msk             (0x4UL)                   /*!< FECLR (Bitfield-Mask: 0x01)                           */
#define UART_INTCLR_FECLR                      UART_INTCLR_FECLR_Msk
/* ========================================================  BAUDCR  ========================================================= */
#define UART_BAUDCR_BRG_Pos               (0UL)                     /*!< BRG (Bit 0)                                           */
#define UART_BAUDCR_BRG_Msk               (0xffffUL)                /*!< BRG (Bitfield-Mask: 0xffff)                           */
#define UART_BAUDCR_BRG                      UART_BAUDCR_BRG_Msk
#define UART_BAUDCR_SELF_BRG_Pos          (16UL)                    /*!< SELF_BRG (Bit 16)                                     */
#define UART_BAUDCR_SELF_BRG_Msk          (0x10000UL)               /*!< SELF_BRG (Bitfield-Mask: 0x01)                        */
#define UART_BAUDCR_SELF_BRG                      UART_BAUDCR_SELF_BRG_Msk
/* ========================================================  IRDACR  ========================================================= */
#define UART_IRDACR_PSC_Pos               (0UL)                     /*!< PSC (Bit 0)                                           */
#define UART_IRDACR_PSC_Msk               (0xffUL)                  /*!< PSC (Bitfield-Mask: 0xff)                             */
#define UART_IRDACR_PSC                      UART_IRDACR_PSC_Msk
#define UART_IRDACR_IREN_Pos              (8UL)                     /*!< IREN (Bit 8)                                          */
#define UART_IRDACR_IREN_Msk              (0x100UL)                 /*!< IREN (Bitfield-Mask: 0x01)                            */
#define UART_IRDACR_IREN                      UART_IRDACR_IREN_Msk
#define UART_IRDACR_IRTXINV_Pos           (9UL)                     /*!< IRTXINV (Bit 9)                                       */
#define UART_IRDACR_IRTXINV_Msk           (0x200UL)                 /*!< IRTXINV (Bitfield-Mask: 0x01)                         */
#define UART_IRDACR_IRTXINV                      UART_IRDACR_IRTXINV_Msk
#define UART_IRDACR_IRRXINV_Pos           (10UL)                    /*!< IRRXINV (Bit 10)                                      */
#define UART_IRDACR_IRRXINV_Msk           (0x400UL)                 /*!< IRRXINV (Bitfield-Mask: 0x01)                         */
#define UART_IRDACR_IRRXINV                      UART_IRDACR_IRRXINV_Msk
#define UART_IRDACR_IRLPMODE_Pos          (11UL)                    /*!< IRLPMODE (Bit 11)                                     */
#define UART_IRDACR_IRLPMODE_Msk          (0x800UL)                 /*!< IRLPMODE (Bitfield-Mask: 0x01)                        */
#define UART_IRDACR_IRLPMODE                      UART_IRDACR_IRLPMODE_Msk


/* =========================================================================================================================== */
/* ================                                           WWDG                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  RLOAD  ========================================================= */
#define WWDG_RLOAD_RLOAD_Pos              (0UL)                     /*!< RLOAD (Bit 0)                                         */
#define WWDG_RLOAD_RLOAD_Msk              (0xffUL)                  /*!< RLOAD (Bitfield-Mask: 0xff)                           */
#define WWDG_RLOAD_RLOAD                      WWDG_RLOAD_RLOAD_Msk
/* ==========================================================  CR  =========================================================== */
#define WWDG_CR_WINCMP_Pos                (0UL)                     /*!< WINCMP (Bit 0)                                        */
#define WWDG_CR_WINCMP_Msk                (0xffUL)                  /*!< WINCMP (Bitfield-Mask: 0xff)                          */
#define WWDG_CR_WINCMP                      WWDG_CR_WINCMP_Msk
#define WWDG_CR_PRSC_Pos                  (8UL)                     /*!< PRSC (Bit 8)                                          */
#define WWDG_CR_PRSC_Msk                  (0xfffff00UL)             /*!< PRSC (Bitfield-Mask: 0xfffff)                         */
#define WWDG_CR_PRSC                      WWDG_CR_PRSC_Msk
#define WWDG_CR_WWDGEN_Pos                (28UL)                    /*!< WWDGEN (Bit 28)                                       */
#define WWDG_CR_WWDGEN_Msk                (0x10000000UL)            /*!< WWDGEN (Bitfield-Mask: 0x01)                          */
#define WWDG_CR_WWDGEN                      WWDG_CR_WWDGEN_Msk
/* =========================================================  INTEN  ========================================================= */
#define WWDG_INTEN_WWDGIEN_Pos            (0UL)                     /*!< WWDGIEN (Bit 0)                                       */
#define WWDG_INTEN_WWDGIEN_Msk            (0x1UL)                   /*!< WWDGIEN (Bitfield-Mask: 0x01)                         */
#define WWDG_INTEN_WWDGIEN                      WWDG_INTEN_WWDGIEN_Msk
/* ==========================================================  SR  =========================================================== */
#define WWDG_SR_WWDGIF_Pos                (0UL)                     /*!< WWDGIF (Bit 0)                                        */
#define WWDG_SR_WWDGIF_Msk                (0x1UL)                   /*!< WWDGIF (Bitfield-Mask: 0x01)                          */
#define WWDG_SR_WWDGIF                      WWDG_SR_WWDGIF_Msk
/* ========================================================  INTCLR  ========================================================= */
#define WWDG_INTCLR_INTCLR_Pos            (0UL)                     /*!< INTCLR (Bit 0)                                        */
#define WWDG_INTCLR_INTCLR_Msk            (0x1UL)                   /*!< INTCLR (Bitfield-Mask: 0x01)                          */
#define WWDG_INTCLR_INTCLR                      WWDG_INTCLR_INTCLR_Msk
/* ========================================================  CNTVAL  ========================================================= */
#define WWDG_CNTVAL_WWDGCNT_Pos           (0UL)                     /*!< WWDGCNT (Bit 0)                                       */
#define WWDG_CNTVAL_WWDGCNT_Msk           (0xffUL)                  /*!< WWDGCNT (Bitfield-Mask: 0xff)                         */
#define WWDG_CNTVAL_WWDGCNT                      WWDG_CNTVAL_WWDGCNT_Msk


/* =========================================================================================================================== */
/* ================                                           IWDG                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  CMDCR  ========================================================= */
#define IWDG_CMDCR_CMD_Pos                (0UL)                     /*!< CMD (Bit 0)                                           */
#define IWDG_CMDCR_CMD_Msk                (0xffUL)                  /*!< CMD (Bitfield-Mask: 0xff)                             */
#define IWDG_CMDCR_CMD                      IWDG_CMDCR_CMD_Msk
/* =========================================================  CFGR  ========================================================== */
#define IWDG_CFGR_IWDGMODE_Pos            (0UL)                     /*!< IWDGMODE (Bit 0)                                      */
#define IWDG_CFGR_IWDGMODE_Msk            (0x1UL)                   /*!< IWDGMODE (Bitfield-Mask: 0x01)                        */
#define IWDG_CFGR_IWDGMODE                      IWDG_CFGR_IWDGMODE_Msk
#define IWDG_CFGR_IWDGINTMSK_Pos          (1UL)                     /*!< IWDGINTMSK (Bit 1)                                    */
#define IWDG_CFGR_IWDGINTMSK_Msk          (0x2UL)                   /*!< IWDGINTMSK (Bitfield-Mask: 0x01)                      */
#define IWDG_CFGR_IWDGINTMSK                      IWDG_CFGR_IWDGINTMSK_Msk
#define IWDG_CFGR_IWDGRUNF_Pos            (2UL)                     /*!< IWDGRUNF (Bit 2)                                      */
#define IWDG_CFGR_IWDGRUNF_Msk            (0x4UL)                   /*!< IWDGRUNF (Bitfield-Mask: 0x01)                        */
#define IWDG_CFGR_IWDGRUNF                      IWDG_CFGR_IWDGRUNF_Msk
/* =========================================================  RLOAD  ========================================================= */
#define IWDG_RLOAD_IWDGRLOAD_Pos          (0UL)                     /*!< IWDGRLOAD (Bit 0)                                     */
#define IWDG_RLOAD_IWDGRLOAD_Msk          (0xfffffUL)               /*!< IWDGRLOAD (Bitfield-Mask: 0xfffff)                    */
#define IWDG_RLOAD_IWDGRLOAD                      IWDG_RLOAD_IWDGRLOAD_Msk
/* ========================================================  CNTVAL  ========================================================= */
#define IWDG_CNTVAL_IWDGCNT_Pos           (0UL)                     /*!< IWDGCNT (Bit 0)                                       */
#define IWDG_CNTVAL_IWDGCNT_Msk           (0xfffffUL)               /*!< IWDGCNT (Bitfield-Mask: 0xfffff)                      */
#define IWDG_CNTVAL_IWDGCNT                      IWDG_CNTVAL_IWDGCNT_Msk
/* ==========================================================  SR  =========================================================== */
#define IWDG_SR_IWDGOVF_Pos               (0UL)                     /*!< IWDGOVF (Bit 0)                                       */
#define IWDG_SR_IWDGOVF_Msk               (0x1UL)                   /*!< IWDGOVF (Bitfield-Mask: 0x01)                         */
#define IWDG_SR_IWDGOVF                      IWDG_SR_IWDGOVF_Msk
/* ========================================================  INTCLR  ========================================================= */
#define IWDG_INTCLR_IWDGINTCLR_Pos        (0UL)                     /*!< IWDGINTCLR (Bit 0)                                    */
#define IWDG_INTCLR_IWDGINTCLR_Msk        (0x1UL)                   /*!< IWDGINTCLR (Bitfield-Mask: 0x01)                      */
#define IWDG_INTCLR_IWDGINTCLR                      IWDG_INTCLR_IWDGINTCLR_Msk
/* ========================================================  UNLOCK  ========================================================= */
#define IWDG_UNLOCK_IWDGREN_Pos           (0UL)                     /*!< IWDGREN (Bit 0)                                       */
#define IWDG_UNLOCK_IWDGREN_Msk           (0x1UL)                   /*!< IWDGREN (Bitfield-Mask: 0x01)                         */
#define IWDG_UNLOCK_IWDGREN                      IWDG_UNLOCK_IWDGREN_Msk


/* =========================================================================================================================== */
/* ================                                           BEEP                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CSR  ========================================================== */
#define BEEP_CSR_BEEPDIV_Pos              (0UL)                     /*!< BEEPDIV (Bit 0)                                       */
#define BEEP_CSR_BEEPDIV_Msk              (0xfffUL)                 /*!< BEEPDIV (Bitfield-Mask: 0xfff)                        */
#define BEEP_CSR_BEEPDIV                      BEEP_CSR_BEEPDIV_Msk
#define BEEP_CSR_BEEPSEL_Pos              (16UL)                    /*!< BEEPSEL (Bit 16)                                      */
#define BEEP_CSR_BEEPSEL_Msk              (0x30000UL)               /*!< BEEPSEL (Bitfield-Mask: 0x03)                         */
#define BEEP_CSR_BEEPSEL                      BEEP_CSR_BEEPSEL_Msk
#define BEEP_CSR_BEEPEN_Pos               (18UL)                    /*!< BEEPEN (Bit 18)                                       */
#define BEEP_CSR_BEEPEN_Msk               (0x40000UL)               /*!< BEEPEN (Bitfield-Mask: 0x01)                          */
#define BEEP_CSR_BEEPEN                      BEEP_CSR_BEEPEN_Msk
#define BEEP_CSR_CLKSEL_Pos               (20UL)                    /*!< CLKSEL (Bit 20)                                       */
#define BEEP_CSR_CLKSEL_Msk               (0x300000UL)              /*!< CLKSEL (Bitfield-Mask: 0x03)                          */
#define BEEP_CSR_CLKSEL                      BEEP_CSR_CLKSEL_Msk


/* =========================================================================================================================== */
/* ================                                            AWK                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
#define AWK_CR_DIVSEL_Pos                 (0UL)                     /*!< DIVSEL (Bit 0)                                        */
#define AWK_CR_DIVSEL_Msk                 (0xfUL)                   /*!< DIVSEL (Bitfield-Mask: 0x0f)                          */
#define AWK_CR_DIVSEL                      AWK_CR_DIVSEL_Msk
#define AWK_CR_AWKEN_Pos                  (4UL)                     /*!< AWKEN (Bit 4)                                         */
#define AWK_CR_AWKEN_Msk                  (0x10UL)                  /*!< AWKEN (Bitfield-Mask: 0x01)                           */
#define AWK_CR_AWKEN                      AWK_CR_AWKEN_Msk
#define AWK_CR_TCLKSEL_Pos                (5UL)                     /*!< TCLKSEL (Bit 5)                                       */
#define AWK_CR_TCLKSEL_Msk                (0x60UL)                  /*!< TCLKSEL (Bitfield-Mask: 0x03)                         */
#define AWK_CR_TCLKSEL                      AWK_CR_TCLKSEL_Msk
#define AWK_CR_HXTPRSC_Pos                (8UL)                     /*!< HXTPRSC (Bit 8)                                       */
#define AWK_CR_HXTPRSC_Msk                (0xff00UL)                /*!< HXTPRSC (Bitfield-Mask: 0xff)                         */
#define AWK_CR_HXTPRSC                      AWK_CR_HXTPRSC_Msk
/* =========================================================  RLOAD  ========================================================= */
#define AWK_RLOAD_RLDVAL_Pos              (0UL)                     /*!< RLDVAL (Bit 0)                                        */
#define AWK_RLOAD_RLDVAL_Msk              (0xffUL)                  /*!< RLDVAL (Bitfield-Mask: 0xff)                          */
#define AWK_RLOAD_RLDVAL                      AWK_RLOAD_RLDVAL_Msk
/* ==========================================================  SR  =========================================================== */
#define AWK_SR_AWUF_Pos                   (0UL)                     /*!< AWUF (Bit 0)                                          */
#define AWK_SR_AWUF_Msk                   (0x1UL)                   /*!< AWUF (Bitfield-Mask: 0x01)                            */
#define AWK_SR_AWUF                      AWK_SR_AWUF_Msk
/* ========================================================  INTCLR  ========================================================= */
#define AWK_INTCLR_INTCLR_Pos             (0UL)                     /*!< INTCLR (Bit 0)                                        */
#define AWK_INTCLR_INTCLR_Msk             (0x1UL)                   /*!< INTCLR (Bitfield-Mask: 0x01)                          */
#define AWK_INTCLR_INTCLR                      AWK_INTCLR_INTCLR_Msk


/* =========================================================================================================================== */
/* ================                                           LPTIM                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  CNTVAL  ========================================================= */
#define LPTIM_CNTVAL_LPT_CNT_Pos          (0UL)                     /*!< LPT_CNT (Bit 0)                                       */
#define LPTIM_CNTVAL_LPT_CNT_Msk          (0xffffUL)                /*!< LPT_CNT (Bitfield-Mask: 0xffff)                       */
#define LPTIM_CNTVAL_LPT_CNT                      LPTIM_CNTVAL_LPT_CNT_Msk
/* ==========================================================  CR  =========================================================== */
#define LPTIM_CR_TIM_RUN_Pos              (0UL)                     /*!< TIM_RUN (Bit 0)                                       */
#define LPTIM_CR_TIM_RUN_Msk              (0x1UL)                   /*!< TIM_RUN (Bitfield-Mask: 0x01)                         */
#define LPTIM_CR_TIM_RUN                      LPTIM_CR_TIM_RUN_Msk
#define LPTIM_CR_MODE_Pos                 (1UL)                     /*!< MODE (Bit 1)                                          */
#define LPTIM_CR_MODE_Msk                 (0x2UL)                   /*!< MODE (Bitfield-Mask: 0x01)                            */
#define LPTIM_CR_MODE                      LPTIM_CR_MODE_Msk
#define LPTIM_CR_CT_SEL_Pos               (2UL)                     /*!< CT_SEL (Bit 2)                                        */
#define LPTIM_CR_CT_SEL_Msk               (0x4UL)                   /*!< CT_SEL (Bitfield-Mask: 0x01)                          */
#define LPTIM_CR_CT_SEL                      LPTIM_CR_CT_SEL_Msk
#define LPTIM_CR_TOG_EN_Pos               (3UL)                     /*!< TOG_EN (Bit 3)                                        */
#define LPTIM_CR_TOG_EN_Msk               (0x8UL)                   /*!< TOG_EN (Bitfield-Mask: 0x01)                          */
#define LPTIM_CR_TOG_EN                      LPTIM_CR_TOG_EN_Msk
#define LPTIM_CR_TCK_SEL_Pos              (4UL)                     /*!< TCK_SEL (Bit 4)                                       */
#define LPTIM_CR_TCK_SEL_Msk              (0x30UL)                  /*!< TCK_SEL (Bitfield-Mask: 0x03)                         */
#define LPTIM_CR_TCK_SEL                      LPTIM_CR_TCK_SEL_Msk
#define LPTIM_CR_GATE_EN_Pos              (6UL)                     /*!< GATE_EN (Bit 6)                                       */
#define LPTIM_CR_GATE_EN_Msk              (0x40UL)                  /*!< GATE_EN (Bitfield-Mask: 0x01)                         */
#define LPTIM_CR_GATE_EN                      LPTIM_CR_GATE_EN_Msk
#define LPTIM_CR_GATE_P_Pos               (7UL)                     /*!< GATE_P (Bit 7)                                        */
#define LPTIM_CR_GATE_P_Msk               (0x80UL)                  /*!< GATE_P (Bitfield-Mask: 0x01)                          */
#define LPTIM_CR_GATE_P                      LPTIM_CR_GATE_P_Msk
#define LPTIM_CR_INT_EN_Pos               (8UL)                     /*!< INT_EN (Bit 8)                                        */
#define LPTIM_CR_INT_EN_Msk               (0x100UL)                 /*!< INT_EN (Bitfield-Mask: 0x01)                          */
#define LPTIM_CR_INT_EN                      LPTIM_CR_INT_EN_Msk
#define LPTIM_CR_TCK_EN_Pos               (9UL)                     /*!< TCK_EN (Bit 9)                                        */
#define LPTIM_CR_TCK_EN_Msk               (0x200UL)                 /*!< TCK_EN (Bitfield-Mask: 0x01)                          */
#define LPTIM_CR_TCK_EN                      LPTIM_CR_TCK_EN_Msk
#define LPTIM_CR_WT_FLAG_Pos              (16UL)                    /*!< WT_FLAG (Bit 16)                                      */
#define LPTIM_CR_WT_FLAG_Msk              (0x10000UL)               /*!< WT_FLAG (Bitfield-Mask: 0x01)                         */
#define LPTIM_CR_WT_FLAG                      LPTIM_CR_WT_FLAG_Msk
/* =========================================================  LOAD  ========================================================== */
#define LPTIM_LOAD_LOAD_Pos               (0UL)                     /*!< LOAD (Bit 0)                                          */
#define LPTIM_LOAD_LOAD_Msk               (0xffffUL)                /*!< LOAD (Bitfield-Mask: 0xffff)                          */
#define LPTIM_LOAD_LOAD                      LPTIM_LOAD_LOAD_Msk
/* =========================================================  INTSR  ========================================================= */
#define LPTIM_INTSR_INTF_Pos              (0UL)                     /*!< INTF (Bit 0)                                          */
#define LPTIM_INTSR_INTF_Msk              (0x1UL)                   /*!< INTF (Bitfield-Mask: 0x01)                            */
#define LPTIM_INTSR_INTF                      LPTIM_INTSR_INTF_Msk
/* ========================================================  INTCLR  ========================================================= */
#define LPTIM_INTCLR_ICLR_Pos             (0UL)                     /*!< ICLR (Bit 0)                                          */
#define LPTIM_INTCLR_ICLR_Msk             (0x1UL)                   /*!< ICLR (Bitfield-Mask: 0x01)                            */
#define LPTIM_INTCLR_ICLR                      LPTIM_INTCLR_ICLR_Msk
/* ========================================================  BGLOAD  ========================================================= */
#define LPTIM_BGLOAD_BGLOAD_Pos           (0UL)                     /*!< BGLOAD (Bit 0)                                        */
#define LPTIM_BGLOAD_BGLOAD_Msk           (0xffffUL)                /*!< BGLOAD (Bitfield-Mask: 0xffff)                        */
#define LPTIM_BGLOAD_BGLOAD                      LPTIM_BGLOAD_BGLOAD_Msk


/* =========================================================================================================================== */
/* ================                                          BASETIM                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
#define BASETIM_CR_TMR_PRSC_Pos           (0UL)                     /*!< TMR_PRSC (Bit 0)                                      */
#define BASETIM_CR_TMR_PRSC_Msk           (0x7UL)                   /*!< TMR_PRSC (Bitfield-Mask: 0x07)                        */
#define BASETIM_CR_TMR_PRSC                      BASETIM_CR_TMR_PRSC_Msk
#define BASETIM_CR_ONESHOT_Pos            (3UL)                     /*!< ONESHOT (Bit 3)                                       */
#define BASETIM_CR_ONESHOT_Msk            (0x8UL)                   /*!< ONESHOT (Bitfield-Mask: 0x01)                         */
#define BASETIM_CR_ONESHOT                      BASETIM_CR_ONESHOT_Msk
#define BASETIM_CR_TMR_SIZE_Pos           (4UL)                     /*!< TMR_SIZE (Bit 4)                                      */
#define BASETIM_CR_TMR_SIZE_Msk           (0x10UL)                  /*!< TMR_SIZE (Bitfield-Mask: 0x01)                        */
#define BASETIM_CR_TMR_SIZE                      BASETIM_CR_TMR_SIZE_Msk
#define BASETIM_CR_INTEN_Pos              (5UL)                     /*!< INTEN (Bit 5)                                         */
#define BASETIM_CR_INTEN_Msk              (0x20UL)                  /*!< INTEN (Bitfield-Mask: 0x01)                           */
#define BASETIM_CR_INTEN                      BASETIM_CR_INTEN_Msk
#define BASETIM_CR_MODE_Pos               (6UL)                     /*!< MODE (Bit 6)                                          */
#define BASETIM_CR_MODE_Msk               (0x40UL)                  /*!< MODE (Bitfield-Mask: 0x01)                            */
#define BASETIM_CR_MODE                      BASETIM_CR_MODE_Msk
#define BASETIM_CR_TR_Pos                 (7UL)                     /*!< TR (Bit 7)                                            */
#define BASETIM_CR_TR_Msk                 (0x80UL)                  /*!< TR (Bitfield-Mask: 0x01)                              */
#define BASETIM_CR_TR                      BASETIM_CR_TR_Msk
#define BASETIM_CR_CT_SEL_Pos             (8UL)                     /*!< CT_SEL (Bit 8)                                        */
#define BASETIM_CR_CT_SEL_Msk             (0x100UL)                 /*!< CT_SEL (Bitfield-Mask: 0x01)                          */
#define BASETIM_CR_CT_SEL                      BASETIM_CR_CT_SEL_Msk
#define BASETIM_CR_TOG_EN_Pos             (9UL)                     /*!< TOG_EN (Bit 9)                                        */
#define BASETIM_CR_TOG_EN_Msk             (0x200UL)                 /*!< TOG_EN (Bitfield-Mask: 0x01)                          */
#define BASETIM_CR_TOG_EN                      BASETIM_CR_TOG_EN_Msk
#define BASETIM_CR_GATE_EN_Pos            (10UL)                    /*!< GATE_EN (Bit 10)                                      */
#define BASETIM_CR_GATE_EN_Msk            (0x400UL)                 /*!< GATE_EN (Bitfield-Mask: 0x01)                         */
#define BASETIM_CR_GATE_EN                      BASETIM_CR_GATE_EN_Msk
#define BASETIM_CR_GATE_P_Pos             (11UL)                    /*!< GATE_P (Bit 11)                                       */
#define BASETIM_CR_GATE_P_Msk             (0x800UL)                 /*!< GATE_P (Bitfield-Mask: 0x01)                          */
#define BASETIM_CR_GATE_P                      BASETIM_CR_GATE_P_Msk
/* =========================================================  LOAD  ========================================================== */
#define BASETIM_LOAD_LOAD_Pos             (0UL)                     /*!< LOAD (Bit 0)                                          */
#define BASETIM_LOAD_LOAD_Msk             (0xffffffffUL)            /*!< LOAD (Bitfield-Mask: 0xffffffff)                      */
#define BASETIM_LOAD_LOAD                      BASETIM_LOAD_LOAD_Msk
/* ==========================================================  CNT  ========================================================== */
#define BASETIM_CNT_CNT_Pos               (0UL)                     /*!< CNT (Bit 0)                                           */
#define BASETIM_CNT_CNT_Msk               (0xffffffffUL)            /*!< CNT (Bitfield-Mask: 0xffffffff)                       */
#define BASETIM_CNT_CNT                      BASETIM_CNT_CNT_Msk
/* =======================================================  RAWINTSR  ======================================================== */
#define BASETIM_RAWINTSR_RIS_Pos          (0UL)                     /*!< RIS (Bit 0)                                           */
#define BASETIM_RAWINTSR_RIS_Msk          (0x1UL)                   /*!< RIS (Bitfield-Mask: 0x01)                             */
#define BASETIM_RAWINTSR_RIS                      BASETIM_RAWINTSR_RIS_Msk
/* =======================================================  MSKINTSR  ======================================================== */
#define BASETIM_MSKINTSR_TF_Pos           (0UL)                     /*!< TF (Bit 0)                                            */
#define BASETIM_MSKINTSR_TF_Msk           (0x1UL)                   /*!< TF (Bitfield-Mask: 0x01)                              */
#define BASETIM_MSKINTSR_TF                      BASETIM_MSKINTSR_TF_Msk
/* ========================================================  INTCLR  ========================================================= */
#define BASETIM_INTCLR_INTCLR_Pos         (0UL)                     /*!< INTCLR (Bit 0)                                        */
#define BASETIM_INTCLR_INTCLR_Msk         (0x1UL)                   /*!< INTCLR (Bitfield-Mask: 0x01)                          */
#define BASETIM_INTCLR_INTCLR                      BASETIM_INTCLR_INTCLR_Msk
/* ========================================================  BGLOAD  ========================================================= */
#define BASETIM_BGLOAD_BGLOAD_Pos         (0UL)                     /*!< BGLOAD (Bit 0)                                        */
#define BASETIM_BGLOAD_BGLOAD_Msk         (0xffffffffUL)            /*!< BGLOAD (Bitfield-Mask: 0xffffffff)                    */
#define BASETIM_BGLOAD_BGLOAD                      BASETIM_BGLOAD_BGLOAD_Msk


/* =========================================================================================================================== */
/* ================                                            PCA                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
#define PCA_CR_CCF0_Pos                   (0UL)                     /*!< CCF0 (Bit 0)                                          */
#define PCA_CR_CCF0_Msk                   (0x1UL)                   /*!< CCF0 (Bitfield-Mask: 0x01)                            */
#define PCA_CR_CCF0                      PCA_CR_CCF0_Msk
#define PCA_CR_CCF1_Pos                   (1UL)                     /*!< CCF1 (Bit 1)                                          */
#define PCA_CR_CCF1_Msk                   (0x2UL)                   /*!< CCF1 (Bitfield-Mask: 0x01)                            */
#define PCA_CR_CCF1                      PCA_CR_CCF1_Msk
#define PCA_CR_CCF2_Pos                   (2UL)                     /*!< CCF2 (Bit 2)                                          */
#define PCA_CR_CCF2_Msk                   (0x4UL)                   /*!< CCF2 (Bitfield-Mask: 0x01)                            */
#define PCA_CR_CCF2                      PCA_CR_CCF2_Msk
#define PCA_CR_CCF3_Pos                   (3UL)                     /*!< CCF3 (Bit 3)                                          */
#define PCA_CR_CCF3_Msk                   (0x8UL)                   /*!< CCF3 (Bitfield-Mask: 0x01)                            */
#define PCA_CR_CCF3                      PCA_CR_CCF3_Msk
#define PCA_CR_CCF4_Pos                   (4UL)                     /*!< CCF4 (Bit 4)                                          */
#define PCA_CR_CCF4_Msk                   (0x10UL)                  /*!< CCF4 (Bitfield-Mask: 0x01)                            */
#define PCA_CR_CCF4                      PCA_CR_CCF4_Msk
#define PCA_CR_CR_Pos                     (6UL)                     /*!< CR (Bit 6)                                            */
#define PCA_CR_CR_Msk                     (0x40UL)                  /*!< CR (Bitfield-Mask: 0x01)                              */
#define PCA_CR_CR                      PCA_CR_CR_Msk
#define PCA_CR_CF_Pos                     (7UL)                     /*!< CF (Bit 7)                                            */
#define PCA_CR_CF_Msk                     (0x80UL)                  /*!< CF (Bitfield-Mask: 0x01)                              */
#define PCA_CR_CF                      PCA_CR_CF_Msk
/* ==========================================================  MOD  ========================================================== */
#define PCA_MOD_CFIE_Pos                  (0UL)                     /*!< CFIE (Bit 0)                                          */
#define PCA_MOD_CFIE_Msk                  (0x1UL)                   /*!< CFIE (Bitfield-Mask: 0x01)                            */
#define PCA_MOD_CFIE                      PCA_MOD_CFIE_Msk
#define PCA_MOD_CPS_Pos                   (1UL)                     /*!< CPS (Bit 1)                                           */
#define PCA_MOD_CPS_Msk                   (0xeUL)                   /*!< CPS (Bitfield-Mask: 0x07)                             */
#define PCA_MOD_CPS                      PCA_MOD_CPS_Msk
#define PCA_MOD_CIDL_Pos                  (7UL)                     /*!< CIDL (Bit 7)                                          */
#define PCA_MOD_CIDL_Msk                  (0x80UL)                  /*!< CIDL (Bitfield-Mask: 0x01)                            */
#define PCA_MOD_CIDL                      PCA_MOD_CIDL_Msk
/* ==========================================================  CNT  ========================================================== */
#define PCA_CNT_CNT_Pos                   (0UL)                     /*!< CNT (Bit 0)                                           */
#define PCA_CNT_CNT_Msk                   (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
#define PCA_CNT_CNT                      PCA_CNT_CNT_Msk
/* ========================================================  INTCLR  ========================================================= */
#define PCA_INTCLR_CCF0_Pos               (0UL)                     /*!< CCF0 (Bit 0)                                          */
#define PCA_INTCLR_CCF0_Msk               (0x1UL)                   /*!< CCF0 (Bitfield-Mask: 0x01)                            */
#define PCA_INTCLR_CCF0                      PCA_INTCLR_CCF0_Msk
#define PCA_INTCLR_CCF1_Pos               (1UL)                     /*!< CCF1 (Bit 1)                                          */
#define PCA_INTCLR_CCF1_Msk               (0x2UL)                   /*!< CCF1 (Bitfield-Mask: 0x01)                            */
#define PCA_INTCLR_CCF1                      PCA_INTCLR_CCF1_Msk
#define PCA_INTCLR_CCF2_Pos               (2UL)                     /*!< CCF2 (Bit 2)                                          */
#define PCA_INTCLR_CCF2_Msk               (0x4UL)                   /*!< CCF2 (Bitfield-Mask: 0x01)                            */
#define PCA_INTCLR_CCF2                      PCA_INTCLR_CCF2_Msk
#define PCA_INTCLR_CCF3_Pos               (3UL)                     /*!< CCF3 (Bit 3)                                          */
#define PCA_INTCLR_CCF3_Msk               (0x8UL)                   /*!< CCF3 (Bitfield-Mask: 0x01)                            */
#define PCA_INTCLR_CCF3                      PCA_INTCLR_CCF3_Msk
#define PCA_INTCLR_CCF4_Pos               (4UL)                     /*!< CCF4 (Bit 4)                                          */
#define PCA_INTCLR_CCF4_Msk               (0x10UL)                  /*!< CCF4 (Bitfield-Mask: 0x01)                            */
#define PCA_INTCLR_CCF4                      PCA_INTCLR_CCF4_Msk
#define PCA_INTCLR_CF_Pos                 (7UL)                     /*!< CF (Bit 7)                                            */
#define PCA_INTCLR_CF_Msk                 (0x80UL)                  /*!< CF (Bitfield-Mask: 0x01)                              */
#define PCA_INTCLR_CF                      PCA_INTCLR_CF_Msk
/* ========================================================  CCAPM0  ========================================================= */
#define PCA_CCAPM0_ECOM_Pos               (6UL)                     /*!< ECOM (Bit 6)                                          */
#define PCA_CCAPM0_ECOM_Msk               (0x40UL)                  /*!< ECOM (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM0_ECOM                      PCA_CCAPM0_ECOM_Msk
#define PCA_CCAPM0_CAPP_Pos               (5UL)                     /*!< CAPP (Bit 5)                                          */
#define PCA_CCAPM0_CAPP_Msk               (0x20UL)                  /*!< CAPP (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM0_CAPP                      PCA_CCAPM0_CAPP_Msk
#define PCA_CCAPM0_CAPN_Pos               (4UL)                     /*!< CAPN (Bit 4)                                          */
#define PCA_CCAPM0_CAPN_Msk               (0x10UL)                  /*!< CAPN (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM0_CAPN                      PCA_CCAPM0_CAPN_Msk
#define PCA_CCAPM0_MAT_Pos                (3UL)                     /*!< MAT (Bit 3)                                           */
#define PCA_CCAPM0_MAT_Msk                (0x8UL)                   /*!< MAT (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM0_MAT                      PCA_CCAPM0_MAT_Msk
#define PCA_CCAPM0_TOG_Pos                (2UL)                     /*!< TOG (Bit 2)                                           */
#define PCA_CCAPM0_TOG_Msk                (0x4UL)                   /*!< TOG (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM0_TOG                      PCA_CCAPM0_TOG_Msk
#define PCA_CCAPM0_PWM_Pos                (1UL)                     /*!< PWM (Bit 1)                                           */
#define PCA_CCAPM0_PWM_Msk                (0x2UL)                   /*!< PWM (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM0_PWM                      PCA_CCAPM0_PWM_Msk
#define PCA_CCAPM0_CCIE_Pos               (0UL)                     /*!< CCIE (Bit 0)                                          */
#define PCA_CCAPM0_CCIE_Msk               (0x1UL)                   /*!< CCIE (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM0_CCIE                      PCA_CCAPM0_CCIE_Msk
/* ========================================================  CCAPM1  ========================================================= */
#define PCA_CCAPM1_ECOM_Pos               (6UL)                     /*!< ECOM (Bit 6)                                          */
#define PCA_CCAPM1_ECOM_Msk               (0x40UL)                  /*!< ECOM (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM1_ECOM                      PCA_CCAPM1_ECOM_Msk
#define PCA_CCAPM1_CAPP_Pos               (5UL)                     /*!< CAPP (Bit 5)                                          */
#define PCA_CCAPM1_CAPP_Msk               (0x20UL)                  /*!< CAPP (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM1_CAPP                      PCA_CCAPM1_CAPP_Msk
#define PCA_CCAPM1_CAPN_Pos               (4UL)                     /*!< CAPN (Bit 4)                                          */
#define PCA_CCAPM1_CAPN_Msk               (0x10UL)                  /*!< CAPN (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM1_CAPN                      PCA_CCAPM1_CAPN_Msk
#define PCA_CCAPM1_MAT_Pos                (3UL)                     /*!< MAT (Bit 3)                                           */
#define PCA_CCAPM1_MAT_Msk                (0x8UL)                   /*!< MAT (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM1_MAT                      PCA_CCAPM1_MAT_Msk
#define PCA_CCAPM1_TOG_Pos                (2UL)                     /*!< TOG (Bit 2)                                           */
#define PCA_CCAPM1_TOG_Msk                (0x4UL)                   /*!< TOG (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM1_TOG                      PCA_CCAPM1_TOG_Msk
#define PCA_CCAPM1_PWM_Pos                (1UL)                     /*!< PWM (Bit 1)                                           */
#define PCA_CCAPM1_PWM_Msk                (0x2UL)                   /*!< PWM (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM1_PWM                      PCA_CCAPM1_PWM_Msk
#define PCA_CCAPM1_CCIE_Pos               (0UL)                     /*!< CCIE (Bit 0)                                          */
#define PCA_CCAPM1_CCIE_Msk               (0x1UL)                   /*!< CCIE (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM1_CCIE                      PCA_CCAPM1_CCIE_Msk
/* ========================================================  CCAPM2  ========================================================= */
#define PCA_CCAPM2_ECOM_Pos               (6UL)                     /*!< ECOM (Bit 6)                                          */
#define PCA_CCAPM2_ECOM_Msk               (0x40UL)                  /*!< ECOM (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM2_ECOM                      PCA_CCAPM2_ECOM_Msk
#define PCA_CCAPM2_CAPP_Pos               (5UL)                     /*!< CAPP (Bit 5)                                          */
#define PCA_CCAPM2_CAPP_Msk               (0x20UL)                  /*!< CAPP (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM2_CAPP                      PCA_CCAPM2_CAPP_Msk
#define PCA_CCAPM2_CAPN_Pos               (4UL)                     /*!< CAPN (Bit 4)                                          */
#define PCA_CCAPM2_CAPN_Msk               (0x10UL)                  /*!< CAPN (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM2_CAPN                      PCA_CCAPM2_CAPN_Msk
#define PCA_CCAPM2_MAT_Pos                (3UL)                     /*!< MAT (Bit 3)                                           */
#define PCA_CCAPM2_MAT_Msk                (0x8UL)                   /*!< MAT (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM2_MAT                      PCA_CCAPM2_MAT_Msk
#define PCA_CCAPM2_TOG_Pos                (2UL)                     /*!< TOG (Bit 2)                                           */
#define PCA_CCAPM2_TOG_Msk                (0x4UL)                   /*!< TOG (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM2_TOG                      PCA_CCAPM2_TOG_Msk
#define PCA_CCAPM2_PWM_Pos                (1UL)                     /*!< PWM (Bit 1)                                           */
#define PCA_CCAPM2_PWM_Msk                (0x2UL)                   /*!< PWM (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM2_PWM                      PCA_CCAPM2_PWM_Msk
#define PCA_CCAPM2_CCIE_Pos               (0UL)                     /*!< CCIE (Bit 0)                                          */
#define PCA_CCAPM2_CCIE_Msk               (0x1UL)                   /*!< CCIE (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM2_CCIE                      PCA_CCAPM2_CCIE_Msk
/* ========================================================  CCAPM3  ========================================================= */
#define PCA_CCAPM3_ECOM_Pos               (6UL)                     /*!< ECOM (Bit 6)                                          */
#define PCA_CCAPM3_ECOM_Msk               (0x40UL)                  /*!< ECOM (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM3_ECOM                      PCA_CCAPM3_ECOM_Msk
#define PCA_CCAPM3_CAPP_Pos               (5UL)                     /*!< CAPP (Bit 5)                                          */
#define PCA_CCAPM3_CAPP_Msk               (0x20UL)                  /*!< CAPP (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM3_CAPP                      PCA_CCAPM3_CAPP_Msk
#define PCA_CCAPM3_CAPN_Pos               (4UL)                     /*!< CAPN (Bit 4)                                          */
#define PCA_CCAPM3_CAPN_Msk               (0x10UL)                  /*!< CAPN (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM3_CAPN                      PCA_CCAPM3_CAPN_Msk
#define PCA_CCAPM3_MAT_Pos                (3UL)                     /*!< MAT (Bit 3)                                           */
#define PCA_CCAPM3_MAT_Msk                (0x8UL)                   /*!< MAT (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM3_MAT                      PCA_CCAPM3_MAT_Msk
#define PCA_CCAPM3_TOG_Pos                (2UL)                     /*!< TOG (Bit 2)                                           */
#define PCA_CCAPM3_TOG_Msk                (0x4UL)                   /*!< TOG (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM3_TOG                      PCA_CCAPM3_TOG_Msk
#define PCA_CCAPM3_PWM_Pos                (1UL)                     /*!< PWM (Bit 1)                                           */
#define PCA_CCAPM3_PWM_Msk                (0x2UL)                   /*!< PWM (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM3_PWM                      PCA_CCAPM3_PWM_Msk
#define PCA_CCAPM3_CCIE_Pos               (0UL)                     /*!< CCIE (Bit 0)                                          */
#define PCA_CCAPM3_CCIE_Msk               (0x1UL)                   /*!< CCIE (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM3_CCIE                      PCA_CCAPM3_CCIE_Msk
/* ========================================================  CCAPM4  ========================================================= */
#define PCA_CCAPM4_ECOM_Pos               (6UL)                     /*!< ECOM (Bit 6)                                          */
#define PCA_CCAPM4_ECOM_Msk               (0x40UL)                  /*!< ECOM (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM4_ECOM                      PCA_CCAPM4_ECOM_Msk
#define PCA_CCAPM4_CAPP_Pos               (5UL)                     /*!< CAPP (Bit 5)                                          */
#define PCA_CCAPM4_CAPP_Msk               (0x20UL)                  /*!< CAPP (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM4_CAPP                      PCA_CCAPM4_CAPP_Msk
#define PCA_CCAPM4_CAPN_Pos               (4UL)                     /*!< CAPN (Bit 4)                                          */
#define PCA_CCAPM4_CAPN_Msk               (0x10UL)                  /*!< CAPN (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM4_CAPN                      PCA_CCAPM4_CAPN_Msk
#define PCA_CCAPM4_MAT_Pos                (3UL)                     /*!< MAT (Bit 3)                                           */
#define PCA_CCAPM4_MAT_Msk                (0x8UL)                   /*!< MAT (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM4_MAT                      PCA_CCAPM4_MAT_Msk
#define PCA_CCAPM4_TOG_Pos                (2UL)                     /*!< TOG (Bit 2)                                           */
#define PCA_CCAPM4_TOG_Msk                (0x4UL)                   /*!< TOG (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM4_TOG                      PCA_CCAPM4_TOG_Msk
#define PCA_CCAPM4_PWM_Pos                (1UL)                     /*!< PWM (Bit 1)                                           */
#define PCA_CCAPM4_PWM_Msk                (0x2UL)                   /*!< PWM (Bitfield-Mask: 0x01)                             */
#define PCA_CCAPM4_PWM                      PCA_CCAPM4_PWM_Msk
#define PCA_CCAPM4_CCIE_Pos               (0UL)                     /*!< CCIE (Bit 0)                                          */
#define PCA_CCAPM4_CCIE_Msk               (0x1UL)                   /*!< CCIE (Bitfield-Mask: 0x01)                            */
#define PCA_CCAPM4_CCIE                      PCA_CCAPM4_CCIE_Msk
/* ========================================================  CCAP0L  ========================================================= */
#define PCA_CCAP0L_CCAP0_Pos              (0UL)                     /*!< CCAP0 (Bit 0)                                         */
#define PCA_CCAP0L_CCAP0_Msk              (0xffUL)                  /*!< CCAP0 (Bitfield-Mask: 0xff)                           */
#define PCA_CCAP0L_CCAP0                      PCA_CCAP0L_CCAP0_Msk
/* ========================================================  CCAP0H  ========================================================= */
#define PCA_CCAP0H_CCAP0_Pos              (0UL)                     /*!< CCAP0 (Bit 0)                                         */
#define PCA_CCAP0H_CCAP0_Msk              (0xffUL)                  /*!< CCAP0 (Bitfield-Mask: 0xff)                           */
#define PCA_CCAP0H_CCAP0                      PCA_CCAP0H_CCAP0_Msk
/* ========================================================  CCAP1L  ========================================================= */
#define PCA_CCAP1L_CCAP1_Pos              (0UL)                     /*!< CCAP1 (Bit 0)                                         */
#define PCA_CCAP1L_CCAP1_Msk              (0xffUL)                  /*!< CCAP1 (Bitfield-Mask: 0xff)                           */
#define PCA_CCAP1L_CCAP1                      PCA_CCAP1L_CCAP1_Msk
/* ========================================================  CCAP1H  ========================================================= */
#define PCA_CCAP1H_CCAP1_Pos              (0UL)                     /*!< CCAP1 (Bit 0)                                         */
#define PCA_CCAP1H_CCAP1_Msk              (0xffUL)                  /*!< CCAP1 (Bitfield-Mask: 0xff)                           */
#define PCA_CCAP1H_CCAP1                      PCA_CCAP1H_CCAP1_Msk
/* ========================================================  CCAP2L  ========================================================= */
#define PCA_CCAP2L_CCAP2_Pos              (0UL)                     /*!< CCAP2 (Bit 0)                                         */
#define PCA_CCAP2L_CCAP2_Msk              (0xffUL)                  /*!< CCAP2 (Bitfield-Mask: 0xff)                           */
#define PCA_CCAP2L_CCAP2                      PCA_CCAP2L_CCAP2_Msk
/* ========================================================  CCAP2H  ========================================================= */
#define PCA_CCAP2H_CCAP2_Pos              (0UL)                     /*!< CCAP2 (Bit 0)                                         */
#define PCA_CCAP2H_CCAP2_Msk              (0xffUL)                  /*!< CCAP2 (Bitfield-Mask: 0xff)                           */
#define PCA_CCAP2H_CCAP2                      PCA_CCAP2H_CCAP2_Msk
/* ========================================================  CCAP3L  ========================================================= */
#define PCA_CCAP3L_CCAP3_Pos              (0UL)                     /*!< CCAP3 (Bit 0)                                         */
#define PCA_CCAP3L_CCAP3_Msk              (0xffUL)                  /*!< CCAP3 (Bitfield-Mask: 0xff)                           */
#define PCA_CCAP3L_CCAP3                      PCA_CCAP3L_CCAP3_Msk
/* ========================================================  CCAP3H  ========================================================= */
#define PCA_CCAP3H_CCAP3_Pos              (0UL)                     /*!< CCAP3 (Bit 0)                                         */
#define PCA_CCAP3H_CCAP3_Msk              (0xffUL)                  /*!< CCAP3 (Bitfield-Mask: 0xff)                           */
#define PCA_CCAP3H_CCAP3                      PCA_CCAP3H_CCAP3_Msk
/* ========================================================  CCAP4L  ========================================================= */
#define PCA_CCAP4L_CCAP4_Pos              (0UL)                     /*!< CCAP4 (Bit 0)                                         */
#define PCA_CCAP4L_CCAP4_Msk              (0xffUL)                  /*!< CCAP4 (Bitfield-Mask: 0xff)                           */
#define PCA_CCAP4L_CCAP4                      PCA_CCAP4L_CCAP4_Msk
/* ========================================================  CCAP4H  ========================================================= */
#define PCA_CCAP4H_CCAP4_Pos              (0UL)                     /*!< CCAP4 (Bit 0)                                         */
#define PCA_CCAP4H_CCAP4_Msk              (0xffUL)                  /*!< CCAP4 (Bitfield-Mask: 0xff)                           */
#define PCA_CCAP4H_CCAP4                      PCA_CCAP4H_CCAP4_Msk
/* =========================================================  CCAPO  ========================================================= */
#define PCA_CCAPO_CCAPO4_Pos              (4UL)                     /*!< CCAPO4 (Bit 4)                                        */
#define PCA_CCAPO_CCAPO4_Msk              (0x10UL)                  /*!< CCAPO4 (Bitfield-Mask: 0x01)                          */
#define PCA_CCAPO_CCAPO4                      PCA_CCAPO_CCAPO4_Msk
#define PCA_CCAPO_CCAPO3_Pos              (3UL)                     /*!< CCAPO3 (Bit 3)                                        */
#define PCA_CCAPO_CCAPO3_Msk              (0x8UL)                   /*!< CCAPO3 (Bitfield-Mask: 0x01)                          */
#define PCA_CCAPO_CCAPO3                      PCA_CCAPO_CCAPO3_Msk
#define PCA_CCAPO_CCAPO2_Pos              (2UL)                     /*!< CCAPO2 (Bit 2)                                        */
#define PCA_CCAPO_CCAPO2_Msk              (0x4UL)                   /*!< CCAPO2 (Bitfield-Mask: 0x01)                          */
#define PCA_CCAPO_CCAPO2                      PCA_CCAPO_CCAPO2_Msk
#define PCA_CCAPO_CCAPO1_Pos              (1UL)                     /*!< CCAPO1 (Bit 1)                                        */
#define PCA_CCAPO_CCAPO1_Msk              (0x2UL)                   /*!< CCAPO1 (Bitfield-Mask: 0x01)                          */
#define PCA_CCAPO_CCAPO1                      PCA_CCAPO_CCAPO1_Msk
#define PCA_CCAPO_CCAPO0_Pos              (0UL)                     /*!< CCAPO0 (Bit 0)                                        */
#define PCA_CCAPO_CCAPO0_Msk              (0x1UL)                   /*!< CCAPO0 (Bitfield-Mask: 0x01)                          */
#define PCA_CCAPO_CCAPO0                      PCA_CCAPO_CCAPO0_Msk
/* =========================================================  POCR  ========================================================== */
#define PCA_POCR_POINV4_Pos               (12UL)                    /*!< POINV4 (Bit 12)                                       */
#define PCA_POCR_POINV4_Msk               (0x1000UL)                /*!< POINV4 (Bitfield-Mask: 0x01)                          */
#define PCA_POCR_POINV4                      PCA_POCR_POINV4_Msk
#define PCA_POCR_POINV3_Pos               (11UL)                    /*!< POINV3 (Bit 11)                                       */
#define PCA_POCR_POINV3_Msk               (0x800UL)                 /*!< POINV3 (Bitfield-Mask: 0x01)                          */
#define PCA_POCR_POINV3                      PCA_POCR_POINV3_Msk
#define PCA_POCR_POINV2_Pos               (10UL)                    /*!< POINV2 (Bit 10)                                       */
#define PCA_POCR_POINV2_Msk               (0x400UL)                 /*!< POINV2 (Bitfield-Mask: 0x01)                          */
#define PCA_POCR_POINV2                      PCA_POCR_POINV2_Msk
#define PCA_POCR_POINV1_Pos               (9UL)                     /*!< POINV1 (Bit 9)                                        */
#define PCA_POCR_POINV1_Msk               (0x200UL)                 /*!< POINV1 (Bitfield-Mask: 0x01)                          */
#define PCA_POCR_POINV1                      PCA_POCR_POINV1_Msk
#define PCA_POCR_POINV0_Pos               (8UL)                     /*!< POINV0 (Bit 8)                                        */
#define PCA_POCR_POINV0_Msk               (0x100UL)                 /*!< POINV0 (Bitfield-Mask: 0x01)                          */
#define PCA_POCR_POINV0                      PCA_POCR_POINV0_Msk
#define PCA_POCR_POE4_Pos                 (4UL)                     /*!< POE4 (Bit 4)                                          */
#define PCA_POCR_POE4_Msk                 (0x10UL)                  /*!< POE4 (Bitfield-Mask: 0x01)                            */
#define PCA_POCR_POE4                      PCA_POCR_POE4_Msk
#define PCA_POCR_POE3_Pos                 (3UL)                     /*!< POE3 (Bit 3)                                          */
#define PCA_POCR_POE3_Msk                 (0x8UL)                   /*!< POE3 (Bitfield-Mask: 0x01)                            */
#define PCA_POCR_POE3                      PCA_POCR_POE3_Msk
#define PCA_POCR_POE2_Pos                 (2UL)                     /*!< POE2 (Bit 2)                                          */
#define PCA_POCR_POE2_Msk                 (0x4UL)                   /*!< POE2 (Bitfield-Mask: 0x01)                            */
#define PCA_POCR_POE2                      PCA_POCR_POE2_Msk
#define PCA_POCR_POE1_Pos                 (1UL)                     /*!< POE1 (Bit 1)                                          */
#define PCA_POCR_POE1_Msk                 (0x2UL)                   /*!< POE1 (Bitfield-Mask: 0x01)                            */
#define PCA_POCR_POE1                      PCA_POCR_POE1_Msk
#define PCA_POCR_POE0_Pos                 (0UL)                     /*!< POE0 (Bit 0)                                          */
#define PCA_POCR_POE0_Msk                 (0x1UL)                   /*!< POE0 (Bitfield-Mask: 0x01)                            */
#define PCA_POCR_POE0                      PCA_POCR_POE0_Msk
/* =========================================================  CCAP0  ========================================================= */
#define PCA_CCAP0_CCAP0_Pos               (0UL)                     /*!< CCAP0 (Bit 0)                                         */
#define PCA_CCAP0_CCAP0_Msk               (0xffffUL)                /*!< CCAP0 (Bitfield-Mask: 0xffff)                         */
#define PCA_CCAP0_CCAP0                      PCA_CCAP0_CCAP0_Msk
/* =========================================================  CCAP1  ========================================================= */
#define PCA_CCAP1_CCAP1_Pos               (0UL)                     /*!< CCAP1 (Bit 0)                                         */
#define PCA_CCAP1_CCAP1_Msk               (0xffffUL)                /*!< CCAP1 (Bitfield-Mask: 0xffff)                         */
#define PCA_CCAP1_CCAP1                      PCA_CCAP1_CCAP1_Msk
/* =========================================================  CCAP2  ========================================================= */
#define PCA_CCAP2_CCAP2_Pos               (0UL)                     /*!< CCAP2 (Bit 0)                                         */
#define PCA_CCAP2_CCAP2_Msk               (0xffffUL)                /*!< CCAP2 (Bitfield-Mask: 0xffff)                         */
#define PCA_CCAP2_CCAP2                      PCA_CCAP2_CCAP2_Msk
/* =========================================================  CCAP3  ========================================================= */
#define PCA_CCAP3_CCAP3_Pos               (0UL)                     /*!< CCAP3 (Bit 0)                                         */
#define PCA_CCAP3_CCAP3_Msk               (0xffffUL)                /*!< CCAP3 (Bitfield-Mask: 0xffff)                         */
#define PCA_CCAP3_CCAP3                      PCA_CCAP3_CCAP3_Msk
/* =========================================================  CCAP4  ========================================================= */
#define PCA_CCAP4_CCAP4_Pos               (0UL)                     /*!< CCAP4 (Bit 0)                                         */
#define PCA_CCAP4_CCAP4_Msk               (0xffffUL)                /*!< CCAP4 (Bitfield-Mask: 0xffff)                         */
#define PCA_CCAP4_CCAP4                      PCA_CCAP4_CCAP4_Msk


/* =========================================================================================================================== */
/* ================                                            TIM                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR1  ========================================================== */
#define TIM_CR1_CEN_Pos                   (0UL)                     /*!< CEN (Bit 0)                                           */
#define TIM_CR1_CEN_Msk                   (0x1UL)                   /*!< CEN (Bitfield-Mask: 0x01)                             */
#define TIM_CR1_CEN                      TIM_CR1_CEN_Msk
#define TIM_CR1_UDIS_Pos                  (1UL)                     /*!< UDIS (Bit 1)                                          */
#define TIM_CR1_UDIS_Msk                  (0x2UL)                   /*!< UDIS (Bitfield-Mask: 0x01)                            */
#define TIM_CR1_UDIS                      TIM_CR1_UDIS_Msk
#define TIM_CR1_URS_Pos                   (2UL)                     /*!< URS (Bit 2)                                           */
#define TIM_CR1_URS_Msk                   (0x4UL)                   /*!< URS (Bitfield-Mask: 0x01)                             */
#define TIM_CR1_URS                      TIM_CR1_URS_Msk
#define TIM_CR1_OPM_Pos                   (3UL)                     /*!< OPM (Bit 3)                                           */
#define TIM_CR1_OPM_Msk                   (0x8UL)                   /*!< OPM (Bitfield-Mask: 0x01)                             */
#define TIM_CR1_OPM                      TIM_CR1_OPM_Msk
#define TIM_CR1_DIR_Pos                   (4UL)                     /*!< DIR (Bit 4)                                           */
#define TIM_CR1_DIR_Msk                   (0x10UL)                  /*!< DIR (Bitfield-Mask: 0x01)                             */
#define TIM_CR1_DIR                      TIM_CR1_DIR_Msk
#define TIM_CR1_CMS_Pos                   (5UL)                     /*!< CMS (Bit 5)                                           */
#define TIM_CR1_CMS_Msk                   (0x60UL)                  /*!< CMS (Bitfield-Mask: 0x03)                             */
#define TIM_CR1_CMS                      TIM_CR1_CMS_Msk
#define TIM_CR1_ARPE_Pos                  (7UL)                     /*!< ARPE (Bit 7)                                          */
#define TIM_CR1_ARPE_Msk                  (0x80UL)                  /*!< ARPE (Bitfield-Mask: 0x01)                            */
#define TIM_CR1_ARPE                      TIM_CR1_ARPE_Msk
#define TIM_CR1_CKD_Pos                   (8UL)                     /*!< CKD (Bit 8)                                           */
#define TIM_CR1_CKD_Msk                   (0x300UL)                 /*!< CKD (Bitfield-Mask: 0x03)                             */
#define TIM_CR1_CKD                      TIM_CR1_CKD_Msk
/* ==========================================================  CR2  ========================================================== */
#define TIM_CR2_CCPC_Pos                  (0UL)                     /*!< CCPC (Bit 0)                                          */
#define TIM_CR2_CCPC_Msk                  (0x1UL)                   /*!< CCPC (Bitfield-Mask: 0x01)                            */
#define TIM_CR2_CCPC                      TIM_CR2_CCPC_Msk
#define TIM_CR2_CCUS_Pos                  (2UL)                     /*!< CCUS (Bit 2)                                          */
#define TIM_CR2_CCUS_Msk                  (0x4UL)                   /*!< CCUS (Bitfield-Mask: 0x01)                            */
#define TIM_CR2_CCUS                      TIM_CR2_CCUS_Msk
#define TIM_CR2_MMS_Pos                   (4UL)                     /*!< MMS (Bit 4)                                           */
#define TIM_CR2_MMS_Msk                   (0x70UL)                  /*!< MMS (Bitfield-Mask: 0x07)                             */
#define TIM_CR2_MMS                      TIM_CR2_MMS_Msk
#define TIM_CR2_TI1S_Pos                  (7UL)                     /*!< TI1S (Bit 7)                                          */
#define TIM_CR2_TI1S_Msk                  (0x80UL)                  /*!< TI1S (Bitfield-Mask: 0x01)                            */
#define TIM_CR2_TI1S                      TIM_CR2_TI1S_Msk
#define TIM_CR2_OIS1_Pos                  (8UL)                     /*!< OIS1 (Bit 8)                                          */
#define TIM_CR2_OIS1_Msk                  (0x100UL)                 /*!< OIS1 (Bitfield-Mask: 0x01)                            */
#define TIM_CR2_OIS1                      TIM_CR2_OIS1_Msk
#define TIM_CR2_OIS1N_Pos                 (9UL)                     /*!< OIS1N (Bit 9)                                         */
#define TIM_CR2_OIS1N_Msk                 (0x200UL)                 /*!< OIS1N (Bitfield-Mask: 0x01)                           */
#define TIM_CR2_OIS1N                      TIM_CR2_OIS1N_Msk
#define TIM_CR2_OIS2_Pos                  (10UL)                    /*!< OIS2 (Bit 10)                                         */
#define TIM_CR2_OIS2_Msk                  (0x400UL)                 /*!< OIS2 (Bitfield-Mask: 0x01)                            */
#define TIM_CR2_OIS2                      TIM_CR2_OIS2_Msk
#define TIM_CR2_OIS2N_Pos                 (11UL)                    /*!< OIS2N (Bit 11)                                        */
#define TIM_CR2_OIS2N_Msk                 (0x800UL)                 /*!< OIS2N (Bitfield-Mask: 0x01)                           */
#define TIM_CR2_OIS2N                      TIM_CR2_OIS2N_Msk
#define TIM_CR2_OIS3_Pos                  (12UL)                    /*!< OIS3 (Bit 12)                                         */
#define TIM_CR2_OIS3_Msk                  (0x1000UL)                /*!< OIS3 (Bitfield-Mask: 0x01)                            */
#define TIM_CR2_OIS3                      TIM_CR2_OIS3_Msk
#define TIM_CR2_OIS3N_Pos                 (13UL)                    /*!< OIS3N (Bit 13)                                        */
#define TIM_CR2_OIS3N_Msk                 (0x2000UL)                /*!< OIS3N (Bitfield-Mask: 0x01)                           */
#define TIM_CR2_OIS3N                      TIM_CR2_OIS3N_Msk
#define TIM_CR2_OIS4_Pos                  (14UL)                    /*!< OIS4 (Bit 14)                                         */
#define TIM_CR2_OIS4_Msk                  (0x4000UL)                /*!< OIS4 (Bitfield-Mask: 0x01)                            */
#define TIM_CR2_OIS4                      TIM_CR2_OIS4_Msk
/* =========================================================  SMCR  ========================================================== */
#define TIM_SMCR_SMS_Pos                  (0UL)                     /*!< SMS (Bit 0)                                           */
#define TIM_SMCR_SMS_Msk                  (0x7UL)                   /*!< SMS (Bitfield-Mask: 0x07)                             */
#define TIM_SMCR_SMS                      TIM_SMCR_SMS_Msk
#define TIM_SMCR_TS_Pos                   (4UL)                     /*!< TS (Bit 4)                                            */
#define TIM_SMCR_TS_Msk                   (0x70UL)                  /*!< TS (Bitfield-Mask: 0x07)                              */
#define TIM_SMCR_TS                      TIM_SMCR_TS_Msk
#define TIM_SMCR_MSM_Pos                  (7UL)                     /*!< MSM (Bit 7)                                           */
#define TIM_SMCR_MSM_Msk                  (0x80UL)                  /*!< MSM (Bitfield-Mask: 0x01)                             */
#define TIM_SMCR_MSM                      TIM_SMCR_MSM_Msk
#define TIM_SMCR_ETF_Pos                  (8UL)                     /*!< ETF (Bit 8)                                           */
#define TIM_SMCR_ETF_Msk                  (0xf00UL)                 /*!< ETF (Bitfield-Mask: 0x0f)                             */
#define TIM_SMCR_ETF                      TIM_SMCR_ETF_Msk
#define TIM_SMCR_ETPS_Pos                 (12UL)                    /*!< ETPS (Bit 12)                                         */
#define TIM_SMCR_ETPS_Msk                 (0x3000UL)                /*!< ETPS (Bitfield-Mask: 0x03)                            */
#define TIM_SMCR_ETPS                      TIM_SMCR_ETPS_Msk
#define TIM_SMCR_ECE_Pos                  (14UL)                    /*!< ECE (Bit 14)                                          */
#define TIM_SMCR_ECE_Msk                  (0x4000UL)                /*!< ECE (Bitfield-Mask: 0x01)                             */
#define TIM_SMCR_ECE                      TIM_SMCR_ECE_Msk
#define TIM_SMCR_ETP_Pos                  (15UL)                    /*!< ETP (Bit 15)                                          */
#define TIM_SMCR_ETP_Msk                  (0x8000UL)                /*!< ETP (Bitfield-Mask: 0x01)                             */
#define TIM_SMCR_ETP                      TIM_SMCR_ETP_Msk
/* =========================================================  DIER  ========================================================== */
#define TIM_DIER_UIE_Pos                  (0UL)                     /*!< UIE (Bit 0)                                           */
#define TIM_DIER_UIE_Msk                  (0x1UL)                   /*!< UIE (Bitfield-Mask: 0x01)                             */
#define TIM_DIER_UIE                      TIM_DIER_UIE_Msk
#define TIM_DIER_CC1IE_Pos                (1UL)                     /*!< CC1IE (Bit 1)                                         */
#define TIM_DIER_CC1IE_Msk                (0x2UL)                   /*!< CC1IE (Bitfield-Mask: 0x01)                           */
#define TIM_DIER_CC1IE                      TIM_DIER_CC1IE_Msk
#define TIM_DIER_CC2IE_Pos                (2UL)                     /*!< CC2IE (Bit 2)                                         */
#define TIM_DIER_CC2IE_Msk                (0x4UL)                   /*!< CC2IE (Bitfield-Mask: 0x01)                           */
#define TIM_DIER_CC2IE                      TIM_DIER_CC2IE_Msk
#define TIM_DIER_CC3IE_Pos                (3UL)                     /*!< CC3IE (Bit 3)                                         */
#define TIM_DIER_CC3IE_Msk                (0x8UL)                   /*!< CC3IE (Bitfield-Mask: 0x01)                           */
#define TIM_DIER_CC3IE                      TIM_DIER_CC3IE_Msk
#define TIM_DIER_CC4IE_Pos                (4UL)                     /*!< CC4IE (Bit 4)                                         */
#define TIM_DIER_CC4IE_Msk                (0x10UL)                  /*!< CC4IE (Bitfield-Mask: 0x01)                           */
#define TIM_DIER_CC4IE                      TIM_DIER_CC4IE_Msk
#define TIM_DIER_COMIE_Pos                (5UL)                     /*!< COMIE (Bit 5)                                         */
#define TIM_DIER_COMIE_Msk                (0x20UL)                  /*!< COMIE (Bitfield-Mask: 0x01)                           */
#define TIM_DIER_COMIE                      TIM_DIER_COMIE_Msk
#define TIM_DIER_TIE_Pos                  (6UL)                     /*!< TIE (Bit 6)                                           */
#define TIM_DIER_TIE_Msk                  (0x40UL)                  /*!< TIE (Bitfield-Mask: 0x01)                             */
#define TIM_DIER_TIE                      TIM_DIER_TIE_Msk
#define TIM_DIER_BIE_Pos                  (7UL)                     /*!< BIE (Bit 7)                                           */
#define TIM_DIER_BIE_Msk                  (0x80UL)                  /*!< BIE (Bitfield-Mask: 0x01)                             */
#define TIM_DIER_BIE                      TIM_DIER_BIE_Msk
/* ==========================================================  SR  =========================================================== */
#define TIM_SR_CC4OF_Pos                  (12UL)                    /*!< CC4OF (Bit 12)                                        */
#define TIM_SR_CC4OF_Msk                  (0x1000UL)                /*!< CC4OF (Bitfield-Mask: 0x01)                           */
#define TIM_SR_CC4OF                      TIM_SR_CC4OF_Msk
#define TIM_SR_CC3OF_Pos                  (11UL)                    /*!< CC3OF (Bit 11)                                        */
#define TIM_SR_CC3OF_Msk                  (0x800UL)                 /*!< CC3OF (Bitfield-Mask: 0x01)                           */
#define TIM_SR_CC3OF                      TIM_SR_CC3OF_Msk
#define TIM_SR_CC2OF_Pos                  (10UL)                    /*!< CC2OF (Bit 10)                                        */
#define TIM_SR_CC2OF_Msk                  (0x400UL)                 /*!< CC2OF (Bitfield-Mask: 0x01)                           */
#define TIM_SR_CC2OF                      TIM_SR_CC2OF_Msk
#define TIM_SR_CC1OF_Pos                  (9UL)                     /*!< CC1OF (Bit 9)                                         */
#define TIM_SR_CC1OF_Msk                  (0x200UL)                 /*!< CC1OF (Bitfield-Mask: 0x01)                           */
#define TIM_SR_CC1OF                      TIM_SR_CC1OF_Msk
#define TIM_SR_BIF_Pos                    (7UL)                     /*!< BIF (Bit 7)                                           */
#define TIM_SR_BIF_Msk                    (0x80UL)                  /*!< BIF (Bitfield-Mask: 0x01)                             */
#define TIM_SR_BIF                      TIM_SR_BIF_Msk
#define TIM_SR_TIF_Pos                    (6UL)                     /*!< TIF (Bit 6)                                           */
#define TIM_SR_TIF_Msk                    (0x40UL)                  /*!< TIF (Bitfield-Mask: 0x01)                             */
#define TIM_SR_TIF                      TIM_SR_TIF_Msk
#define TIM_SR_COMIF_Pos                  (5UL)                     /*!< COMIF (Bit 5)                                         */
#define TIM_SR_COMIF_Msk                  (0x20UL)                  /*!< COMIF (Bitfield-Mask: 0x01)                           */
#define TIM_SR_COMIF                      TIM_SR_COMIF_Msk
#define TIM_SR_CC4IF_Pos                  (4UL)                     /*!< CC4IF (Bit 4)                                         */
#define TIM_SR_CC4IF_Msk                  (0x10UL)                  /*!< CC4IF (Bitfield-Mask: 0x01)                           */
#define TIM_SR_CC4IF                      TIM_SR_CC4IF_Msk
#define TIM_SR_CC3IF_Pos                  (3UL)                     /*!< CC3IF (Bit 3)                                         */
#define TIM_SR_CC3IF_Msk                  (0x8UL)                   /*!< CC3IF (Bitfield-Mask: 0x01)                           */
#define TIM_SR_CC3IF                      TIM_SR_CC3IF_Msk
#define TIM_SR_CC2IF_Pos                  (2UL)                     /*!< CC2IF (Bit 2)                                         */
#define TIM_SR_CC2IF_Msk                  (0x4UL)                   /*!< CC2IF (Bitfield-Mask: 0x01)                           */
#define TIM_SR_CC2IF                      TIM_SR_CC2IF_Msk
#define TIM_SR_CC1IF_Pos                  (1UL)                     /*!< CC1IF (Bit 1)                                         */
#define TIM_SR_CC1IF_Msk                  (0x2UL)                   /*!< CC1IF (Bitfield-Mask: 0x01)                           */
#define TIM_SR_CC1IF                      TIM_SR_CC1IF_Msk
#define TIM_SR_UIF_Pos                    (0UL)                     /*!< UIF (Bit 0)                                           */
#define TIM_SR_UIF_Msk                    (0x1UL)                   /*!< UIF (Bitfield-Mask: 0x01)                             */
#define TIM_SR_UIF                      TIM_SR_UIF_Msk
/* ==========================================================  EGR  ========================================================== */
#define TIM_EGR_BG_Pos                    (7UL)                     /*!< BG (Bit 7)                                            */
#define TIM_EGR_BG_Msk                    (0x80UL)                  /*!< BG (Bitfield-Mask: 0x01)                              */
#define TIM_EGR_BG                      TIM_EGR_BG_Msk
#define TIM_EGR_TG_Pos                    (6UL)                     /*!< TG (Bit 6)                                            */
#define TIM_EGR_TG_Msk                    (0x40UL)                  /*!< TG (Bitfield-Mask: 0x01)                              */
#define TIM_EGR_TG                      TIM_EGR_TG_Msk
#define TIM_EGR_COMG_Pos                  (5UL)                     /*!< COMG (Bit 5)                                          */
#define TIM_EGR_COMG_Msk                  (0x20UL)                  /*!< COMG (Bitfield-Mask: 0x01)                            */
#define TIM_EGR_COMG                      TIM_EGR_COMG_Msk
#define TIM_EGR_CC4G_Pos                  (4UL)                     /*!< CC4G (Bit 4)                                          */
#define TIM_EGR_CC4G_Msk                  (0x10UL)                  /*!< CC4G (Bitfield-Mask: 0x01)                            */
#define TIM_EGR_CC4G                      TIM_EGR_CC4G_Msk
#define TIM_EGR_CC3G_Pos                  (3UL)                     /*!< CC3G (Bit 3)                                          */
#define TIM_EGR_CC3G_Msk                  (0x8UL)                   /*!< CC3G (Bitfield-Mask: 0x01)                            */
#define TIM_EGR_CC3G                      TIM_EGR_CC3G_Msk
#define TIM_EGR_CC2G_Pos                  (2UL)                     /*!< CC2G (Bit 2)                                          */
#define TIM_EGR_CC2G_Msk                  (0x4UL)                   /*!< CC2G (Bitfield-Mask: 0x01)                            */
#define TIM_EGR_CC2G                      TIM_EGR_CC2G_Msk
#define TIM_EGR_CC1G_Pos                  (1UL)                     /*!< CC1G (Bit 1)                                          */
#define TIM_EGR_CC1G_Msk                  (0x2UL)                   /*!< CC1G (Bitfield-Mask: 0x01)                            */
#define TIM_EGR_CC1G                      TIM_EGR_CC1G_Msk
#define TIM_EGR_UG_Pos                    (0UL)                     /*!< UG (Bit 0)                                            */
#define TIM_EGR_UG_Msk                    (0x1UL)                   /*!< UG (Bitfield-Mask: 0x01)                              */
#define TIM_EGR_UG                      TIM_EGR_UG_Msk
/* =======================================================  CCMR1_OUT  ======================================================= */
#define TIM_CCMR1_OUT_OC2CE_Pos           (15UL)                    /*!< OC2CE (Bit 15)                                        */
#define TIM_CCMR1_OUT_OC2CE_Msk           (0x8000UL)                /*!< OC2CE (Bitfield-Mask: 0x01)                           */
#define TIM_CCMR1_OUT_OC2CE                      TIM_CCMR1_OUT_OC2CE_Msk
#define TIM_CCMR1_OUT_OC2M_Pos            (12UL)                    /*!< OC2M (Bit 12)                                         */
#define TIM_CCMR1_OUT_OC2M_Msk            (0x7000UL)                /*!< OC2M (Bitfield-Mask: 0x07)                            */
#define TIM_CCMR1_OUT_OC2M                      TIM_CCMR1_OUT_OC2M_Msk
#define TIM_CCMR1_OUT_OC2PE_Pos           (11UL)                    /*!< OC2PE (Bit 11)                                        */
#define TIM_CCMR1_OUT_OC2PE_Msk           (0x800UL)                 /*!< OC2PE (Bitfield-Mask: 0x01)                           */
#define TIM_CCMR1_OUT_OC2PE                      TIM_CCMR1_OUT_OC2PE_Msk
#define TIM_CCMR1_OUT_OC2FE_Pos           (10UL)                    /*!< OC2FE (Bit 10)                                        */
#define TIM_CCMR1_OUT_OC2FE_Msk           (0x400UL)                 /*!< OC2FE (Bitfield-Mask: 0x01)                           */
#define TIM_CCMR1_OUT_OC2FE                      TIM_CCMR1_OUT_OC2FE_Msk
#define TIM_CCMR1_OUT_CC2S_Pos            (8UL)                     /*!< CC2S (Bit 8)                                          */
#define TIM_CCMR1_OUT_CC2S_Msk            (0x300UL)                 /*!< CC2S (Bitfield-Mask: 0x03)                            */
#define TIM_CCMR1_OUT_CC2S                      TIM_CCMR1_OUT_CC2S_Msk
#define TIM_CCMR1_OUT_OC1CE_Pos           (7UL)                     /*!< OC1CE (Bit 7)                                         */
#define TIM_CCMR1_OUT_OC1CE_Msk           (0x80UL)                  /*!< OC1CE (Bitfield-Mask: 0x01)                           */
#define TIM_CCMR1_OUT_OC1CE                      TIM_CCMR1_OUT_OC1CE_Msk
#define TIM_CCMR1_OUT_OC1M_Pos            (4UL)                     /*!< OC1M (Bit 4)                                          */
#define TIM_CCMR1_OUT_OC1M_Msk            (0x70UL)                  /*!< OC1M (Bitfield-Mask: 0x07)                            */
#define TIM_CCMR1_OUT_OC1M                      TIM_CCMR1_OUT_OC1M_Msk
#define TIM_CCMR1_OUT_OC1PE_Pos           (3UL)                     /*!< OC1PE (Bit 3)                                         */
#define TIM_CCMR1_OUT_OC1PE_Msk           (0x8UL)                   /*!< OC1PE (Bitfield-Mask: 0x01)                           */
#define TIM_CCMR1_OUT_OC1PE                      TIM_CCMR1_OUT_OC1PE_Msk
#define TIM_CCMR1_OUT_OC1FE_Pos           (2UL)                     /*!< OC1FE (Bit 2)                                         */
#define TIM_CCMR1_OUT_OC1FE_Msk           (0x4UL)                   /*!< OC1FE (Bitfield-Mask: 0x01)                           */
#define TIM_CCMR1_OUT_OC1FE                      TIM_CCMR1_OUT_OC1FE_Msk
#define TIM_CCMR1_OUT_CC1S_Pos            (0UL)                     /*!< CC1S (Bit 0)                                          */
#define TIM_CCMR1_OUT_CC1S_Msk            (0x3UL)                   /*!< CC1S (Bitfield-Mask: 0x03)                            */
#define TIM_CCMR1_OUT_CC1S                      TIM_CCMR1_OUT_CC1S_Msk
/* =======================================================  CCMR1_IN  ======================================================== */
#define TIM_CCMR1_IN_IC2F_Pos             (12UL)                    /*!< IC2F (Bit 12)                                         */
#define TIM_CCMR1_IN_IC2F_Msk             (0xf000UL)                /*!< IC2F (Bitfield-Mask: 0x0f)                            */
#define TIM_CCMR1_IN_IC2F                      TIM_CCMR1_IN_IC2F_Msk
#define TIM_CCMR1_IN_IC2PSC_Pos           (10UL)                    /*!< IC2PSC (Bit 10)                                       */
#define TIM_CCMR1_IN_IC2PSC_Msk           (0xc00UL)                 /*!< IC2PSC (Bitfield-Mask: 0x03)                          */
#define TIM_CCMR1_IN_IC2PSC                      TIM_CCMR1_IN_IC2PSC_Msk
#define TIM_CCMR1_IN_CC2S_Pos             (8UL)                     /*!< CC2S (Bit 8)                                          */
#define TIM_CCMR1_IN_CC2S_Msk             (0x300UL)                 /*!< CC2S (Bitfield-Mask: 0x03)                            */
#define TIM_CCMR1_IN_CC2S                      TIM_CCMR1_IN_CC2S_Msk
#define TIM_CCMR1_IN_IC1F_Pos             (4UL)                     /*!< IC1F (Bit 4)                                          */
#define TIM_CCMR1_IN_IC1F_Msk             (0xf0UL)                  /*!< IC1F (Bitfield-Mask: 0x0f)                            */
#define TIM_CCMR1_IN_IC1F                      TIM_CCMR1_IN_IC1F_Msk
#define TIM_CCMR1_IN_IC1PSC_Pos           (2UL)                     /*!< IC1PSC (Bit 2)                                        */
#define TIM_CCMR1_IN_IC1PSC_Msk           (0xcUL)                   /*!< IC1PSC (Bitfield-Mask: 0x03)                          */
#define TIM_CCMR1_IN_IC1PSC                      TIM_CCMR1_IN_IC1PSC_Msk
#define TIM_CCMR1_IN_CC1S_Pos             (0UL)                     /*!< CC1S (Bit 0)                                          */
#define TIM_CCMR1_IN_CC1S_Msk             (0x3UL)                   /*!< CC1S (Bitfield-Mask: 0x03)                            */
#define TIM_CCMR1_IN_CC1S                      TIM_CCMR1_IN_CC1S_Msk
/* =======================================================  CCMR2_OUT  ======================================================= */
#define TIM_CCMR2_OUT_OC4CE_Pos           (15UL)                    /*!< OC4CE (Bit 15)                                        */
#define TIM_CCMR2_OUT_OC4CE_Msk           (0x8000UL)                /*!< OC4CE (Bitfield-Mask: 0x01)                           */
#define TIM_CCMR2_OUT_OC4CE                      TIM_CCMR2_OUT_OC4CE_Msk
#define TIM_CCMR2_OUT_OC4M_Pos            (12UL)                    /*!< OC4M (Bit 12)                                         */
#define TIM_CCMR2_OUT_OC4M_Msk            (0x7000UL)                /*!< OC4M (Bitfield-Mask: 0x07)                            */
#define TIM_CCMR2_OUT_OC4M                      TIM_CCMR2_OUT_OC4M_Msk
#define TIM_CCMR2_OUT_OC4PE_Pos           (11UL)                    /*!< OC4PE (Bit 11)                                        */
#define TIM_CCMR2_OUT_OC4PE_Msk           (0x800UL)                 /*!< OC4PE (Bitfield-Mask: 0x01)                           */
#define TIM_CCMR2_OUT_OC4PE                      TIM_CCMR2_OUT_OC4PE_Msk
#define TIM_CCMR2_OUT_OC4FE_Pos           (10UL)                    /*!< OC4FE (Bit 10)                                        */
#define TIM_CCMR2_OUT_OC4FE_Msk           (0x400UL)                 /*!< OC4FE (Bitfield-Mask: 0x01)                           */
#define TIM_CCMR2_OUT_OC4FE                      TIM_CCMR2_OUT_OC4FE_Msk
#define TIM_CCMR2_OUT_CC4S_Pos            (8UL)                     /*!< CC4S (Bit 8)                                          */
#define TIM_CCMR2_OUT_CC4S_Msk            (0x300UL)                 /*!< CC4S (Bitfield-Mask: 0x03)                            */
#define TIM_CCMR2_OUT_CC4S                      TIM_CCMR2_OUT_CC4S_Msk
#define TIM_CCMR2_OUT_OC3CE_Pos           (7UL)                     /*!< OC3CE (Bit 7)                                         */
#define TIM_CCMR2_OUT_OC3CE_Msk           (0x80UL)                  /*!< OC3CE (Bitfield-Mask: 0x01)                           */
#define TIM_CCMR2_OUT_OC3CE                      TIM_CCMR2_OUT_OC3CE_Msk
#define TIM_CCMR2_OUT_OC3M_Pos            (4UL)                     /*!< OC3M (Bit 4)                                          */
#define TIM_CCMR2_OUT_OC3M_Msk            (0x70UL)                  /*!< OC3M (Bitfield-Mask: 0x07)                            */
#define TIM_CCMR2_OUT_OC3M                      TIM_CCMR2_OUT_OC3M_Msk
#define TIM_CCMR2_OUT_OC3PE_Pos           (3UL)                     /*!< OC3PE (Bit 3)                                         */
#define TIM_CCMR2_OUT_OC3PE_Msk           (0x8UL)                   /*!< OC3PE (Bitfield-Mask: 0x01)                           */
#define TIM_CCMR2_OUT_OC3PE                      TIM_CCMR2_OUT_OC3PE_Msk
#define TIM_CCMR2_OUT_OC3FE_Pos           (2UL)                     /*!< OC3FE (Bit 2)                                         */
#define TIM_CCMR2_OUT_OC3FE_Msk           (0x4UL)                   /*!< OC3FE (Bitfield-Mask: 0x01)                           */
#define TIM_CCMR2_OUT_OC3FE                      TIM_CCMR2_OUT_OC3FE_Msk
#define TIM_CCMR2_OUT_CC3S_Pos            (0UL)                     /*!< CC3S (Bit 0)                                          */
#define TIM_CCMR2_OUT_CC3S_Msk            (0x3UL)                   /*!< CC3S (Bitfield-Mask: 0x03)                            */
#define TIM_CCMR2_OUT_CC3S                      TIM_CCMR2_OUT_CC3S_Msk
/* =======================================================  CCMR2_IN  ======================================================== */
#define TIM_CCMR2_IN_IC4F_Pos             (12UL)                    /*!< IC4F (Bit 12)                                         */
#define TIM_CCMR2_IN_IC4F_Msk             (0xf000UL)                /*!< IC4F (Bitfield-Mask: 0x0f)                            */
#define TIM_CCMR2_IN_IC4F                      TIM_CCMR2_IN_IC4F_Msk
#define TIM_CCMR2_IN_IC4PSC_Pos           (10UL)                    /*!< IC4PSC (Bit 10)                                       */
#define TIM_CCMR2_IN_IC4PSC_Msk           (0xc00UL)                 /*!< IC4PSC (Bitfield-Mask: 0x03)                          */
#define TIM_CCMR2_IN_IC4PSC                      TIM_CCMR2_IN_IC4PSC_Msk
#define TIM_CCMR2_IN_CC4S_Pos             (8UL)                     /*!< CC4S (Bit 8)                                          */
#define TIM_CCMR2_IN_CC4S_Msk             (0x300UL)                 /*!< CC4S (Bitfield-Mask: 0x03)                            */
#define TIM_CCMR2_IN_CC4S                      TIM_CCMR2_IN_CC4S_Msk
#define TIM_CCMR2_IN_IC3F_Pos             (4UL)                     /*!< IC3F (Bit 4)                                          */
#define TIM_CCMR2_IN_IC3F_Msk             (0xf0UL)                  /*!< IC3F (Bitfield-Mask: 0x0f)                            */
#define TIM_CCMR2_IN_IC3F                      TIM_CCMR2_IN_IC3F_Msk
#define TIM_CCMR2_IN_IC3PSC_Pos           (2UL)                     /*!< IC3PSC (Bit 2)                                        */
#define TIM_CCMR2_IN_IC3PSC_Msk           (0xcUL)                   /*!< IC3PSC (Bitfield-Mask: 0x03)                          */
#define TIM_CCMR2_IN_IC3PSC                      TIM_CCMR2_IN_IC3PSC_Msk
#define TIM_CCMR2_IN_CC3S_Pos             (0UL)                     /*!< CC3S (Bit 0)                                          */
#define TIM_CCMR2_IN_CC3S_Msk             (0x3UL)                   /*!< CC3S (Bitfield-Mask: 0x03)                            */
#define TIM_CCMR2_IN_CC3S                      TIM_CCMR2_IN_CC3S_Msk
/* =========================================================  CCER  ========================================================== */
#define TIM_CCER_CC4P_Pos                 (13UL)                    /*!< CC4P (Bit 13)                                         */
#define TIM_CCER_CC4P_Msk                 (0x2000UL)                /*!< CC4P (Bitfield-Mask: 0x01)                            */
#define TIM_CCER_CC4P                      TIM_CCER_CC4P_Msk
#define TIM_CCER_CC4E_Pos                 (12UL)                    /*!< CC4E (Bit 12)                                         */
#define TIM_CCER_CC4E_Msk                 (0x1000UL)                /*!< CC4E (Bitfield-Mask: 0x01)                            */
#define TIM_CCER_CC4E                      TIM_CCER_CC4E_Msk
#define TIM_CCER_CC3NP_Pos                (11UL)                    /*!< CC3NP (Bit 11)                                        */
#define TIM_CCER_CC3NP_Msk                (0x800UL)                 /*!< CC3NP (Bitfield-Mask: 0x01)                           */
#define TIM_CCER_CC3NP                      TIM_CCER_CC3NP_Msk
#define TIM_CCER_CC3NE_Pos                (10UL)                    /*!< CC3NE (Bit 10)                                        */
#define TIM_CCER_CC3NE_Msk                (0x400UL)                 /*!< CC3NE (Bitfield-Mask: 0x01)                           */
#define TIM_CCER_CC3NE                      TIM_CCER_CC3NE_Msk
#define TIM_CCER_CC3P_Pos                 (9UL)                     /*!< CC3P (Bit 9)                                          */
#define TIM_CCER_CC3P_Msk                 (0x200UL)                 /*!< CC3P (Bitfield-Mask: 0x01)                            */
#define TIM_CCER_CC3P                      TIM_CCER_CC3P_Msk
#define TIM_CCER_CC3E_Pos                 (8UL)                     /*!< CC3E (Bit 8)                                          */
#define TIM_CCER_CC3E_Msk                 (0x100UL)                 /*!< CC3E (Bitfield-Mask: 0x01)                            */
#define TIM_CCER_CC3E                      TIM_CCER_CC3E_Msk
#define TIM_CCER_CC2NP_Pos                (7UL)                     /*!< CC2NP (Bit 7)                                         */
#define TIM_CCER_CC2NP_Msk                (0x80UL)                  /*!< CC2NP (Bitfield-Mask: 0x01)                           */
#define TIM_CCER_CC2NP                      TIM_CCER_CC2NP_Msk
#define TIM_CCER_CC2NE_Pos                (6UL)                     /*!< CC2NE (Bit 6)                                         */
#define TIM_CCER_CC2NE_Msk                (0x40UL)                  /*!< CC2NE (Bitfield-Mask: 0x01)                           */
#define TIM_CCER_CC2NE                      TIM_CCER_CC2NE_Msk
#define TIM_CCER_CC2P_Pos                 (5UL)                     /*!< CC2P (Bit 5)                                          */
#define TIM_CCER_CC2P_Msk                 (0x20UL)                  /*!< CC2P (Bitfield-Mask: 0x01)                            */
#define TIM_CCER_CC2P                      TIM_CCER_CC2P_Msk
#define TIM_CCER_CC2E_Pos                 (4UL)                     /*!< CC2E (Bit 4)                                          */
#define TIM_CCER_CC2E_Msk                 (0x10UL)                  /*!< CC2E (Bitfield-Mask: 0x01)                            */
#define TIM_CCER_CC2E                      TIM_CCER_CC2E_Msk
#define TIM_CCER_CC1NP_Pos                (3UL)                     /*!< CC1NP (Bit 3)                                         */
#define TIM_CCER_CC1NP_Msk                (0x8UL)                   /*!< CC1NP (Bitfield-Mask: 0x01)                           */
#define TIM_CCER_CC1NP                      TIM_CCER_CC1NP_Msk
#define TIM_CCER_CC1NE_Pos                (2UL)                     /*!< CC1NE (Bit 2)                                         */
#define TIM_CCER_CC1NE_Msk                (0x4UL)                   /*!< CC1NE (Bitfield-Mask: 0x01)                           */
#define TIM_CCER_CC1NE                      TIM_CCER_CC1NE_Msk
#define TIM_CCER_CC1P_Pos                 (1UL)                     /*!< CC1P (Bit 1)                                          */
#define TIM_CCER_CC1P_Msk                 (0x2UL)                   /*!< CC1P (Bitfield-Mask: 0x01)                            */
#define TIM_CCER_CC1P                      TIM_CCER_CC1P_Msk
#define TIM_CCER_CC1E_Pos                 (0UL)                     /*!< CC1E (Bit 0)                                          */
#define TIM_CCER_CC1E_Msk                 (0x1UL)                   /*!< CC1E (Bitfield-Mask: 0x01)                            */
#define TIM_CCER_CC1E                      TIM_CCER_CC1E_Msk
/* ==========================================================  CNT  ========================================================== */
#define TIM_CNT_CNT_Pos                   (0UL)                     /*!< CNT (Bit 0)                                           */
#define TIM_CNT_CNT_Msk                   (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
#define TIM_CNT_CNT                      TIM_CNT_CNT_Msk
/* ==========================================================  PSC  ========================================================== */
#define TIM_PSC_PSC_Pos                   (0UL)                     /*!< PSC (Bit 0)                                           */
#define TIM_PSC_PSC_Msk                   (0xffffUL)                /*!< PSC (Bitfield-Mask: 0xffff)                           */
#define TIM_PSC_PSC                      TIM_PSC_PSC_Msk
/* ==========================================================  ARR  ========================================================== */
#define TIM_ARR_ARR_Pos                   (0UL)                     /*!< ARR (Bit 0)                                           */
#define TIM_ARR_ARR_Msk                   (0xffffUL)                /*!< ARR (Bitfield-Mask: 0xffff)                           */
#define TIM_ARR_ARR                      TIM_ARR_ARR_Msk
/* ==========================================================  RCR  ========================================================== */
#define TIM_RCR_REP_Pos                   (0UL)                     /*!< REP (Bit 0)                                           */
#define TIM_RCR_REP_Msk                   (0xffUL)                  /*!< REP (Bitfield-Mask: 0xff)                             */
#define TIM_RCR_REP                      TIM_RCR_REP_Msk
/* =========================================================  CCR1  ========================================================== */
#define TIM_CCR1_CCR1_Pos                 (0UL)                     /*!< CCR1 (Bit 0)                                          */
#define TIM_CCR1_CCR1_Msk                 (0xffffUL)                /*!< CCR1 (Bitfield-Mask: 0xffff)                          */
#define TIM_CCR1_CCR1                      TIM_CCR1_CCR1_Msk
/* =========================================================  CCR2  ========================================================== */
#define TIM_CCR2_CCR2_Pos                 (0UL)                     /*!< CCR2 (Bit 0)                                          */
#define TIM_CCR2_CCR2_Msk                 (0xffffUL)                /*!< CCR2 (Bitfield-Mask: 0xffff)                          */
#define TIM_CCR2_CCR2                      TIM_CCR2_CCR2_Msk
/* =========================================================  CCR3  ========================================================== */
#define TIM_CCR3_CCR3_Pos                 (0UL)                     /*!< CCR3 (Bit 0)                                          */
#define TIM_CCR3_CCR3_Msk                 (0xffffUL)                /*!< CCR3 (Bitfield-Mask: 0xffff)                          */
#define TIM_CCR3_CCR3                      TIM_CCR3_CCR3_Msk
/* =========================================================  CCR4  ========================================================== */
#define TIM_CCR4_CCR4_Pos                 (0UL)                     /*!< CCR4 (Bit 0)                                          */
#define TIM_CCR4_CCR4_Msk                 (0xffffUL)                /*!< CCR4 (Bitfield-Mask: 0xffff)                          */
#define TIM_CCR4_CCR4                      TIM_CCR4_CCR4_Msk
/* =========================================================  BDTR  ========================================================== */
#define TIM_BDTR_DTG_Pos                  (0UL)                     /*!< DTG (Bit 0)                                           */
#define TIM_BDTR_DTG_Msk                  (0xffUL)                  /*!< DTG (Bitfield-Mask: 0xff)                             */
#define TIM_BDTR_DTG                      TIM_BDTR_DTG_Msk
#define TIM_BDTR_LOCK_Pos                 (8UL)                     /*!< LOCK (Bit 8)                                          */
#define TIM_BDTR_LOCK_Msk                 (0x300UL)                 /*!< LOCK (Bitfield-Mask: 0x03)                            */
#define TIM_BDTR_LOCK                      TIM_BDTR_LOCK_Msk
#define TIM_BDTR_OSSI_Pos                 (10UL)                    /*!< OSSI (Bit 10)                                         */
#define TIM_BDTR_OSSI_Msk                 (0x400UL)                 /*!< OSSI (Bitfield-Mask: 0x01)                            */
#define TIM_BDTR_OSSI                      TIM_BDTR_OSSI_Msk
#define TIM_BDTR_OSSR_Pos                 (11UL)                    /*!< OSSR (Bit 11)                                         */
#define TIM_BDTR_OSSR_Msk                 (0x800UL)                 /*!< OSSR (Bitfield-Mask: 0x01)                            */
#define TIM_BDTR_OSSR                      TIM_BDTR_OSSR_Msk
#define TIM_BDTR_BKE_Pos                  (12UL)                    /*!< BKE (Bit 12)                                          */
#define TIM_BDTR_BKE_Msk                  (0x1000UL)                /*!< BKE (Bitfield-Mask: 0x01)                             */
#define TIM_BDTR_BKE                      TIM_BDTR_BKE_Msk
#define TIM_BDTR_BKP_Pos                  (13UL)                    /*!< BKP (Bit 13)                                          */
#define TIM_BDTR_BKP_Msk                  (0x2000UL)                /*!< BKP (Bitfield-Mask: 0x01)                             */
#define TIM_BDTR_BKP                      TIM_BDTR_BKP_Msk
#define TIM_BDTR_AOE_Pos                  (14UL)                    /*!< AOE (Bit 14)                                          */
#define TIM_BDTR_AOE_Msk                  (0x4000UL)                /*!< AOE (Bitfield-Mask: 0x01)                             */
#define TIM_BDTR_AOE                      TIM_BDTR_AOE_Msk
#define TIM_BDTR_MOE_Pos                  (15UL)                    /*!< MOE (Bit 15)                                          */
#define TIM_BDTR_MOE_Msk                  (0x8000UL)                /*!< MOE (Bitfield-Mask: 0x01)                             */
#define TIM_BDTR_MOE                      TIM_BDTR_MOE_Msk


/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  RESULT  ========================================================= */
#define CRC_RESULT_RESULT_Pos             (0UL)                     /*!< RESULT (Bit 0)                                        */
#define CRC_RESULT_RESULT_Msk             (0xffffUL)                /*!< RESULT (Bitfield-Mask: 0xffff)                        */
#define CRC_RESULT_RESULT                      CRC_RESULT_RESULT_Msk
#define CRC_RESULT_FLAG_Pos               (16UL)                    /*!< FLAG (Bit 16)                                         */
#define CRC_RESULT_FLAG_Msk               (0x10000UL)               /*!< FLAG (Bitfield-Mask: 0x01)                            */
#define CRC_RESULT_FLAG                      CRC_RESULT_FLAG_Msk
/* =========================================================  DATA0  ========================================================= */
#define CRC_DATA0_CRC_DATA_Pos            (0UL)                     /*!< CRC_DATA (Bit 0)                                      */
#define CRC_DATA0_CRC_DATA_Msk            (0xffffffffUL)            /*!< CRC_DATA (Bitfield-Mask: 0xffffffff)                  */
#define CRC_DATA0_CRC_DATA                      CRC_DATA0_CRC_DATA_Msk


/* =========================================================================================================================== */
/* ================                                           FLASH                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
#define FLASH_CR_OP_Pos                   (0UL)                     /*!< OP (Bit 0)                                            */
#define FLASH_CR_OP_Msk                   (0x3UL)                   /*!< OP (Bitfield-Mask: 0x03)                              */
#define FLASH_CR_OP                      FLASH_CR_OP_Msk
#define FLASH_CR_BUSY_Pos                 (2UL)                     /*!< BUSY (Bit 2)                                          */
#define FLASH_CR_BUSY_Msk                 (0x4UL)                   /*!< BUSY (Bitfield-Mask: 0x01)                            */
#define FLASH_CR_BUSY                      FLASH_CR_BUSY_Msk
#define FLASH_CR_IE0_Pos                  (3UL)                     /*!< IE0 (Bit 3)                                           */
#define FLASH_CR_IE0_Msk                  (0x8UL)                   /*!< IE0 (Bitfield-Mask: 0x01)                             */
#define FLASH_CR_IE0                      FLASH_CR_IE0_Msk
#define FLASH_CR_IE1_Pos                  (4UL)                     /*!< IE1 (Bit 4)                                           */
#define FLASH_CR_IE1_Msk                  (0x10UL)                  /*!< IE1 (Bitfield-Mask: 0x01)                             */
#define FLASH_CR_IE1                      FLASH_CR_IE1_Msk
/* ==========================================================  IFR  ========================================================== */
#define FLASH_IFR_IF1_Pos                 (1UL)                     /*!< IF1 (Bit 1)                                           */
#define FLASH_IFR_IF1_Msk                 (0x2UL)                   /*!< IF1 (Bitfield-Mask: 0x01)                             */
#define FLASH_IFR_IF1                      FLASH_IFR_IF1_Msk
#define FLASH_IFR_IF0_Pos                 (0UL)                     /*!< IF0 (Bit 0)                                           */
#define FLASH_IFR_IF0_Msk                 (0x1UL)                   /*!< IF0 (Bitfield-Mask: 0x01)                             */
#define FLASH_IFR_IF0                      FLASH_IFR_IF0_Msk
/* =========================================================  ICLR  ========================================================== */
#define FLASH_ICLR_ICLR1_Pos              (1UL)                     /*!< ICLR1 (Bit 1)                                         */
#define FLASH_ICLR_ICLR1_Msk              (0x2UL)                   /*!< ICLR1 (Bitfield-Mask: 0x01)                           */
#define FLASH_ICLR_ICLR1                      FLASH_ICLR_ICLR1_Msk
#define FLASH_ICLR_ICLR0_Pos              (0UL)                     /*!< ICLR0 (Bit 0)                                         */
#define FLASH_ICLR_ICLR0_Msk              (0x1UL)                   /*!< ICLR0 (Bitfield-Mask: 0x01)                           */
#define FLASH_ICLR_ICLR0                      FLASH_ICLR_ICLR0_Msk
/* ========================================================  BYPASS  ========================================================= */
#define FLASH_BYPASS_BYPASSSEQ_Pos        (0UL)                     /*!< BYPASSSEQ (Bit 0)                                     */
#define FLASH_BYPASS_BYPASSSEQ_Msk        (0xffffUL)                /*!< BYPASSSEQ (Bitfield-Mask: 0xffff)                     */
#define FLASH_BYPASS_BYPASSSEQ                      FLASH_BYPASS_BYPASSSEQ_Msk
/* ========================================================  SLOCK0  ========================================================= */
#define FLASH_SLOCK0_SLOCK0_31_Pos        (31UL)                    /*!< SLOCK0_31 (Bit 31)                                    */
#define FLASH_SLOCK0_SLOCK0_31_Msk        (0x80000000UL)            /*!< SLOCK0_31 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_31                      FLASH_SLOCK0_SLOCK0_31_Msk
#define FLASH_SLOCK0_SLOCK0_30_Pos        (30UL)                    /*!< SLOCK0_30 (Bit 30)                                    */
#define FLASH_SLOCK0_SLOCK0_30_Msk        (0x40000000UL)            /*!< SLOCK0_30 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_30                      FLASH_SLOCK0_SLOCK0_30_Msk
#define FLASH_SLOCK0_SLOCK0_29_Pos        (29UL)                    /*!< SLOCK0_29 (Bit 29)                                    */
#define FLASH_SLOCK0_SLOCK0_29_Msk        (0x20000000UL)            /*!< SLOCK0_29 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_29                      FLASH_SLOCK0_SLOCK0_29_Msk
#define FLASH_SLOCK0_SLOCK0_28_Pos        (28UL)                    /*!< SLOCK0_28 (Bit 28)                                    */
#define FLASH_SLOCK0_SLOCK0_28_Msk        (0x10000000UL)            /*!< SLOCK0_28 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_28                      FLASH_SLOCK0_SLOCK0_28_Msk
#define FLASH_SLOCK0_SLOCK0_27_Pos        (27UL)                    /*!< SLOCK0_27 (Bit 27)                                    */
#define FLASH_SLOCK0_SLOCK0_27_Msk        (0x8000000UL)             /*!< SLOCK0_27 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_27                      FLASH_SLOCK0_SLOCK0_27_Msk
#define FLASH_SLOCK0_SLOCK0_26_Pos        (26UL)                    /*!< SLOCK0_26 (Bit 26)                                    */
#define FLASH_SLOCK0_SLOCK0_26_Msk        (0x4000000UL)             /*!< SLOCK0_26 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_26                      FLASH_SLOCK0_SLOCK0_26_Msk
#define FLASH_SLOCK0_SLOCK0_25_Pos        (25UL)                    /*!< SLOCK0_25 (Bit 25)                                    */
#define FLASH_SLOCK0_SLOCK0_25_Msk        (0x2000000UL)             /*!< SLOCK0_25 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_25                      FLASH_SLOCK0_SLOCK0_25_Msk
#define FLASH_SLOCK0_SLOCK0_24_Pos        (24UL)                    /*!< SLOCK0_24 (Bit 24)                                    */
#define FLASH_SLOCK0_SLOCK0_24_Msk        (0x1000000UL)             /*!< SLOCK0_24 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_24                      FLASH_SLOCK0_SLOCK0_24_Msk
#define FLASH_SLOCK0_SLOCK0_23_Pos        (23UL)                    /*!< SLOCK0_23 (Bit 23)                                    */
#define FLASH_SLOCK0_SLOCK0_23_Msk        (0x800000UL)              /*!< SLOCK0_23 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_23                      FLASH_SLOCK0_SLOCK0_23_Msk
#define FLASH_SLOCK0_SLOCK0_22_Pos        (22UL)                    /*!< SLOCK0_22 (Bit 22)                                    */
#define FLASH_SLOCK0_SLOCK0_22_Msk        (0x400000UL)              /*!< SLOCK0_22 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_22                      FLASH_SLOCK0_SLOCK0_22_Msk
#define FLASH_SLOCK0_SLOCK0_21_Pos        (21UL)                    /*!< SLOCK0_21 (Bit 21)                                    */
#define FLASH_SLOCK0_SLOCK0_21_Msk        (0x200000UL)              /*!< SLOCK0_21 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_21                      FLASH_SLOCK0_SLOCK0_21_Msk
#define FLASH_SLOCK0_SLOCK0_20_Pos        (20UL)                    /*!< SLOCK0_20 (Bit 20)                                    */
#define FLASH_SLOCK0_SLOCK0_20_Msk        (0x100000UL)              /*!< SLOCK0_20 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_20                      FLASH_SLOCK0_SLOCK0_20_Msk
#define FLASH_SLOCK0_SLOCK0_19_Pos        (19UL)                    /*!< SLOCK0_19 (Bit 19)                                    */
#define FLASH_SLOCK0_SLOCK0_19_Msk        (0x80000UL)               /*!< SLOCK0_19 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_19                      FLASH_SLOCK0_SLOCK0_19_Msk
#define FLASH_SLOCK0_SLOCK0_18_Pos        (18UL)                    /*!< SLOCK0_18 (Bit 18)                                    */
#define FLASH_SLOCK0_SLOCK0_18_Msk        (0x40000UL)               /*!< SLOCK0_18 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_18                      FLASH_SLOCK0_SLOCK0_18_Msk
#define FLASH_SLOCK0_SLOCK0_17_Pos        (17UL)                    /*!< SLOCK0_17 (Bit 17)                                    */
#define FLASH_SLOCK0_SLOCK0_17_Msk        (0x20000UL)               /*!< SLOCK0_17 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_17                      FLASH_SLOCK0_SLOCK0_17_Msk
#define FLASH_SLOCK0_SLOCK0_16_Pos        (16UL)                    /*!< SLOCK0_16 (Bit 16)                                    */
#define FLASH_SLOCK0_SLOCK0_16_Msk        (0x10000UL)               /*!< SLOCK0_16 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_16                      FLASH_SLOCK0_SLOCK0_16_Msk
#define FLASH_SLOCK0_SLOCK0_15_Pos        (15UL)                    /*!< SLOCK0_15 (Bit 15)                                    */
#define FLASH_SLOCK0_SLOCK0_15_Msk        (0x8000UL)                /*!< SLOCK0_15 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_15                      FLASH_SLOCK0_SLOCK0_15_Msk
#define FLASH_SLOCK0_SLOCK0_14_Pos        (14UL)                    /*!< SLOCK0_14 (Bit 14)                                    */
#define FLASH_SLOCK0_SLOCK0_14_Msk        (0x4000UL)                /*!< SLOCK0_14 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_14                      FLASH_SLOCK0_SLOCK0_14_Msk
#define FLASH_SLOCK0_SLOCK0_13_Pos        (13UL)                    /*!< SLOCK0_13 (Bit 13)                                    */
#define FLASH_SLOCK0_SLOCK0_13_Msk        (0x2000UL)                /*!< SLOCK0_13 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_13                      FLASH_SLOCK0_SLOCK0_13_Msk
#define FLASH_SLOCK0_SLOCK0_12_Pos        (12UL)                    /*!< SLOCK0_12 (Bit 12)                                    */
#define FLASH_SLOCK0_SLOCK0_12_Msk        (0x1000UL)                /*!< SLOCK0_12 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_12                      FLASH_SLOCK0_SLOCK0_12_Msk
#define FLASH_SLOCK0_SLOCK0_11_Pos        (11UL)                    /*!< SLOCK0_11 (Bit 11)                                    */
#define FLASH_SLOCK0_SLOCK0_11_Msk        (0x800UL)                 /*!< SLOCK0_11 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_11                      FLASH_SLOCK0_SLOCK0_11_Msk
#define FLASH_SLOCK0_SLOCK0_10_Pos        (10UL)                    /*!< SLOCK0_10 (Bit 10)                                    */
#define FLASH_SLOCK0_SLOCK0_10_Msk        (0x400UL)                 /*!< SLOCK0_10 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK0_SLOCK0_10                      FLASH_SLOCK0_SLOCK0_10_Msk
#define FLASH_SLOCK0_SLOCK0_9_Pos         (9UL)                     /*!< SLOCK0_9 (Bit 9)                                      */
#define FLASH_SLOCK0_SLOCK0_9_Msk         (0x200UL)                 /*!< SLOCK0_9 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK0_SLOCK0_9                      FLASH_SLOCK0_SLOCK0_9_Msk
#define FLASH_SLOCK0_SLOCK0_8_Pos         (8UL)                     /*!< SLOCK0_8 (Bit 8)                                      */
#define FLASH_SLOCK0_SLOCK0_8_Msk         (0x100UL)                 /*!< SLOCK0_8 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK0_SLOCK0_8                      FLASH_SLOCK0_SLOCK0_8_Msk
#define FLASH_SLOCK0_SLOCK0_7_Pos         (7UL)                     /*!< SLOCK0_7 (Bit 7)                                      */
#define FLASH_SLOCK0_SLOCK0_7_Msk         (0x80UL)                  /*!< SLOCK0_7 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK0_SLOCK0_7                      FLASH_SLOCK0_SLOCK0_7_Msk
#define FLASH_SLOCK0_SLOCK0_6_Pos         (6UL)                     /*!< SLOCK0_6 (Bit 6)                                      */
#define FLASH_SLOCK0_SLOCK0_6_Msk         (0x40UL)                  /*!< SLOCK0_6 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK0_SLOCK0_6                      FLASH_SLOCK0_SLOCK0_6_Msk
#define FLASH_SLOCK0_SLOCK0_5_Pos         (5UL)                     /*!< SLOCK0_5 (Bit 5)                                      */
#define FLASH_SLOCK0_SLOCK0_5_Msk         (0x20UL)                  /*!< SLOCK0_5 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK0_SLOCK0_5                      FLASH_SLOCK0_SLOCK0_5_Msk
#define FLASH_SLOCK0_SLOCK0_4_Pos         (4UL)                     /*!< SLOCK0_4 (Bit 4)                                      */
#define FLASH_SLOCK0_SLOCK0_4_Msk         (0x10UL)                  /*!< SLOCK0_4 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK0_SLOCK0_4                      FLASH_SLOCK0_SLOCK0_4_Msk
#define FLASH_SLOCK0_SLOCK0_3_Pos         (3UL)                     /*!< SLOCK0_3 (Bit 3)                                      */
#define FLASH_SLOCK0_SLOCK0_3_Msk         (0x8UL)                   /*!< SLOCK0_3 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK0_SLOCK0_3                      FLASH_SLOCK0_SLOCK0_3_Msk
#define FLASH_SLOCK0_SLOCK0_2_Pos         (2UL)                     /*!< SLOCK0_2 (Bit 2)                                      */
#define FLASH_SLOCK0_SLOCK0_2_Msk         (0x4UL)                   /*!< SLOCK0_2 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK0_SLOCK0_2                      FLASH_SLOCK0_SLOCK0_2_Msk
#define FLASH_SLOCK0_SLOCK0_1_Pos         (1UL)                     /*!< SLOCK0_1 (Bit 1)                                      */
#define FLASH_SLOCK0_SLOCK0_1_Msk         (0x2UL)                   /*!< SLOCK0_1 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK0_SLOCK0_1                      FLASH_SLOCK0_SLOCK0_1_Msk
#define FLASH_SLOCK0_SLOCK0_0_Pos         (0UL)                     /*!< SLOCK0_0 (Bit 0)                                      */
#define FLASH_SLOCK0_SLOCK0_0_Msk         (0x1UL)                   /*!< SLOCK0_0 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK0_SLOCK0_0                      FLASH_SLOCK0_SLOCK0_0_Msk
/* ========================================================  SLOCK1  ========================================================= */
#define FLASH_SLOCK1_SLOCK1_31_Pos        (31UL)                    /*!< SLOCK1_31 (Bit 31)                                    */
#define FLASH_SLOCK1_SLOCK1_31_Msk        (0x80000000UL)            /*!< SLOCK1_31 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_31                      FLASH_SLOCK1_SLOCK1_31_Msk
#define FLASH_SLOCK1_SLOCK1_30_Pos        (30UL)                    /*!< SLOCK1_30 (Bit 30)                                    */
#define FLASH_SLOCK1_SLOCK1_30_Msk        (0x40000000UL)            /*!< SLOCK1_30 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_30                      FLASH_SLOCK1_SLOCK1_30_Msk
#define FLASH_SLOCK1_SLOCK1_29_Pos        (29UL)                    /*!< SLOCK1_29 (Bit 29)                                    */
#define FLASH_SLOCK1_SLOCK1_29_Msk        (0x20000000UL)            /*!< SLOCK1_29 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_29                      FLASH_SLOCK1_SLOCK1_29_Msk
#define FLASH_SLOCK1_SLOCK1_28_Pos        (28UL)                    /*!< SLOCK1_28 (Bit 28)                                    */
#define FLASH_SLOCK1_SLOCK1_28_Msk        (0x10000000UL)            /*!< SLOCK1_28 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_28                      FLASH_SLOCK1_SLOCK1_28_Msk
#define FLASH_SLOCK1_SLOCK1_27_Pos        (27UL)                    /*!< SLOCK1_27 (Bit 27)                                    */
#define FLASH_SLOCK1_SLOCK1_27_Msk        (0x8000000UL)             /*!< SLOCK1_27 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_27                      FLASH_SLOCK1_SLOCK1_27_Msk
#define FLASH_SLOCK1_SLOCK1_26_Pos        (26UL)                    /*!< SLOCK1_26 (Bit 26)                                    */
#define FLASH_SLOCK1_SLOCK1_26_Msk        (0x4000000UL)             /*!< SLOCK1_26 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_26                      FLASH_SLOCK1_SLOCK1_26_Msk
#define FLASH_SLOCK1_SLOCK1_25_Pos        (25UL)                    /*!< SLOCK1_25 (Bit 25)                                    */
#define FLASH_SLOCK1_SLOCK1_25_Msk        (0x2000000UL)             /*!< SLOCK1_25 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_25                      FLASH_SLOCK1_SLOCK1_25_Msk
#define FLASH_SLOCK1_SLOCK1_24_Pos        (24UL)                    /*!< SLOCK1_24 (Bit 24)                                    */
#define FLASH_SLOCK1_SLOCK1_24_Msk        (0x1000000UL)             /*!< SLOCK1_24 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_24                      FLASH_SLOCK1_SLOCK1_24_Msk
#define FLASH_SLOCK1_SLOCK1_23_Pos        (23UL)                    /*!< SLOCK1_23 (Bit 23)                                    */
#define FLASH_SLOCK1_SLOCK1_23_Msk        (0x800000UL)              /*!< SLOCK1_23 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_23                      FLASH_SLOCK1_SLOCK1_23_Msk
#define FLASH_SLOCK1_SLOCK1_22_Pos        (22UL)                    /*!< SLOCK1_22 (Bit 22)                                    */
#define FLASH_SLOCK1_SLOCK1_22_Msk        (0x400000UL)              /*!< SLOCK1_22 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_22                      FLASH_SLOCK1_SLOCK1_22_Msk
#define FLASH_SLOCK1_SLOCK1_21_Pos        (21UL)                    /*!< SLOCK1_21 (Bit 21)                                    */
#define FLASH_SLOCK1_SLOCK1_21_Msk        (0x200000UL)              /*!< SLOCK1_21 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_21                      FLASH_SLOCK1_SLOCK1_21_Msk
#define FLASH_SLOCK1_SLOCK1_20_Pos        (20UL)                    /*!< SLOCK1_20 (Bit 20)                                    */
#define FLASH_SLOCK1_SLOCK1_20_Msk        (0x100000UL)              /*!< SLOCK1_20 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_20                      FLASH_SLOCK1_SLOCK1_20_Msk
#define FLASH_SLOCK1_SLOCK1_19_Pos        (19UL)                    /*!< SLOCK1_19 (Bit 19)                                    */
#define FLASH_SLOCK1_SLOCK1_19_Msk        (0x80000UL)               /*!< SLOCK1_19 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_19                      FLASH_SLOCK1_SLOCK1_19_Msk
#define FLASH_SLOCK1_SLOCK1_18_Pos        (18UL)                    /*!< SLOCK1_18 (Bit 18)                                    */
#define FLASH_SLOCK1_SLOCK1_18_Msk        (0x40000UL)               /*!< SLOCK1_18 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_18                      FLASH_SLOCK1_SLOCK1_18_Msk
#define FLASH_SLOCK1_SLOCK1_17_Pos        (17UL)                    /*!< SLOCK1_17 (Bit 17)                                    */
#define FLASH_SLOCK1_SLOCK1_17_Msk        (0x20000UL)               /*!< SLOCK1_17 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_17                      FLASH_SLOCK1_SLOCK1_17_Msk
#define FLASH_SLOCK1_SLOCK1_16_Pos        (16UL)                    /*!< SLOCK1_16 (Bit 16)                                    */
#define FLASH_SLOCK1_SLOCK1_16_Msk        (0x10000UL)               /*!< SLOCK1_16 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_16                      FLASH_SLOCK1_SLOCK1_16_Msk
#define FLASH_SLOCK1_SLOCK1_15_Pos        (15UL)                    /*!< SLOCK1_15 (Bit 15)                                    */
#define FLASH_SLOCK1_SLOCK1_15_Msk        (0x8000UL)                /*!< SLOCK1_15 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_15                      FLASH_SLOCK1_SLOCK1_15_Msk
#define FLASH_SLOCK1_SLOCK1_14_Pos        (14UL)                    /*!< SLOCK1_14 (Bit 14)                                    */
#define FLASH_SLOCK1_SLOCK1_14_Msk        (0x4000UL)                /*!< SLOCK1_14 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_14                      FLASH_SLOCK1_SLOCK1_14_Msk
#define FLASH_SLOCK1_SLOCK1_13_Pos        (13UL)                    /*!< SLOCK1_13 (Bit 13)                                    */
#define FLASH_SLOCK1_SLOCK1_13_Msk        (0x2000UL)                /*!< SLOCK1_13 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_13                      FLASH_SLOCK1_SLOCK1_13_Msk
#define FLASH_SLOCK1_SLOCK1_12_Pos        (12UL)                    /*!< SLOCK1_12 (Bit 12)                                    */
#define FLASH_SLOCK1_SLOCK1_12_Msk        (0x1000UL)                /*!< SLOCK1_12 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_12                      FLASH_SLOCK1_SLOCK1_12_Msk
#define FLASH_SLOCK1_SLOCK1_11_Pos        (11UL)                    /*!< SLOCK1_11 (Bit 11)                                    */
#define FLASH_SLOCK1_SLOCK1_11_Msk        (0x800UL)                 /*!< SLOCK1_11 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_11                      FLASH_SLOCK1_SLOCK1_11_Msk
#define FLASH_SLOCK1_SLOCK1_10_Pos        (10UL)                    /*!< SLOCK1_10 (Bit 10)                                    */
#define FLASH_SLOCK1_SLOCK1_10_Msk        (0x400UL)                 /*!< SLOCK1_10 (Bitfield-Mask: 0x01)                       */
#define FLASH_SLOCK1_SLOCK1_10                      FLASH_SLOCK1_SLOCK1_10_Msk
#define FLASH_SLOCK1_SLOCK1_9_Pos         (9UL)                     /*!< SLOCK1_9 (Bit 9)                                      */
#define FLASH_SLOCK1_SLOCK1_9_Msk         (0x200UL)                 /*!< SLOCK1_9 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK1_SLOCK1_9                      FLASH_SLOCK1_SLOCK1_9_Msk
#define FLASH_SLOCK1_SLOCK1_8_Pos         (8UL)                     /*!< SLOCK1_8 (Bit 8)                                      */
#define FLASH_SLOCK1_SLOCK1_8_Msk         (0x100UL)                 /*!< SLOCK1_8 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK1_SLOCK1_8                      FLASH_SLOCK1_SLOCK1_8_Msk
#define FLASH_SLOCK1_SLOCK1_7_Pos         (7UL)                     /*!< SLOCK1_7 (Bit 7)                                      */
#define FLASH_SLOCK1_SLOCK1_7_Msk         (0x80UL)                  /*!< SLOCK1_7 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK1_SLOCK1_7                      FLASH_SLOCK1_SLOCK1_7_Msk
#define FLASH_SLOCK1_SLOCK1_6_Pos         (6UL)                     /*!< SLOCK1_6 (Bit 6)                                      */
#define FLASH_SLOCK1_SLOCK1_6_Msk         (0x40UL)                  /*!< SLOCK1_6 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK1_SLOCK1_6                      FLASH_SLOCK1_SLOCK1_6_Msk
#define FLASH_SLOCK1_SLOCK1_5_Pos         (5UL)                     /*!< SLOCK1_5 (Bit 5)                                      */
#define FLASH_SLOCK1_SLOCK1_5_Msk         (0x20UL)                  /*!< SLOCK1_5 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK1_SLOCK1_5                      FLASH_SLOCK1_SLOCK1_5_Msk
#define FLASH_SLOCK1_SLOCK1_4_Pos         (4UL)                     /*!< SLOCK1_4 (Bit 4)                                      */
#define FLASH_SLOCK1_SLOCK1_4_Msk         (0x10UL)                  /*!< SLOCK1_4 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK1_SLOCK1_4                      FLASH_SLOCK1_SLOCK1_4_Msk
#define FLASH_SLOCK1_SLOCK1_3_Pos         (3UL)                     /*!< SLOCK1_3 (Bit 3)                                      */
#define FLASH_SLOCK1_SLOCK1_3_Msk         (0x8UL)                   /*!< SLOCK1_3 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK1_SLOCK1_3                      FLASH_SLOCK1_SLOCK1_3_Msk
#define FLASH_SLOCK1_SLOCK1_2_Pos         (2UL)                     /*!< SLOCK1_2 (Bit 2)                                      */
#define FLASH_SLOCK1_SLOCK1_2_Msk         (0x4UL)                   /*!< SLOCK1_2 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK1_SLOCK1_2                      FLASH_SLOCK1_SLOCK1_2_Msk
#define FLASH_SLOCK1_SLOCK1_1_Pos         (1UL)                     /*!< SLOCK1_1 (Bit 1)                                      */
#define FLASH_SLOCK1_SLOCK1_1_Msk         (0x2UL)                   /*!< SLOCK1_1 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK1_SLOCK1_1                      FLASH_SLOCK1_SLOCK1_1_Msk
#define FLASH_SLOCK1_SLOCK1_0_Pos         (0UL)                     /*!< SLOCK1_0 (Bit 0)                                      */
#define FLASH_SLOCK1_SLOCK1_0_Msk         (0x1UL)                   /*!< SLOCK1_0 (Bitfield-Mask: 0x01)                        */
#define FLASH_SLOCK1_SLOCK1_0                      FLASH_SLOCK1_SLOCK1_0_Msk
/* ========================================================  ISPCON  ========================================================= */
#define FLASH_ISPCON_ISP_CON_Pos          (0UL)                     /*!< ISP_CON (Bit 0)                                       */
#define FLASH_ISPCON_ISP_CON_Msk          (0x1UL)                   /*!< ISP_CON (Bitfield-Mask: 0x01)                         */
#define FLASH_ISPCON_ISP_CON                      FLASH_ISPCON_ISP_CON_Msk
#define FLASH_ISPCON_KEY_Pos              (16UL)                    /*!< KEY (Bit 16)                                          */
#define FLASH_ISPCON_KEY_Msk              (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define FLASH_ISPCON_KEY                      FLASH_ISPCON_KEY_Msk
/* ========================================================  IAPCON  ========================================================= */
#define FLASH_IAPCON_IAP_CON_Pos          (0UL)                     /*!< IAP_CON (Bit 0)                                       */
#define FLASH_IAPCON_IAP_CON_Msk          (0x1UL)                   /*!< IAP_CON (Bitfield-Mask: 0x01)                         */
#define FLASH_IAPCON_IAP_CON                      FLASH_IAPCON_IAP_CON_Msk
/* =======================================================  IAP_SIZE  ======================================================== */
#define FLASH_IAP_SIZE_IAP_SIZE_Pos       (0UL)                     /*!< IAP_SIZE (Bit 0)                                      */
#define FLASH_IAP_SIZE_IAP_SIZE_Msk       (0x3UL)                   /*!< IAP_SIZE (Bitfield-Mask: 0x03)                        */
#define FLASH_IAP_SIZE_IAP_SIZE                      FLASH_IAP_SIZE_IAP_SIZE_Msk
/* =====================================================  ISP_AUX_FLAG  ====================================================== */
#define FLASH_ISP_AUX_FLAG_ISP_AUX_FLAG_Pos (0UL)                   /*!< ISP_AUX_FLAG (Bit 0)                                  */
#define FLASH_ISP_AUX_FLAG_ISP_AUX_FLAG_Msk (0x1UL)                 /*!< ISP_AUX_FLAG (Bitfield-Mask: 0x01)                    */
#define FLASH_ISP_AUX_FLAG_ISP_AUX_FLAG                      FLASH_ISP_AUX_FLAG_ISP_AUX_FLAG_Msk
/* =========================================================  SWCFG  ========================================================= */
#define FLASH_SWCFG_SWCFG_BGRVT_Pos       (0UL)                     /*!< SWCFG_BGRVT (Bit 0)                                   */
#define FLASH_SWCFG_SWCFG_BGRVT_Msk       (0x1fUL)                  /*!< SWCFG_BGRVT (Bitfield-Mask: 0x1f)                     */
#define FLASH_SWCFG_SWCFG_BGRVT                      FLASH_SWCFG_SWCFG_BGRVT_Msk
#define FLASH_SWCFG_SWCFG_BGRTT_Pos       (5UL)                     /*!< SWCFG_BGRTT (Bit 5)                                   */
#define FLASH_SWCFG_SWCFG_BGRTT_Msk       (0x3e0UL)                 /*!< SWCFG_BGRTT (Bitfield-Mask: 0x1f)                     */
#define FLASH_SWCFG_SWCFG_BGRTT                      FLASH_SWCFG_SWCFG_BGRTT_Msk
#define FLASH_SWCFG_SWCFG_FT_Pos          (10UL)                    /*!< SWCFG_FT (Bit 10)                                     */
#define FLASH_SWCFG_SWCFG_FT_Msk          (0x1c00UL)                /*!< SWCFG_FT (Bitfield-Mask: 0x07)                        */
#define FLASH_SWCFG_SWCFG_FT                      FLASH_SWCFG_SWCFG_FT_Msk
#define FLASH_SWCFG_SWCFG_CT_Pos          (13UL)                    /*!< SWCFG_CT (Bit 13)                                     */
#define FLASH_SWCFG_SWCFG_CT_Msk          (0x1e000UL)               /*!< SWCFG_CT (Bitfield-Mask: 0x0f)                        */
#define FLASH_SWCFG_SWCFG_CT                      FLASH_SWCFG_SWCFG_CT_Msk
#define FLASH_SWCFG_SWCFG_RT_Pos          (17UL)                    /*!< SWCFG_RT (Bit 17)                                     */
#define FLASH_SWCFG_SWCFG_RT_Msk          (0x3e0000UL)              /*!< SWCFG_RT (Bitfield-Mask: 0x1f)                        */
#define FLASH_SWCFG_SWCFG_RT                      FLASH_SWCFG_SWCFG_RT_Msk
#define FLASH_SWCFG_SWCFG_HVSEL_Pos       (22UL)                    /*!< SWCFG_HVSEL (Bit 22)                                  */
#define FLASH_SWCFG_SWCFG_HVSEL_Msk       (0x400000UL)              /*!< SWCFG_HVSEL (Bitfield-Mask: 0x01)                     */
#define FLASH_SWCFG_SWCFG_HVSEL                      FLASH_SWCFG_SWCFG_HVSEL_Msk
#define FLASH_SWCFG_SWCFG_MT_Pos          (23UL)                    /*!< SWCFG_MT (Bit 23)                                     */
#define FLASH_SWCFG_SWCFG_MT_Msk          (0x1800000UL)             /*!< SWCFG_MT (Bitfield-Mask: 0x03)                        */
#define FLASH_SWCFG_SWCFG_MT                      FLASH_SWCFG_SWCFG_MT_Msk
/* =========================================================  HWCFG  ========================================================= */
#define FLASH_HWCFG_SWCFG_BGRVT_EN_Pos    (0UL)                     /*!< SWCFG_BGRVT_EN (Bit 0)                                */
#define FLASH_HWCFG_SWCFG_BGRVT_EN_Msk    (0x1UL)                   /*!< SWCFG_BGRVT_EN (Bitfield-Mask: 0x01)                  */
#define FLASH_HWCFG_SWCFG_BGRVT_EN                      FLASH_HWCFG_SWCFG_BGRVT_EN_Msk
#define FLASH_HWCFG_SWCFG_BGRTT_EN_Pos    (1UL)                     /*!< SWCFG_BGRTT_EN (Bit 1)                                */
#define FLASH_HWCFG_SWCFG_BGRTT_EN_Msk    (0x2UL)                   /*!< SWCFG_BGRTT_EN (Bitfield-Mask: 0x01)                  */
#define FLASH_HWCFG_SWCFG_BGRTT_EN                      FLASH_HWCFG_SWCFG_BGRTT_EN_Msk
#define FLASH_HWCFG_SWCFG_FT_EN_Pos       (2UL)                     /*!< SWCFG_FT_EN (Bit 2)                                   */
#define FLASH_HWCFG_SWCFG_FT_EN_Msk       (0x4UL)                   /*!< SWCFG_FT_EN (Bitfield-Mask: 0x01)                     */
#define FLASH_HWCFG_SWCFG_FT_EN                      FLASH_HWCFG_SWCFG_FT_EN_Msk
#define FLASH_HWCFG_SWCFG_CT_EN_Pos       (3UL)                     /*!< SWCFG_CT_EN (Bit 3)                                   */
#define FLASH_HWCFG_SWCFG_CT_EN_Msk       (0x8UL)                   /*!< SWCFG_CT_EN (Bitfield-Mask: 0x01)                     */
#define FLASH_HWCFG_SWCFG_CT_EN                      FLASH_HWCFG_SWCFG_CT_EN_Msk
#define FLASH_HWCFG_SWCFG_RT_EN_Pos       (4UL)                     /*!< SWCFG_RT_EN (Bit 4)                                   */
#define FLASH_HWCFG_SWCFG_RT_EN_Msk       (0x10UL)                  /*!< SWCFG_RT_EN (Bitfield-Mask: 0x01)                     */
#define FLASH_HWCFG_SWCFG_RT_EN                      FLASH_HWCFG_SWCFG_RT_EN_Msk
#define FLASH_HWCFG_SWCFG_HVSEL_EN_Pos    (5UL)                     /*!< SWCFG_HVSEL_EN (Bit 5)                                */
#define FLASH_HWCFG_SWCFG_HVSEL_EN_Msk    (0x20UL)                  /*!< SWCFG_HVSEL_EN (Bitfield-Mask: 0x01)                  */
#define FLASH_HWCFG_SWCFG_HVSEL_EN                      FLASH_HWCFG_SWCFG_HVSEL_EN_Msk
#define FLASH_HWCFG_SWCFG_MT_EN_Pos       (6UL)                     /*!< SWCFG_MT_EN (Bit 6)                                   */
#define FLASH_HWCFG_SWCFG_MT_EN_Msk       (0x40UL)                  /*!< SWCFG_MT_EN (Bitfield-Mask: 0x01)                     */
#define FLASH_HWCFG_SWCFG_MT_EN                      FLASH_HWCFG_SWCFG_MT_EN_Msk
#define FLASH_HWCFG_HWCFG_BGRVT_Pos       (7UL)                     /*!< HWCFG_BGRVT (Bit 7)                                   */
#define FLASH_HWCFG_HWCFG_BGRVT_Msk       (0xf80UL)                 /*!< HWCFG_BGRVT (Bitfield-Mask: 0x1f)                     */
#define FLASH_HWCFG_HWCFG_BGRVT                      FLASH_HWCFG_HWCFG_BGRVT_Msk
#define FLASH_HWCFG_HWCFG_BGRTT_Pos       (12UL)                    /*!< HWCFG_BGRTT (Bit 12)                                  */
#define FLASH_HWCFG_HWCFG_BGRTT_Msk       (0x1f000UL)               /*!< HWCFG_BGRTT (Bitfield-Mask: 0x1f)                     */
#define FLASH_HWCFG_HWCFG_BGRTT                      FLASH_HWCFG_HWCFG_BGRTT_Msk
#define FLASH_HWCFG_HWCFG_FT_Pos          (17UL)                    /*!< HWCFG_FT (Bit 17)                                     */
#define FLASH_HWCFG_HWCFG_FT_Msk          (0xe0000UL)               /*!< HWCFG_FT (Bitfield-Mask: 0x07)                        */
#define FLASH_HWCFG_HWCFG_FT                      FLASH_HWCFG_HWCFG_FT_Msk
#define FLASH_HWCFG_HWCFG_CT_Pos          (20UL)                    /*!< HWCFG_CT (Bit 20)                                     */
#define FLASH_HWCFG_HWCFG_CT_Msk          (0xf00000UL)              /*!< HWCFG_CT (Bitfield-Mask: 0x0f)                        */
#define FLASH_HWCFG_HWCFG_CT                      FLASH_HWCFG_HWCFG_CT_Msk
#define FLASH_HWCFG_HWCFG_RT_Pos          (24UL)                    /*!< HWCFG_RT (Bit 24)                                     */
#define FLASH_HWCFG_HWCFG_RT_Msk          (0x1f000000UL)            /*!< HWCFG_RT (Bitfield-Mask: 0x1f)                        */
#define FLASH_HWCFG_HWCFG_RT                      FLASH_HWCFG_HWCFG_RT_Msk
#define FLASH_HWCFG_HWCFG_HVSEL_Pos       (29UL)                    /*!< HWCFG_HVSEL (Bit 29)                                  */
#define FLASH_HWCFG_HWCFG_HVSEL_Msk       (0x20000000UL)            /*!< HWCFG_HVSEL (Bitfield-Mask: 0x01)                     */
#define FLASH_HWCFG_HWCFG_HVSEL                      FLASH_HWCFG_HWCFG_HVSEL_Msk
#define FLASH_HWCFG_HWCFG_MT_Pos          (30UL)                    /*!< HWCFG_MT (Bit 30)                                     */
#define FLASH_HWCFG_HWCFG_MT_Msk          (0xc0000000UL)            /*!< HWCFG_MT (Bitfield-Mask: 0x03)                        */
#define FLASH_HWCFG_HWCFG_MT                      FLASH_HWCFG_HWCFG_MT_Msk


/* =========================================================================================================================== */
/* ================                                           GPIO                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DIRCR  ========================================================= */
#define GPIO_DIRCR_PxDIR_Pos              (0UL)                     /*!< PxDIR (Bit 0)                                         */
#define GPIO_DIRCR_PxDIR_Msk              (0xffffUL)                /*!< PxDIR (Bitfield-Mask: 0xffff)                         */
#define GPIO_DIRCR_PxDIR                      GPIO_DIRCR_PxDIR_Msk
/* ========================================================  OTYPER  ========================================================= */
#define GPIO_OTYPER_PxOTYP_Pos            (0UL)                     /*!< PxOTYP (Bit 0)                                        */
#define GPIO_OTYPER_PxOTYP_Msk            (0xffffUL)                /*!< PxOTYP (Bitfield-Mask: 0xffff)                        */
#define GPIO_OTYPER_PxOTYP                      GPIO_OTYPER_PxOTYP_Msk
/* ==========================================================  ODR  ========================================================== */
#define GPIO_ODR_PxOD_Pos                 (0UL)                     /*!< PxOD (Bit 0)                                          */
#define GPIO_ODR_PxOD_Msk                 (0xffffUL)                /*!< PxOD (Bitfield-Mask: 0xffff)                          */
#define GPIO_ODR_PxOD                      GPIO_ODR_PxOD_Msk
/* ==========================================================  IDR  ========================================================== */
#define GPIO_IDR_PxID_Pos                 (0UL)                     /*!< PxID (Bit 0)                                          */
#define GPIO_IDR_PxID_Msk                 (0xffffUL)                /*!< PxID (Bitfield-Mask: 0xffff)                          */
#define GPIO_IDR_PxID                      GPIO_IDR_PxID_Msk
/* =========================================================  INTEN  ========================================================= */
#define GPIO_INTEN_PxIEN_Pos              (0UL)                     /*!< PxIEN (Bit 0)                                         */
#define GPIO_INTEN_PxIEN_Msk              (0xffffUL)                /*!< PxIEN (Bitfield-Mask: 0xffff)                         */
#define GPIO_INTEN_PxIEN                      GPIO_INTEN_PxIEN_Msk
/* =======================================================  RAWINTSR  ======================================================== */
#define GPIO_RAWINTSR_PxRIS_Pos           (0UL)                     /*!< PxRIS (Bit 0)                                         */
#define GPIO_RAWINTSR_PxRIS_Msk           (0xffffUL)                /*!< PxRIS (Bitfield-Mask: 0xffff)                         */
#define GPIO_RAWINTSR_PxRIS                      GPIO_RAWINTSR_PxRIS_Msk
/* =======================================================  MSKINTSR  ======================================================== */
#define GPIO_MSKINTSR_PxMIS_Pos           (0UL)                     /*!< PxMIS (Bit 0)                                         */
#define GPIO_MSKINTSR_PxMIS_Msk           (0xffffUL)                /*!< PxMIS (Bitfield-Mask: 0xffff)                         */
#define GPIO_MSKINTSR_PxMIS                      GPIO_MSKINTSR_PxMIS_Msk
/* ========================================================  INTCLR  ========================================================= */
#define GPIO_INTCLR_PxICLR_Pos            (0UL)                     /*!< PxICLR (Bit 0)                                        */
#define GPIO_INTCLR_PxICLR_Msk            (0xffffUL)                /*!< PxICLR (Bitfield-Mask: 0xffff)                        */
#define GPIO_INTCLR_PxICLR                      GPIO_INTCLR_PxICLR_Msk
/* =======================================================  INTTYPCR  ======================================================== */
#define GPIO_INTTYPCR_PxITYPE_Pos         (0UL)                     /*!< PxITYPE (Bit 0)                                       */
#define GPIO_INTTYPCR_PxITYPE_Msk         (0xffffUL)                /*!< PxITYPE (Bitfield-Mask: 0xffff)                       */
#define GPIO_INTTYPCR_PxITYPE                      GPIO_INTTYPCR_PxITYPE_Msk
/* =======================================================  INTPOLCR  ======================================================== */
#define GPIO_INTPOLCR_PxIVAL_Pos          (0UL)                     /*!< PxIVAL (Bit 0)                                        */
#define GPIO_INTPOLCR_PxIVAL_Msk          (0xffffUL)                /*!< PxIVAL (Bitfield-Mask: 0xffff)                        */
#define GPIO_INTPOLCR_PxIVAL                      GPIO_INTPOLCR_PxIVAL_Msk
/* ========================================================  INTANY  ========================================================= */
#define GPIO_INTANY_PxIANY_Pos            (0UL)                     /*!< PxIANY (Bit 0)                                        */
#define GPIO_INTANY_PxIANY_Msk            (0xffffUL)                /*!< PxIANY (Bitfield-Mask: 0xffff)                        */
#define GPIO_INTANY_PxIANY                      GPIO_INTANY_PxIANY_Msk
/* =========================================================  ODSET  ========================================================= */
#define GPIO_ODSET_PxODSET_Pos            (0UL)                     /*!< PxODSET (Bit 0)                                       */
#define GPIO_ODSET_PxODSET_Msk            (0xffffUL)                /*!< PxODSET (Bitfield-Mask: 0xffff)                       */
#define GPIO_ODSET_PxODSET                      GPIO_ODSET_PxODSET_Msk
/* =========================================================  ODCLR  ========================================================= */
#define GPIO_ODCLR_PxODCLR_Pos            (0UL)                     /*!< PxODCLR (Bit 0)                                       */
#define GPIO_ODCLR_PxODCLR_Msk            (0xffffUL)                /*!< PxODCLR (Bitfield-Mask: 0xffff)                       */
#define GPIO_ODCLR_PxODCLR                      GPIO_ODCLR_PxODCLR_Msk
/* ========================================================  INDBEN  ========================================================= */
#define GPIO_INDBEN_PxDIDB_Pos            (0UL)                     /*!< PxDIDB (Bit 0)                                        */
#define GPIO_INDBEN_PxDIDB_Msk            (0xffffUL)                /*!< PxDIDB (Bitfield-Mask: 0xffff)                        */
#define GPIO_INDBEN_PxDIDB                      GPIO_INDBEN_PxDIDB_Msk
#define GPIO_INDBEN_SYNC_EN_Pos           (31UL)                    /*!< SYNC_EN (Bit 31)                                      */
#define GPIO_INDBEN_SYNC_EN_Msk           (0x80000000UL)            /*!< SYNC_EN (Bitfield-Mask: 0x01)                         */
#define GPIO_INDBEN_SYNC_EN                      GPIO_INDBEN_SYNC_EN_Msk
/* ========================================================  DBCLKCR  ======================================================== */
#define GPIO_DBCLKCR_DBCLK_DIV_Pos        (0UL)                     /*!< DBCLK_DIV (Bit 0)                                     */
#define GPIO_DBCLKCR_DBCLK_DIV_Msk        (0xfUL)                   /*!< DBCLK_DIV (Bitfield-Mask: 0x0f)                       */
#define GPIO_DBCLKCR_DBCLK_DIV                      GPIO_DBCLKCR_DBCLK_DIV_Msk
#define GPIO_DBCLKCR_DBCLKEN_Pos          (4UL)                     /*!< DBCLKEN (Bit 4)                                       */
#define GPIO_DBCLKCR_DBCLKEN_Msk          (0x10UL)                  /*!< DBCLKEN (Bitfield-Mask: 0x01)                         */
#define GPIO_DBCLKCR_DBCLKEN                      GPIO_DBCLKCR_DBCLKEN_Msk
/* =========================================================  PUPDR  ========================================================= */
#define GPIO_PUPDR_PxPUPD15_Pos           (30UL)                    /*!< PxPUPD15 (Bit 30)                                     */
#define GPIO_PUPDR_PxPUPD15_Msk           (0xc0000000UL)            /*!< PxPUPD15 (Bitfield-Mask: 0x03)                        */
#define GPIO_PUPDR_PxPUPD15                      GPIO_PUPDR_PxPUPD15_Msk
#define GPIO_PUPDR_PxPUPD14_Pos           (28UL)                    /*!< PxPUPD14 (Bit 28)                                     */
#define GPIO_PUPDR_PxPUPD14_Msk           (0x30000000UL)            /*!< PxPUPD14 (Bitfield-Mask: 0x03)                        */
#define GPIO_PUPDR_PxPUPD14                      GPIO_PUPDR_PxPUPD14_Msk
#define GPIO_PUPDR_PxPUPD13_Pos           (26UL)                    /*!< PxPUPD13 (Bit 26)                                     */
#define GPIO_PUPDR_PxPUPD13_Msk           (0xc000000UL)             /*!< PxPUPD13 (Bitfield-Mask: 0x03)                        */
#define GPIO_PUPDR_PxPUPD13                      GPIO_PUPDR_PxPUPD13_Msk
#define GPIO_PUPDR_PxPUPD12_Pos           (24UL)                    /*!< PxPUPD12 (Bit 24)                                     */
#define GPIO_PUPDR_PxPUPD12_Msk           (0x3000000UL)             /*!< PxPUPD12 (Bitfield-Mask: 0x03)                        */
#define GPIO_PUPDR_PxPUPD12                      GPIO_PUPDR_PxPUPD12_Msk
#define GPIO_PUPDR_PxPUPD11_Pos           (22UL)                    /*!< PxPUPD11 (Bit 22)                                     */
#define GPIO_PUPDR_PxPUPD11_Msk           (0xc00000UL)              /*!< PxPUPD11 (Bitfield-Mask: 0x03)                        */
#define GPIO_PUPDR_PxPUPD11                      GPIO_PUPDR_PxPUPD11_Msk
#define GPIO_PUPDR_PxPUPD10_Pos           (20UL)                    /*!< PxPUPD10 (Bit 20)                                     */
#define GPIO_PUPDR_PxPUPD10_Msk           (0x300000UL)              /*!< PxPUPD10 (Bitfield-Mask: 0x03)                        */
#define GPIO_PUPDR_PxPUPD10                      GPIO_PUPDR_PxPUPD10_Msk
#define GPIO_PUPDR_PxPUPD9_Pos            (18UL)                    /*!< PxPUPD9 (Bit 18)                                      */
#define GPIO_PUPDR_PxPUPD9_Msk            (0xc0000UL)               /*!< PxPUPD9 (Bitfield-Mask: 0x03)                         */
#define GPIO_PUPDR_PxPUPD9                      GPIO_PUPDR_PxPUPD9_Msk
#define GPIO_PUPDR_PxPUPD8_Pos            (16UL)                    /*!< PxPUPD8 (Bit 16)                                      */
#define GPIO_PUPDR_PxPUPD8_Msk            (0x30000UL)               /*!< PxPUPD8 (Bitfield-Mask: 0x03)                         */
#define GPIO_PUPDR_PxPUPD8                      GPIO_PUPDR_PxPUPD8_Msk
#define GPIO_PUPDR_PxPUPD7_Pos            (14UL)                    /*!< PxPUPD7 (Bit 14)                                      */
#define GPIO_PUPDR_PxPUPD7_Msk            (0xc000UL)                /*!< PxPUPD7 (Bitfield-Mask: 0x03)                         */
#define GPIO_PUPDR_PxPUPD7                      GPIO_PUPDR_PxPUPD7_Msk
#define GPIO_PUPDR_PxPUPD6_Pos            (12UL)                    /*!< PxPUPD6 (Bit 12)                                      */
#define GPIO_PUPDR_PxPUPD6_Msk            (0x3000UL)                /*!< PxPUPD6 (Bitfield-Mask: 0x03)                         */
#define GPIO_PUPDR_PxPUPD6                      GPIO_PUPDR_PxPUPD6_Msk
#define GPIO_PUPDR_PxPUPD5_Pos            (10UL)                    /*!< PxPUPD5 (Bit 10)                                      */
#define GPIO_PUPDR_PxPUPD5_Msk            (0xc00UL)                 /*!< PxPUPD5 (Bitfield-Mask: 0x03)                         */
#define GPIO_PUPDR_PxPUPD5                      GPIO_PUPDR_PxPUPD5_Msk
#define GPIO_PUPDR_PxPUPD4_Pos            (8UL)                     /*!< PxPUPD4 (Bit 8)                                       */
#define GPIO_PUPDR_PxPUPD4_Msk            (0x300UL)                 /*!< PxPUPD4 (Bitfield-Mask: 0x03)                         */
#define GPIO_PUPDR_PxPUPD4                      GPIO_PUPDR_PxPUPD4_Msk
#define GPIO_PUPDR_PxPUPD3_Pos            (6UL)                     /*!< PxPUPD3 (Bit 6)                                       */
#define GPIO_PUPDR_PxPUPD3_Msk            (0xc0UL)                  /*!< PxPUPD3 (Bitfield-Mask: 0x03)                         */
#define GPIO_PUPDR_PxPUPD3                      GPIO_PUPDR_PxPUPD3_Msk
#define GPIO_PUPDR_PxPUPD2_Pos            (4UL)                     /*!< PxPUPD2 (Bit 4)                                       */
#define GPIO_PUPDR_PxPUPD2_Msk            (0x30UL)                  /*!< PxPUPD2 (Bitfield-Mask: 0x03)                         */
#define GPIO_PUPDR_PxPUPD2                      GPIO_PUPDR_PxPUPD2_Msk
#define GPIO_PUPDR_PxPUPD1_Pos            (2UL)                     /*!< PxPUPD1 (Bit 2)                                       */
#define GPIO_PUPDR_PxPUPD1_Msk            (0xcUL)                   /*!< PxPUPD1 (Bitfield-Mask: 0x03)                         */
#define GPIO_PUPDR_PxPUPD1                      GPIO_PUPDR_PxPUPD1_Msk
#define GPIO_PUPDR_PxPUPD0_Pos            (0UL)                     /*!< PxPUPD0 (Bit 0)                                       */
#define GPIO_PUPDR_PxPUPD0_Msk            (0x3UL)                   /*!< PxPUPD0 (Bitfield-Mask: 0x03)                         */
#define GPIO_PUPDR_PxPUPD0                      GPIO_PUPDR_PxPUPD0_Msk
/* ========================================================  SLEWCR  ========================================================= */
#define GPIO_SLEWCR_PxSR_Pos              (0UL)                     /*!< PxSR (Bit 0)                                          */
#define GPIO_SLEWCR_PxSR_Msk              (0xffffUL)                /*!< PxSR (Bitfield-Mask: 0xffff)                          */
#define GPIO_SLEWCR_PxSR                      GPIO_SLEWCR_PxSR_Msk
/* =========================================================  DRVCR  ========================================================= */
#define GPIO_DRVCR_PxDRV_Pos              (0UL)                     /*!< PxDRV (Bit 0)                                         */
#define GPIO_DRVCR_PxDRV_Msk              (0xffffUL)                /*!< PxDRV (Bitfield-Mask: 0xffff)                         */
#define GPIO_DRVCR_PxDRV                      GPIO_DRVCR_PxDRV_Msk
/* =========================================================  AFRL  ========================================================== */
#define GPIO_AFRL_PxAFR7_Pos              (28UL)                    /*!< PxAFR7 (Bit 28)                                       */
#define GPIO_AFRL_PxAFR7_Msk              (0xf0000000UL)            /*!< PxAFR7 (Bitfield-Mask: 0x0f)                          */
#define GPIO_AFRL_PxAFR7                      GPIO_AFRL_PxAFR7_Msk
#define GPIO_AFRL_PxAFR6_Pos              (24UL)                    /*!< PxAFR6 (Bit 24)                                       */
#define GPIO_AFRL_PxAFR6_Msk              (0xf000000UL)             /*!< PxAFR6 (Bitfield-Mask: 0x0f)                          */
#define GPIO_AFRL_PxAFR6                      GPIO_AFRL_PxAFR6_Msk
#define GPIO_AFRL_PxAFR5_Pos              (20UL)                    /*!< PxAFR5 (Bit 20)                                       */
#define GPIO_AFRL_PxAFR5_Msk              (0xf00000UL)              /*!< PxAFR5 (Bitfield-Mask: 0x0f)                          */
#define GPIO_AFRL_PxAFR5                      GPIO_AFRL_PxAFR5_Msk
#define GPIO_AFRL_PxAFR4_Pos              (16UL)                    /*!< PxAFR4 (Bit 16)                                       */
#define GPIO_AFRL_PxAFR4_Msk              (0xf0000UL)               /*!< PxAFR4 (Bitfield-Mask: 0x0f)                          */
#define GPIO_AFRL_PxAFR4                      GPIO_AFRL_PxAFR4_Msk
#define GPIO_AFRL_PxAFR3_Pos              (12UL)                    /*!< PxAFR3 (Bit 12)                                       */
#define GPIO_AFRL_PxAFR3_Msk              (0xf000UL)                /*!< PxAFR3 (Bitfield-Mask: 0x0f)                          */
#define GPIO_AFRL_PxAFR3                      GPIO_AFRL_PxAFR3_Msk
#define GPIO_AFRL_PxAFR2_Pos              (8UL)                     /*!< PxAFR2 (Bit 8)                                        */
#define GPIO_AFRL_PxAFR2_Msk              (0xf00UL)                 /*!< PxAFR2 (Bitfield-Mask: 0x0f)                          */
#define GPIO_AFRL_PxAFR2                      GPIO_AFRL_PxAFR2_Msk
#define GPIO_AFRL_PxAFR1_Pos              (4UL)                     /*!< PxAFR1 (Bit 4)                                        */
#define GPIO_AFRL_PxAFR1_Msk              (0xf0UL)                  /*!< PxAFR1 (Bitfield-Mask: 0x0f)                          */
#define GPIO_AFRL_PxAFR1                      GPIO_AFRL_PxAFR1_Msk
#define GPIO_AFRL_PxAFR0_Pos              (0UL)                     /*!< PxAFR0 (Bit 0)                                        */
#define GPIO_AFRL_PxAFR0_Msk              (0xfUL)                   /*!< PxAFR0 (Bitfield-Mask: 0x0f)                          */
#define GPIO_AFRL_PxAFR0                      GPIO_AFRL_PxAFR0_Msk
/* =========================================================  AFRH  ========================================================== */
#define GPIO_AFRH_PxAFR15_Pos             (28UL)                    /*!< PxAFR15 (Bit 28)                                      */
#define GPIO_AFRH_PxAFR15_Msk             (0xf0000000UL)            /*!< PxAFR15 (Bitfield-Mask: 0x0f)                         */
#define GPIO_AFRH_PxAFR15                      GPIO_AFRH_PxAFR15_Msk
#define GPIO_AFRH_PxAFR14_Pos             (24UL)                    /*!< PxAFR14 (Bit 24)                                      */
#define GPIO_AFRH_PxAFR14_Msk             (0xf000000UL)             /*!< PxAFR14 (Bitfield-Mask: 0x0f)                         */
#define GPIO_AFRH_PxAFR14                      GPIO_AFRH_PxAFR14_Msk
#define GPIO_AFRH_PxAFR13_Pos             (20UL)                    /*!< PxAFR13 (Bit 20)                                      */
#define GPIO_AFRH_PxAFR13_Msk             (0xf00000UL)              /*!< PxAFR13 (Bitfield-Mask: 0x0f)                         */
#define GPIO_AFRH_PxAFR13                      GPIO_AFRH_PxAFR13_Msk
#define GPIO_AFRH_PxAFR12_Pos             (16UL)                    /*!< PxAFR12 (Bit 16)                                      */
#define GPIO_AFRH_PxAFR12_Msk             (0xf0000UL)               /*!< PxAFR12 (Bitfield-Mask: 0x0f)                         */
#define GPIO_AFRH_PxAFR12                      GPIO_AFRH_PxAFR12_Msk
#define GPIO_AFRH_PxAFR11_Pos             (12UL)                    /*!< PxAFR11 (Bit 12)                                      */
#define GPIO_AFRH_PxAFR11_Msk             (0xf000UL)                /*!< PxAFR11 (Bitfield-Mask: 0x0f)                         */
#define GPIO_AFRH_PxAFR11                      GPIO_AFRH_PxAFR11_Msk
#define GPIO_AFRH_PxAFR10_Pos             (8UL)                     /*!< PxAFR10 (Bit 8)                                       */
#define GPIO_AFRH_PxAFR10_Msk             (0xf00UL)                 /*!< PxAFR10 (Bitfield-Mask: 0x0f)                         */
#define GPIO_AFRH_PxAFR10                      GPIO_AFRH_PxAFR10_Msk
#define GPIO_AFRH_PxAFR9_Pos              (4UL)                     /*!< PxAFR9 (Bit 4)                                        */
#define GPIO_AFRH_PxAFR9_Msk              (0xf0UL)                  /*!< PxAFR9 (Bitfield-Mask: 0x0f)                          */
#define GPIO_AFRH_PxAFR9                      GPIO_AFRH_PxAFR9_Msk
#define GPIO_AFRH_PxAFR8_Pos              (0UL)                     /*!< PxAFR8 (Bit 0)                                        */
#define GPIO_AFRH_PxAFR8_Msk              (0xfUL)                   /*!< PxAFR8 (Bitfield-Mask: 0x0f)                          */
#define GPIO_AFRH_PxAFR8                      GPIO_AFRH_PxAFR8_Msk


/* =========================================================================================================================== */
/* ================                                          OBYTES                                           ================ */
/* =========================================================================================================================== */

/* =======================================================  USERCFG0  ======================================================== */
#define OBYTES_USERCFG0_ISP_CON_Pos       (0UL)                     /*!< ISP_CON (Bit 0)                                       */
#define OBYTES_USERCFG0_ISP_CON_Msk       (0x1UL)                   /*!< ISP_CON (Bitfield-Mask: 0x01)                         */
#define OBYTES_USERCFG0_ISP_CON                      OBYTES_USERCFG0_ISP_CON_Msk
/* =======================================================  USERCFG1  ======================================================== */
#define OBYTES_USERCFG1_SWDP_Pos          (0UL)                     /*!< SWDP (Bit 0)                                          */
#define OBYTES_USERCFG1_SWDP_Msk          (0x1UL)                   /*!< SWDP (Bitfield-Mask: 0x01)                            */
#define OBYTES_USERCFG1_SWDP                      OBYTES_USERCFG1_SWDP_Msk
/* =======================================================  USERCFG2  ======================================================== */
#define OBYTES_USERCFG2_IWDGCNT_Pos       (0UL)                     /*!< IWDGCNT (Bit 0)                                       */
#define OBYTES_USERCFG2_IWDGCNT_Msk       (0xfffffUL)               /*!< IWDGCNT (Bitfield-Mask: 0xfffff)                      */
#define OBYTES_USERCFG2_IWDGCNT                      OBYTES_USERCFG2_IWDGCNT_Msk
#define OBYTES_USERCFG2_IWDGMODE_Pos      (28UL)                    /*!< IWDGMODE (Bit 28)                                     */
#define OBYTES_USERCFG2_IWDGMODE_Msk      (0x10000000UL)            /*!< IWDGMODE (Bitfield-Mask: 0x01)                        */
#define OBYTES_USERCFG2_IWDGMODE                      OBYTES_USERCFG2_IWDGMODE_Msk
#define OBYTES_USERCFG2_IWDGINTMASK_Pos   (29UL)                    /*!< IWDGINTMASK (Bit 29)                                  */
#define OBYTES_USERCFG2_IWDGINTMASK_Msk   (0x20000000UL)            /*!< IWDGINTMASK (Bitfield-Mask: 0x01)                     */
#define OBYTES_USERCFG2_IWDGINTMASK                      OBYTES_USERCFG2_IWDGINTMASK_Msk
#define OBYTES_USERCFG2_IWDGON_Pos        (31UL)                    /*!< IWDGON (Bit 31)                                       */
#define OBYTES_USERCFG2_IWDGON_Msk        (0x80000000UL)            /*!< IWDGON (Bitfield-Mask: 0x01)                          */
#define OBYTES_USERCFG2_IWDGON                      OBYTES_USERCFG2_IWDGON_Msk


/* =========================================================================================================================== */
/* ================                                          SYSCFG                                           ================ */
/* =========================================================================================================================== */

/* =======================================================  WORD0380  ======================================================== */
#define SYSCFG_WORD0380_FULLSIZE_Pos      (0UL)                     /*!< FULLSIZE (Bit 0)                                      */
#define SYSCFG_WORD0380_FULLSIZE_Msk      (0x1UL)                   /*!< FULLSIZE (Bitfield-Mask: 0x01)                        */
#define SYSCFG_WORD0380_FULLSIZE                      SYSCFG_WORD0380_FULLSIZE_Msk
/* =======================================================  WORD03A0  ======================================================== */
#define SYSCFG_WORD03A0_CP3_MARK_Pos      (0UL)                     /*!< CP3_MARK (Bit 0)                                      */
#define SYSCFG_WORD03A0_CP3_MARK_Msk      (0xffffffffUL)            /*!< CP3_MARK (Bitfield-Mask: 0xffffffff)                  */
#define SYSCFG_WORD03A0_CP3_MARK                      SYSCFG_WORD03A0_CP3_MARK_Msk
/* =======================================================  WORD03A1  ======================================================== */
#define SYSCFG_WORD03A1_FT_MARK_Pos       (0UL)                     /*!< FT_MARK (Bit 0)                                       */
#define SYSCFG_WORD03A1_FT_MARK_Msk       (0xffffffffUL)            /*!< FT_MARK (Bitfield-Mask: 0xffffffff)                   */
#define SYSCFG_WORD03A1_FT_MARK                      SYSCFG_WORD03A1_FT_MARK_Msk
/* =======================================================  WORD03A6  ======================================================== */
#define SYSCFG_WORD03A6_VCAP_3_3_Pos      (0UL)                     /*!< VCAP_3_3 (Bit 0)                                      */
#define SYSCFG_WORD03A6_VCAP_3_3_Msk      (0xffffUL)                /*!< VCAP_3_3 (Bitfield-Mask: 0xffff)                      */
#define SYSCFG_WORD03A6_VCAP_3_3                      SYSCFG_WORD03A6_VCAP_3_3_Msk
#define SYSCFG_WORD03A6_VCAP_5_55_Pos     (16UL)                    /*!< VCAP_5_55 (Bit 16)                                    */
#define SYSCFG_WORD03A6_VCAP_5_55_Msk     (0xffff0000UL)            /*!< VCAP_5_55 (Bitfield-Mask: 0xffff)                     */
#define SYSCFG_WORD03A6_VCAP_5_55                      SYSCFG_WORD03A6_VCAP_5_55_Msk
/* =======================================================  WORD03A8  ======================================================== */
#define SYSCFG_WORD03A8_HIRCTRIM24M_PKG_Pos (0UL)                   /*!< HIRCTRIM24M_PKG (Bit 0)                               */
#define SYSCFG_WORD03A8_HIRCTRIM24M_PKG_Msk (0xffffUL)              /*!< HIRCTRIM24M_PKG (Bitfield-Mask: 0xffff)               */
#define SYSCFG_WORD03A8_HIRCTRIM24M_PKG                      SYSCFG_WORD03A8_HIRCTRIM24M_PKG_Msk
#define SYSCFG_WORD03A8_HIRCTRIM22M_PKG_Pos (16UL)                  /*!< HIRCTRIM22M_PKG (Bit 16)                              */
#define SYSCFG_WORD03A8_HIRCTRIM22M_PKG_Msk (0xffff0000UL)          /*!< HIRCTRIM22M_PKG (Bitfield-Mask: 0xffff)               */
#define SYSCFG_WORD03A8_HIRCTRIM22M_PKG                      SYSCFG_WORD03A8_HIRCTRIM22M_PKG_Msk
/* =======================================================  WORD03A9  ======================================================== */
#define SYSCFG_WORD03A9_HIRC16M_PKG_Pos   (0UL)                     /*!< HIRC16M_PKG (Bit 0)                                   */
#define SYSCFG_WORD03A9_HIRC16M_PKG_Msk   (0xffffUL)                /*!< HIRC16M_PKG (Bitfield-Mask: 0xffff)                   */
#define SYSCFG_WORD03A9_HIRC16M_PKG                      SYSCFG_WORD03A9_HIRC16M_PKG_Msk
#define SYSCFG_WORD03A9_HIRCTRIM8M_PKG_Pos (16UL)                   /*!< HIRCTRIM8M_PKG (Bit 16)                               */
#define SYSCFG_WORD03A9_HIRCTRIM8M_PKG_Msk (0xffff0000UL)           /*!< HIRCTRIM8M_PKG (Bitfield-Mask: 0xffff)                */
#define SYSCFG_WORD03A9_HIRCTRIM8M_PKG                      SYSCFG_WORD03A9_HIRCTRIM8M_PKG_Msk
/* =======================================================  WORD03AA  ======================================================== */
#define SYSCFG_WORD03AA_HIRCTRIM4M_PKG_Pos (0UL)                    /*!< HIRCTRIM4M_PKG (Bit 0)                                */
#define SYSCFG_WORD03AA_HIRCTRIM4M_PKG_Msk (0xffffUL)               /*!< HIRCTRIM4M_PKG (Bitfield-Mask: 0xffff)                */
#define SYSCFG_WORD03AA_HIRCTRIM4M_PKG                      SYSCFG_WORD03AA_HIRCTRIM4M_PKG_Msk
/* =======================================================  WORD03AC  ======================================================== */
#define SYSCFG_WORD03AC_SIRCTRIM32K_PKG_Pos (0UL)                   /*!< SIRCTRIM32K_PKG (Bit 0)                               */
#define SYSCFG_WORD03AC_SIRCTRIM32K_PKG_Msk (0xffffUL)              /*!< SIRCTRIM32K_PKG (Bitfield-Mask: 0xffff)               */
#define SYSCFG_WORD03AC_SIRCTRIM32K_PKG                      SYSCFG_WORD03AC_SIRCTRIM32K_PKG_Msk
/* =======================================================  WORD03AD  ======================================================== */
#define SYSCFG_WORD03AD_SIRCTRIM38K_PKG_Pos (0UL)                   /*!< SIRCTRIM38K_PKG (Bit 0)                               */
#define SYSCFG_WORD03AD_SIRCTRIM38K_PKG_Msk (0xffffUL)              /*!< SIRCTRIM38K_PKG (Bitfield-Mask: 0xffff)               */
#define SYSCFG_WORD03AD_SIRCTRIM38K_PKG                      SYSCFG_WORD03AD_SIRCTRIM38K_PKG_Msk
/* =======================================================  WORD03B0  ======================================================== */
#define SYSCFG_WORD03B0_HIRCTRIM24M_KGD_Pos (0UL)                   /*!< HIRCTRIM24M_KGD (Bit 0)                               */
#define SYSCFG_WORD03B0_HIRCTRIM24M_KGD_Msk (0xffffUL)              /*!< HIRCTRIM24M_KGD (Bitfield-Mask: 0xffff)               */
#define SYSCFG_WORD03B0_HIRCTRIM24M_KGD                      SYSCFG_WORD03B0_HIRCTRIM24M_KGD_Msk
#define SYSCFG_WORD03B0_HIRCTRIM22M_KGD_Pos (16UL)                  /*!< HIRCTRIM22M_KGD (Bit 16)                              */
#define SYSCFG_WORD03B0_HIRCTRIM22M_KGD_Msk (0xffff0000UL)          /*!< HIRCTRIM22M_KGD (Bitfield-Mask: 0xffff)               */
#define SYSCFG_WORD03B0_HIRCTRIM22M_KGD                      SYSCFG_WORD03B0_HIRCTRIM22M_KGD_Msk
/* =======================================================  WORD03B1  ======================================================== */
#define SYSCFG_WORD03B1_HIRCTRIM16M_KGD_Pos (0UL)                   /*!< HIRCTRIM16M_KGD (Bit 0)                               */
#define SYSCFG_WORD03B1_HIRCTRIM16M_KGD_Msk (0xffffUL)              /*!< HIRCTRIM16M_KGD (Bitfield-Mask: 0xffff)               */
#define SYSCFG_WORD03B1_HIRCTRIM16M_KGD                      SYSCFG_WORD03B1_HIRCTRIM16M_KGD_Msk
#define SYSCFG_WORD03B1_HIRCTRIM8M_KGD_Pos (16UL)                   /*!< HIRCTRIM8M_KGD (Bit 16)                               */
#define SYSCFG_WORD03B1_HIRCTRIM8M_KGD_Msk (0xffff0000UL)           /*!< HIRCTRIM8M_KGD (Bitfield-Mask: 0xffff)                */
#define SYSCFG_WORD03B1_HIRCTRIM8M_KGD                      SYSCFG_WORD03B1_HIRCTRIM8M_KGD_Msk
/* =======================================================  WORD03B2  ======================================================== */
#define SYSCFG_WORD03B2_HIRCTRIM4M_KGD_Pos (0UL)                    /*!< HIRCTRIM4M_KGD (Bit 0)                                */
#define SYSCFG_WORD03B2_HIRCTRIM4M_KGD_Msk (0xffffUL)               /*!< HIRCTRIM4M_KGD (Bitfield-Mask: 0xffff)                */
#define SYSCFG_WORD03B2_HIRCTRIM4M_KGD                      SYSCFG_WORD03B2_HIRCTRIM4M_KGD_Msk
/* =======================================================  WORD03B4  ======================================================== */
#define SYSCFG_WORD03B4_SIRCTRIM32K_KGD_Pos (0UL)                   /*!< SIRCTRIM32K_KGD (Bit 0)                               */
#define SYSCFG_WORD03B4_SIRCTRIM32K_KGD_Msk (0xffffUL)              /*!< SIRCTRIM32K_KGD (Bitfield-Mask: 0xffff)               */
#define SYSCFG_WORD03B4_SIRCTRIM32K_KGD                      SYSCFG_WORD03B4_SIRCTRIM32K_KGD_Msk
/* =======================================================  WORD03B5  ======================================================== */
#define SYSCFG_WORD03B5_SIRCTRIM38K_KGD_Pos (0UL)                   /*!< SIRCTRIM38K_KGD (Bit 0)                               */
#define SYSCFG_WORD03B5_SIRCTRIM38K_KGD_Msk (0xffffUL)              /*!< SIRCTRIM38K_KGD (Bitfield-Mask: 0xffff)               */
#define SYSCFG_WORD03B5_SIRCTRIM38K_KGD                      SYSCFG_WORD03B5_SIRCTRIM38K_KGD_Msk
/* =======================================================  WORD03BC  ======================================================== */
#define SYSCFG_WORD03BC_UID0_Pos          (0UL)                     /*!< UID0 (Bit 0)                                          */
#define SYSCFG_WORD03BC_UID0_Msk          (0xffffffffUL)            /*!< UID0 (Bitfield-Mask: 0xffffffff)                      */
#define SYSCFG_WORD03BC_UID0                      SYSCFG_WORD03BC_UID0_Msk
/* =======================================================  WORD03BD  ======================================================== */
#define SYSCFG_WORD03BD_UID1_Pos          (0UL)                     /*!< UID1 (Bit 0)                                          */
#define SYSCFG_WORD03BD_UID1_Msk          (0xffffffffUL)            /*!< UID1 (Bitfield-Mask: 0xffffffff)                      */
#define SYSCFG_WORD03BD_UID1                      SYSCFG_WORD03BD_UID1_Msk
/* =======================================================  WORD03BE  ======================================================== */
#define SYSCFG_WORD03BE_UID2_Pos          (0UL)                     /*!< UID2 (Bit 0)                                          */
#define SYSCFG_WORD03BE_UID2_Msk          (0xffffffffUL)            /*!< UID2 (Bitfield-Mask: 0xffffffff)                      */
#define SYSCFG_WORD03BE_UID2                      SYSCFG_WORD03BE_UID2_Msk
/* =======================================================  WORD03BF  ======================================================== */
#define SYSCFG_WORD03BF_UID3_Pos          (0UL)                     /*!< UID3 (Bit 0)                                          */
#define SYSCFG_WORD03BF_UID3_Msk          (0xffffffffUL)            /*!< UID3 (Bitfield-Mask: 0xffffffff)                      */
#define SYSCFG_WORD03BF_UID3                      SYSCFG_WORD03BF_UID3_Msk


/* =========================================================================================================================== */
/* ================                                          SYSCON                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  CFGR0  ========================================================= */
#define SYSCON_CFGR0_LOCKUPEN_Pos         (0UL)                     /*!< LOCKUPEN (Bit 0)                                      */
#define SYSCON_CFGR0_LOCKUPEN_Msk         (0x1UL)                   /*!< LOCKUPEN (Bitfield-Mask: 0x01)                        */
#define SYSCON_CFGR0_LOCKUPEN                      SYSCON_CFGR0_LOCKUPEN_Msk
#define SYSCON_CFGR0_DBGDLSP_DIS_Pos      (1UL)                     /*!< DBGDLSP_DIS (Bit 1)                                   */
#define SYSCON_CFGR0_DBGDLSP_DIS_Msk      (0x2UL)                   /*!< DBGDLSP_DIS (Bitfield-Mask: 0x01)                     */
#define SYSCON_CFGR0_DBGDLSP_DIS                      SYSCON_CFGR0_DBGDLSP_DIS_Msk
#define SYSCON_CFGR0_KEY_Pos              (16UL)                    /*!< KEY (Bit 16)                                          */
#define SYSCON_CFGR0_KEY_Msk              (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define SYSCON_CFGR0_KEY                      SYSCON_CFGR0_KEY_Msk
/* =======================================================  PORTINTCR  ======================================================= */
#define SYSCON_PORTINTCR_PADINTSEL_Pos    (0UL)                     /*!< PADINTSEL (Bit 0)                                     */
#define SYSCON_PORTINTCR_PADINTSEL_Msk    (0x1UL)                   /*!< PADINTSEL (Bitfield-Mask: 0x01)                       */
#define SYSCON_PORTINTCR_PADINTSEL                      SYSCON_PORTINTCR_PADINTSEL_Msk
#define SYSCON_PORTINTCR_PADDLSPCON_Pos   (1UL)                     /*!< PADDLSPCON (Bit 1)                                    */
#define SYSCON_PORTINTCR_PADDLSPCON_Msk   (0x2UL)                   /*!< PADDLSPCON (Bitfield-Mask: 0x01)                      */
#define SYSCON_PORTINTCR_PADDLSPCON                      SYSCON_PORTINTCR_PADDLSPCON_Msk
#define SYSCON_PORTINTCR_KEY_Pos          (16UL)                    /*!< KEY (Bit 16)                                          */
#define SYSCON_PORTINTCR_KEY_Msk          (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define SYSCON_PORTINTCR_KEY                      SYSCON_PORTINTCR_KEY_Msk
/* ========================================================  PORTCR  ========================================================= */
#define SYSCON_PORTCR_SPISSN_SEL_Pos      (0UL)                     /*!< SPISSN_SEL (Bit 0)                                    */
#define SYSCON_PORTCR_SPISSN_SEL_Msk      (0xfUL)                   /*!< SPISSN_SEL (Bitfield-Mask: 0x0f)                      */
#define SYSCON_PORTCR_SPISSN_SEL                      SYSCON_PORTCR_SPISSN_SEL_Msk
#define SYSCON_PORTCR_TIM10_GATE_SEL_Pos  (4UL)                     /*!< TIM10_GATE_SEL (Bit 4)                                */
#define SYSCON_PORTCR_TIM10_GATE_SEL_Msk  (0x30UL)                  /*!< TIM10_GATE_SEL (Bitfield-Mask: 0x03)                  */
#define SYSCON_PORTCR_TIM10_GATE_SEL                      SYSCON_PORTCR_TIM10_GATE_SEL_Msk
#define SYSCON_PORTCR_TIM11_GATE_SEL_Pos  (6UL)                     /*!< TIM11_GATE_SEL (Bit 6)                                */
#define SYSCON_PORTCR_TIM11_GATE_SEL_Msk  (0xc0UL)                  /*!< TIM11_GATE_SEL (Bitfield-Mask: 0x03)                  */
#define SYSCON_PORTCR_TIM11_GATE_SEL                      SYSCON_PORTCR_TIM11_GATE_SEL_Msk
#define SYSCON_PORTCR_LPTIM_GATE_SEL_Pos  (8UL)                     /*!< LPTIM_GATE_SEL (Bit 8)                                */
#define SYSCON_PORTCR_LPTIM_GATE_SEL_Msk  (0x300UL)                 /*!< LPTIM_GATE_SEL (Bitfield-Mask: 0x03)                  */
#define SYSCON_PORTCR_LPTIM_GATE_SEL                      SYSCON_PORTCR_LPTIM_GATE_SEL_Msk
#define SYSCON_PORTCR_SPI1SSN_SEL_Pos     (10UL)                    /*!< SPI1SSN_SEL (Bit 10)                                  */
#define SYSCON_PORTCR_SPI1SSN_SEL_Msk     (0x3c00UL)                /*!< SPI1SSN_SEL (Bitfield-Mask: 0x0f)                     */
#define SYSCON_PORTCR_SPI1SSN_SEL                      SYSCON_PORTCR_SPI1SSN_SEL_Msk
/* =========================================================  PCACR  ========================================================= */
#define SYSCON_PCACR_PCA_CAP0_SEL_Pos     (0UL)                     /*!< PCA_CAP0_SEL (Bit 0)                                  */
#define SYSCON_PCACR_PCA_CAP0_SEL_Msk     (0x3UL)                   /*!< PCA_CAP0_SEL (Bitfield-Mask: 0x03)                    */
#define SYSCON_PCACR_PCA_CAP0_SEL                      SYSCON_PCACR_PCA_CAP0_SEL_Msk
#define SYSCON_PCACR_PCA_CAP1_SEL_Pos     (2UL)                     /*!< PCA_CAP1_SEL (Bit 2)                                  */
#define SYSCON_PCACR_PCA_CAP1_SEL_Msk     (0xcUL)                   /*!< PCA_CAP1_SEL (Bitfield-Mask: 0x03)                    */
#define SYSCON_PCACR_PCA_CAP1_SEL                      SYSCON_PCACR_PCA_CAP1_SEL_Msk
#define SYSCON_PCACR_PCA_CAP2_SEL_Pos     (4UL)                     /*!< PCA_CAP2_SEL (Bit 4)                                  */
#define SYSCON_PCACR_PCA_CAP2_SEL_Msk     (0x30UL)                  /*!< PCA_CAP2_SEL (Bitfield-Mask: 0x03)                    */
#define SYSCON_PCACR_PCA_CAP2_SEL                      SYSCON_PCACR_PCA_CAP2_SEL_Msk
#define SYSCON_PCACR_PCA_CAP3_SEL_Pos     (6UL)                     /*!< PCA_CAP3_SEL (Bit 6)                                  */
#define SYSCON_PCACR_PCA_CAP3_SEL_Msk     (0xc0UL)                  /*!< PCA_CAP3_SEL (Bitfield-Mask: 0x03)                    */
#define SYSCON_PCACR_PCA_CAP3_SEL                      SYSCON_PCACR_PCA_CAP3_SEL_Msk
#define SYSCON_PCACR_PCA_CAP4_SEL_Pos     (8UL)                     /*!< PCA_CAP4_SEL (Bit 8)                                  */
#define SYSCON_PCACR_PCA_CAP4_SEL_Msk     (0x300UL)                 /*!< PCA_CAP4_SEL (Bitfield-Mask: 0x03)                    */
#define SYSCON_PCACR_PCA_CAP4_SEL                      SYSCON_PCACR_PCA_CAP4_SEL_Msk
/* ========================================================  TIM1CR  ========================================================= */
#define SYSCON_TIM1CR_TIM1XCH1IN_SEL_Pos  (0UL)                     /*!< TIM1XCH1IN_SEL (Bit 0)                                */
#define SYSCON_TIM1CR_TIM1XCH1IN_SEL_Msk  (0x7UL)                   /*!< TIM1XCH1IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM1CR_TIM1XCH1IN_SEL                      SYSCON_TIM1CR_TIM1XCH1IN_SEL_Msk
#define SYSCON_TIM1CR_TIM1XCH2IN_SEL_Pos  (4UL)                     /*!< TIM1XCH2IN_SEL (Bit 4)                                */
#define SYSCON_TIM1CR_TIM1XCH2IN_SEL_Msk  (0x70UL)                  /*!< TIM1XCH2IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM1CR_TIM1XCH2IN_SEL                      SYSCON_TIM1CR_TIM1XCH2IN_SEL_Msk
#define SYSCON_TIM1CR_TIM1XCH3IN_SEL_Pos  (8UL)                     /*!< TIM1XCH3IN_SEL (Bit 8)                                */
#define SYSCON_TIM1CR_TIM1XCH3IN_SEL_Msk  (0x700UL)                 /*!< TIM1XCH3IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM1CR_TIM1XCH3IN_SEL                      SYSCON_TIM1CR_TIM1XCH3IN_SEL_Msk
#define SYSCON_TIM1CR_TIM1XCH4IN_SEL_Pos  (12UL)                    /*!< TIM1XCH4IN_SEL (Bit 12)                               */
#define SYSCON_TIM1CR_TIM1XCH4IN_SEL_Msk  (0x7000UL)                /*!< TIM1XCH4IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM1CR_TIM1XCH4IN_SEL                      SYSCON_TIM1CR_TIM1XCH4IN_SEL_Msk
#define SYSCON_TIM1CR_TIM1XETR_SEL_Pos    (16UL)                    /*!< TIM1XETR_SEL (Bit 16)                                 */
#define SYSCON_TIM1CR_TIM1XETR_SEL_Msk    (0xf0000UL)               /*!< TIM1XETR_SEL (Bitfield-Mask: 0x0f)                    */
#define SYSCON_TIM1CR_TIM1XETR_SEL                      SYSCON_TIM1CR_TIM1XETR_SEL_Msk
#define SYSCON_TIM1CR_TIM1XBRKOUTCFG_Pos  (20UL)                    /*!< TIM1XBRKOUTCFG (Bit 20)                               */
#define SYSCON_TIM1CR_TIM1XBRKOUTCFG_Msk  (0x100000UL)              /*!< TIM1XBRKOUTCFG (Bitfield-Mask: 0x01)                  */
#define SYSCON_TIM1CR_TIM1XBRKOUTCFG                      SYSCON_TIM1CR_TIM1XBRKOUTCFG_Msk
#define SYSCON_TIM1CR_TIM1XDSLPBRKEN_Pos  (21UL)                    /*!< TIM1XDSLPBRKEN (Bit 21)                               */
#define SYSCON_TIM1CR_TIM1XDSLPBRKEN_Msk  (0x200000UL)              /*!< TIM1XDSLPBRKEN (Bitfield-Mask: 0x01)                  */
#define SYSCON_TIM1CR_TIM1XDSLPBRKEN                      SYSCON_TIM1CR_TIM1XDSLPBRKEN_Msk
#define SYSCON_TIM1CR_TIM1XCLKFAILBRKEN_Pos (22UL)                  /*!< TIM1XCLKFAILBRKEN (Bit 22)                            */
#define SYSCON_TIM1CR_TIM1XCLKFAILBRKEN_Msk (0x400000UL)            /*!< TIM1XCLKFAILBRKEN (Bitfield-Mask: 0x01)               */
#define SYSCON_TIM1CR_TIM1XCLKFAILBRKEN                      SYSCON_TIM1CR_TIM1XCLKFAILBRKEN_Msk
/* ========================================================  TIM1ACR  ======================================================== */
#define SYSCON_TIM1ACR_TIM1XCH1IN_SEL_Pos (0UL)                     /*!< TIM1XCH1IN_SEL (Bit 0)                                */
#define SYSCON_TIM1ACR_TIM1XCH1IN_SEL_Msk (0x7UL)                   /*!< TIM1XCH1IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM1ACR_TIM1XCH1IN_SEL                      SYSCON_TIM1ACR_TIM1XCH1IN_SEL_Msk
#define SYSCON_TIM1ACR_TIM1XCH2IN_SEL_Pos (4UL)                     /*!< TIM1XCH2IN_SEL (Bit 4)                                */
#define SYSCON_TIM1ACR_TIM1XCH2IN_SEL_Msk (0x70UL)                  /*!< TIM1XCH2IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM1ACR_TIM1XCH2IN_SEL                      SYSCON_TIM1ACR_TIM1XCH2IN_SEL_Msk
#define SYSCON_TIM1ACR_TIM1XCH3IN_SEL_Pos (8UL)                     /*!< TIM1XCH3IN_SEL (Bit 8)                                */
#define SYSCON_TIM1ACR_TIM1XCH3IN_SEL_Msk (0x700UL)                 /*!< TIM1XCH3IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM1ACR_TIM1XCH3IN_SEL                      SYSCON_TIM1ACR_TIM1XCH3IN_SEL_Msk
#define SYSCON_TIM1ACR_TIM1XCH4IN_SEL_Pos (12UL)                    /*!< TIM1XCH4IN_SEL (Bit 12)                               */
#define SYSCON_TIM1ACR_TIM1XCH4IN_SEL_Msk (0x7000UL)                /*!< TIM1XCH4IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM1ACR_TIM1XCH4IN_SEL                      SYSCON_TIM1ACR_TIM1XCH4IN_SEL_Msk
#define SYSCON_TIM1ACR_TIM1XETR_SEL_Pos   (16UL)                    /*!< TIM1XETR_SEL (Bit 16)                                 */
#define SYSCON_TIM1ACR_TIM1XETR_SEL_Msk   (0xf0000UL)               /*!< TIM1XETR_SEL (Bitfield-Mask: 0x0f)                    */
#define SYSCON_TIM1ACR_TIM1XETR_SEL                      SYSCON_TIM1ACR_TIM1XETR_SEL_Msk
#define SYSCON_TIM1ACR_TIM1XBRKOUTCFG_Pos (20UL)                    /*!< TIM1XBRKOUTCFG (Bit 20)                               */
#define SYSCON_TIM1ACR_TIM1XBRKOUTCFG_Msk (0x100000UL)              /*!< TIM1XBRKOUTCFG (Bitfield-Mask: 0x01)                  */
#define SYSCON_TIM1ACR_TIM1XBRKOUTCFG                      SYSCON_TIM1ACR_TIM1XBRKOUTCFG_Msk
#define SYSCON_TIM1ACR_TIM1XDSLPBRKEN_Pos (21UL)                    /*!< TIM1XDSLPBRKEN (Bit 21)                               */
#define SYSCON_TIM1ACR_TIM1XDSLPBRKEN_Msk (0x200000UL)              /*!< TIM1XDSLPBRKEN (Bitfield-Mask: 0x01)                  */
#define SYSCON_TIM1ACR_TIM1XDSLPBRKEN                      SYSCON_TIM1ACR_TIM1XDSLPBRKEN_Msk
#define SYSCON_TIM1ACR_TIM1XCLKFAILBRKEN_Pos (22UL)                 /*!< TIM1XCLKFAILBRKEN (Bit 22)                            */
#define SYSCON_TIM1ACR_TIM1XCLKFAILBRKEN_Msk (0x400000UL)           /*!< TIM1XCLKFAILBRKEN (Bitfield-Mask: 0x01)               */
#define SYSCON_TIM1ACR_TIM1XCLKFAILBRKEN                      SYSCON_TIM1ACR_TIM1XCLKFAILBRKEN_Msk
/* ========================================================  TIM1BCR  ======================================================== */
#define SYSCON_TIM1BCR_TIM1XCH1IN_SEL_Pos (0UL)                     /*!< TIM1XCH1IN_SEL (Bit 0)                                */
#define SYSCON_TIM1BCR_TIM1XCH1IN_SEL_Msk (0x7UL)                   /*!< TIM1XCH1IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM1BCR_TIM1XCH1IN_SEL                      SYSCON_TIM1BCR_TIM1XCH1IN_SEL_Msk
#define SYSCON_TIM1BCR_TIM1XCH2IN_SEL_Pos (4UL)                     /*!< TIM1XCH2IN_SEL (Bit 4)                                */
#define SYSCON_TIM1BCR_TIM1XCH2IN_SEL_Msk (0x70UL)                  /*!< TIM1XCH2IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM1BCR_TIM1XCH2IN_SEL                      SYSCON_TIM1BCR_TIM1XCH2IN_SEL_Msk
#define SYSCON_TIM1BCR_TIM1XCH3IN_SEL_Pos (8UL)                     /*!< TIM1XCH3IN_SEL (Bit 8)                                */
#define SYSCON_TIM1BCR_TIM1XCH3IN_SEL_Msk (0x700UL)                 /*!< TIM1XCH3IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM1BCR_TIM1XCH3IN_SEL                      SYSCON_TIM1BCR_TIM1XCH3IN_SEL_Msk
#define SYSCON_TIM1BCR_TIM1XCH4IN_SEL_Pos (12UL)                    /*!< TIM1XCH4IN_SEL (Bit 12)                               */
#define SYSCON_TIM1BCR_TIM1XCH4IN_SEL_Msk (0x7000UL)                /*!< TIM1XCH4IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM1BCR_TIM1XCH4IN_SEL                      SYSCON_TIM1BCR_TIM1XCH4IN_SEL_Msk
#define SYSCON_TIM1BCR_TIM1XETR_SEL_Pos   (16UL)                    /*!< TIM1XETR_SEL (Bit 16)                                 */
#define SYSCON_TIM1BCR_TIM1XETR_SEL_Msk   (0xf0000UL)               /*!< TIM1XETR_SEL (Bitfield-Mask: 0x0f)                    */
#define SYSCON_TIM1BCR_TIM1XETR_SEL                      SYSCON_TIM1BCR_TIM1XETR_SEL_Msk
#define SYSCON_TIM1BCR_TIM1XBRKOUTCFG_Pos (20UL)                    /*!< TIM1XBRKOUTCFG (Bit 20)                               */
#define SYSCON_TIM1BCR_TIM1XBRKOUTCFG_Msk (0x100000UL)              /*!< TIM1XBRKOUTCFG (Bitfield-Mask: 0x01)                  */
#define SYSCON_TIM1BCR_TIM1XBRKOUTCFG                      SYSCON_TIM1BCR_TIM1XBRKOUTCFG_Msk
#define SYSCON_TIM1BCR_TIM1XDSLPBRKEN_Pos (21UL)                    /*!< TIM1XDSLPBRKEN (Bit 21)                               */
#define SYSCON_TIM1BCR_TIM1XDSLPBRKEN_Msk (0x200000UL)              /*!< TIM1XDSLPBRKEN (Bitfield-Mask: 0x01)                  */
#define SYSCON_TIM1BCR_TIM1XDSLPBRKEN                      SYSCON_TIM1BCR_TIM1XDSLPBRKEN_Msk
#define SYSCON_TIM1BCR_TIM1XCLKFAILBRKEN_Pos (22UL)                 /*!< TIM1XCLKFAILBRKEN (Bit 22)                            */
#define SYSCON_TIM1BCR_TIM1XCLKFAILBRKEN_Msk (0x400000UL)           /*!< TIM1XCLKFAILBRKEN (Bitfield-Mask: 0x01)               */
#define SYSCON_TIM1BCR_TIM1XCLKFAILBRKEN                      SYSCON_TIM1BCR_TIM1XCLKFAILBRKEN_Msk
/* ========================================================  TIM2CR  ========================================================= */
#define SYSCON_TIM2CR_TIM2XCH1IN_SEL_Pos  (0UL)                     /*!< TIM2XCH1IN_SEL (Bit 0)                                */
#define SYSCON_TIM2CR_TIM2XCH1IN_SEL_Msk  (0x7UL)                   /*!< TIM2XCH1IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2CR_TIM2XCH1IN_SEL                      SYSCON_TIM2CR_TIM2XCH1IN_SEL_Msk
#define SYSCON_TIM2CR_TIM2XCH2IN_SEL_Pos  (4UL)                     /*!< TIM2XCH2IN_SEL (Bit 4)                                */
#define SYSCON_TIM2CR_TIM2XCH2IN_SEL_Msk  (0x70UL)                  /*!< TIM2XCH2IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2CR_TIM2XCH2IN_SEL                      SYSCON_TIM2CR_TIM2XCH2IN_SEL_Msk
#define SYSCON_TIM2CR_TIM2XCH3IN_SEL_Pos  (8UL)                     /*!< TIM2XCH3IN_SEL (Bit 8)                                */
#define SYSCON_TIM2CR_TIM2XCH3IN_SEL_Msk  (0x700UL)                 /*!< TIM2XCH3IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2CR_TIM2XCH3IN_SEL                      SYSCON_TIM2CR_TIM2XCH3IN_SEL_Msk
#define SYSCON_TIM2CR_TIM2XCH4IN_SEL_Pos  (12UL)                    /*!< TIM2XCH4IN_SEL (Bit 12)                               */
#define SYSCON_TIM2CR_TIM2XCH4IN_SEL_Msk  (0x7000UL)                /*!< TIM2XCH4IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2CR_TIM2XCH4IN_SEL                      SYSCON_TIM2CR_TIM2XCH4IN_SEL_Msk
#define SYSCON_TIM2CR_TIM2XETR_SEL_Pos    (16UL)                    /*!< TIM2XETR_SEL (Bit 16)                                 */
#define SYSCON_TIM2CR_TIM2XETR_SEL_Msk    (0xf0000UL)               /*!< TIM2XETR_SEL (Bitfield-Mask: 0x0f)                    */
#define SYSCON_TIM2CR_TIM2XETR_SEL                      SYSCON_TIM2CR_TIM2XETR_SEL_Msk
/* ========================================================  TIM2ACR  ======================================================== */
#define SYSCON_TIM2ACR_TIM2XCH1IN_SEL_Pos (0UL)                     /*!< TIM2XCH1IN_SEL (Bit 0)                                */
#define SYSCON_TIM2ACR_TIM2XCH1IN_SEL_Msk (0x7UL)                   /*!< TIM2XCH1IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2ACR_TIM2XCH1IN_SEL                      SYSCON_TIM2ACR_TIM2XCH1IN_SEL_Msk
#define SYSCON_TIM2ACR_TIM2XCH2IN_SEL_Pos (4UL)                     /*!< TIM2XCH2IN_SEL (Bit 4)                                */
#define SYSCON_TIM2ACR_TIM2XCH2IN_SEL_Msk (0x70UL)                  /*!< TIM2XCH2IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2ACR_TIM2XCH2IN_SEL                      SYSCON_TIM2ACR_TIM2XCH2IN_SEL_Msk
#define SYSCON_TIM2ACR_TIM2XCH3IN_SEL_Pos (8UL)                     /*!< TIM2XCH3IN_SEL (Bit 8)                                */
#define SYSCON_TIM2ACR_TIM2XCH3IN_SEL_Msk (0x700UL)                 /*!< TIM2XCH3IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2ACR_TIM2XCH3IN_SEL                      SYSCON_TIM2ACR_TIM2XCH3IN_SEL_Msk
#define SYSCON_TIM2ACR_TIM2XCH4IN_SEL_Pos (12UL)                    /*!< TIM2XCH4IN_SEL (Bit 12)                               */
#define SYSCON_TIM2ACR_TIM2XCH4IN_SEL_Msk (0x7000UL)                /*!< TIM2XCH4IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2ACR_TIM2XCH4IN_SEL                      SYSCON_TIM2ACR_TIM2XCH4IN_SEL_Msk
#define SYSCON_TIM2ACR_TIM2XETR_SEL_Pos   (16UL)                    /*!< TIM2XETR_SEL (Bit 16)                                 */
#define SYSCON_TIM2ACR_TIM2XETR_SEL_Msk   (0xf0000UL)               /*!< TIM2XETR_SEL (Bitfield-Mask: 0x0f)                    */
#define SYSCON_TIM2ACR_TIM2XETR_SEL                      SYSCON_TIM2ACR_TIM2XETR_SEL_Msk
/* ========================================================  TIM2BCR  ======================================================== */
#define SYSCON_TIM2BCR_TIM2XCH1IN_SEL_Pos (0UL)                     /*!< TIM2XCH1IN_SEL (Bit 0)                                */
#define SYSCON_TIM2BCR_TIM2XCH1IN_SEL_Msk (0x7UL)                   /*!< TIM2XCH1IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2BCR_TIM2XCH1IN_SEL                      SYSCON_TIM2BCR_TIM2XCH1IN_SEL_Msk
#define SYSCON_TIM2BCR_TIM2XCH2IN_SEL_Pos (4UL)                     /*!< TIM2XCH2IN_SEL (Bit 4)                                */
#define SYSCON_TIM2BCR_TIM2XCH2IN_SEL_Msk (0x70UL)                  /*!< TIM2XCH2IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2BCR_TIM2XCH2IN_SEL                      SYSCON_TIM2BCR_TIM2XCH2IN_SEL_Msk
#define SYSCON_TIM2BCR_TIM2XCH3IN_SEL_Pos (8UL)                     /*!< TIM2XCH3IN_SEL (Bit 8)                                */
#define SYSCON_TIM2BCR_TIM2XCH3IN_SEL_Msk (0x700UL)                 /*!< TIM2XCH3IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2BCR_TIM2XCH3IN_SEL                      SYSCON_TIM2BCR_TIM2XCH3IN_SEL_Msk
#define SYSCON_TIM2BCR_TIM2XCH4IN_SEL_Pos (12UL)                    /*!< TIM2XCH4IN_SEL (Bit 12)                               */
#define SYSCON_TIM2BCR_TIM2XCH4IN_SEL_Msk (0x7000UL)                /*!< TIM2XCH4IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2BCR_TIM2XCH4IN_SEL                      SYSCON_TIM2BCR_TIM2XCH4IN_SEL_Msk
#define SYSCON_TIM2BCR_TIM2XETR_SEL_Pos   (16UL)                    /*!< TIM2XETR_SEL (Bit 16)                                 */
#define SYSCON_TIM2BCR_TIM2XETR_SEL_Msk   (0xf0000UL)               /*!< TIM2XETR_SEL (Bitfield-Mask: 0x0f)                    */
#define SYSCON_TIM2BCR_TIM2XETR_SEL                      SYSCON_TIM2BCR_TIM2XETR_SEL_Msk
/* ========================================================  TIM2CCR  ======================================================== */
#define SYSCON_TIM2CCR_TIM2XCH1IN_SEL_Pos (0UL)                     /*!< TIM2XCH1IN_SEL (Bit 0)                                */
#define SYSCON_TIM2CCR_TIM2XCH1IN_SEL_Msk (0x7UL)                   /*!< TIM2XCH1IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2CCR_TIM2XCH1IN_SEL                      SYSCON_TIM2CCR_TIM2XCH1IN_SEL_Msk
#define SYSCON_TIM2CCR_TIM2XCH2IN_SEL_Pos (4UL)                     /*!< TIM2XCH2IN_SEL (Bit 4)                                */
#define SYSCON_TIM2CCR_TIM2XCH2IN_SEL_Msk (0x70UL)                  /*!< TIM2XCH2IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2CCR_TIM2XCH2IN_SEL                      SYSCON_TIM2CCR_TIM2XCH2IN_SEL_Msk
#define SYSCON_TIM2CCR_TIM2XCH3IN_SEL_Pos (8UL)                     /*!< TIM2XCH3IN_SEL (Bit 8)                                */
#define SYSCON_TIM2CCR_TIM2XCH3IN_SEL_Msk (0x700UL)                 /*!< TIM2XCH3IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2CCR_TIM2XCH3IN_SEL                      SYSCON_TIM2CCR_TIM2XCH3IN_SEL_Msk
#define SYSCON_TIM2CCR_TIM2XCH4IN_SEL_Pos (12UL)                    /*!< TIM2XCH4IN_SEL (Bit 12)                               */
#define SYSCON_TIM2CCR_TIM2XCH4IN_SEL_Msk (0x7000UL)                /*!< TIM2XCH4IN_SEL (Bitfield-Mask: 0x07)                  */
#define SYSCON_TIM2CCR_TIM2XCH4IN_SEL                      SYSCON_TIM2CCR_TIM2XCH4IN_SEL_Msk
#define SYSCON_TIM2CCR_TIM2XETR_SEL_Pos   (16UL)                    /*!< TIM2XETR_SEL (Bit 16)                                 */
#define SYSCON_TIM2CCR_TIM2XETR_SEL_Msk   (0xf0000UL)               /*!< TIM2XETR_SEL (Bitfield-Mask: 0x0f)                    */
#define SYSCON_TIM2CCR_TIM2XETR_SEL                      SYSCON_TIM2CCR_TIM2XETR_SEL_Msk
/* ========================================================  UNLOCK  ========================================================= */
#define SYSCON_UNLOCK_UNLOCK_Pos          (0UL)                     /*!< UNLOCK (Bit 0)                                        */
#define SYSCON_UNLOCK_UNLOCK_Msk          (0x1UL)                   /*!< UNLOCK (Bitfield-Mask: 0x01)                          */
#define SYSCON_UNLOCK_UNLOCK                      SYSCON_UNLOCK_UNLOCK_Msk
#define SYSCON_UNLOCK_KEY_Pos             (1UL)                     /*!< KEY (Bit 1)                                           */
#define SYSCON_UNLOCK_KEY_Msk             (0xfffffffeUL)            /*!< KEY (Bitfield-Mask: 0x7fffffff)                       */
#define SYSCON_UNLOCK_KEY                      SYSCON_UNLOCK_KEY_Msk


/* =========================================================================================================================== */
/* ================                                            RCC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  HCLKDIV  ======================================================== */
#define RCC_HCLKDIV_AHBCKDIV_Pos          (0UL)                     /*!< AHBCKDIV (Bit 0)                                      */
#define RCC_HCLKDIV_AHBCKDIV_Msk          (0xffUL)                  /*!< AHBCKDIV (Bitfield-Mask: 0xff)                        */
#define RCC_HCLKDIV_AHBCKDIV                      RCC_HCLKDIV_AHBCKDIV_Msk
/* ========================================================  PCLKDIV  ======================================================== */
#define RCC_PCLKDIV_APBCKDIV_Pos          (0UL)                     /*!< APBCKDIV (Bit 0)                                      */
#define RCC_PCLKDIV_APBCKDIV_Msk          (0xffUL)                  /*!< APBCKDIV (Bitfield-Mask: 0xff)                        */
#define RCC_PCLKDIV_APBCKDIV                      RCC_PCLKDIV_APBCKDIV_Msk
/* ========================================================  HCLKEN  ========================================================= */
#define RCC_HCLKEN_GPIOACKEN_Pos          (0UL)                     /*!< GPIOACKEN (Bit 0)                                     */
#define RCC_HCLKEN_GPIOACKEN_Msk          (0x1UL)                   /*!< GPIOACKEN (Bitfield-Mask: 0x01)                       */
#define RCC_HCLKEN_GPIOACKEN                      RCC_HCLKEN_GPIOACKEN_Msk
#define RCC_HCLKEN_GPIOBCKEN_Pos          (1UL)                     /*!< GPIOBCKEN (Bit 1)                                     */
#define RCC_HCLKEN_GPIOBCKEN_Msk          (0x2UL)                   /*!< GPIOBCKEN (Bitfield-Mask: 0x01)                       */
#define RCC_HCLKEN_GPIOBCKEN                      RCC_HCLKEN_GPIOBCKEN_Msk
#define RCC_HCLKEN_GPIOCCKEN_Pos          (2UL)                     /*!< GPIOCCKEN (Bit 2)                                     */
#define RCC_HCLKEN_GPIOCCKEN_Msk          (0x4UL)                   /*!< GPIOCCKEN (Bitfield-Mask: 0x01)                       */
#define RCC_HCLKEN_GPIOCCKEN                      RCC_HCLKEN_GPIOCCKEN_Msk
#define RCC_HCLKEN_GPIODCKEN_Pos          (3UL)                     /*!< GPIODCKEN (Bit 3)                                     */
#define RCC_HCLKEN_GPIODCKEN_Msk          (0x8UL)                   /*!< GPIODCKEN (Bitfield-Mask: 0x01)                       */
#define RCC_HCLKEN_GPIODCKEN                      RCC_HCLKEN_GPIODCKEN_Msk
#define RCC_HCLKEN_CRCCKEN_Pos            (4UL)                     /*!< CRCCKEN (Bit 4)                                       */
#define RCC_HCLKEN_CRCCKEN_Msk            (0x10UL)                  /*!< CRCCKEN (Bitfield-Mask: 0x01)                         */
#define RCC_HCLKEN_CRCCKEN                      RCC_HCLKEN_CRCCKEN_Msk
#define RCC_HCLKEN_FLASHCKEN_Pos          (8UL)                     /*!< FLASHCKEN (Bit 8)                                     */
#define RCC_HCLKEN_FLASHCKEN_Msk          (0x100UL)                 /*!< FLASHCKEN (Bitfield-Mask: 0x01)                       */
#define RCC_HCLKEN_FLASHCKEN                      RCC_HCLKEN_FLASHCKEN_Msk
/* ========================================================  PCLKEN  ========================================================= */
#define RCC_PCLKEN_UART0CKEN_Pos          (0UL)                     /*!< UART0CKEN (Bit 0)                                     */
#define RCC_PCLKEN_UART0CKEN_Msk          (0x1UL)                   /*!< UART0CKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_UART0CKEN                      RCC_PCLKEN_UART0CKEN_Msk
#define RCC_PCLKEN_UART1CKEN_Pos          (1UL)                     /*!< UART1CKEN (Bit 1)                                     */
#define RCC_PCLKEN_UART1CKEN_Msk          (0x2UL)                   /*!< UART1CKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_UART1CKEN                      RCC_PCLKEN_UART1CKEN_Msk
#define RCC_PCLKEN_I2C0CKEN_Pos           (2UL)                     /*!< I2C0CKEN (Bit 2)                                      */
#define RCC_PCLKEN_I2C0CKEN_Msk           (0x4UL)                   /*!< I2C0CKEN (Bitfield-Mask: 0x01)                        */
#define RCC_PCLKEN_I2C0CKEN                      RCC_PCLKEN_I2C0CKEN_Msk
#define RCC_PCLKEN_LPUARTCKEN_Pos         (3UL)                     /*!< LPUARTCKEN (Bit 3)                                    */
#define RCC_PCLKEN_LPUARTCKEN_Msk         (0x8UL)                   /*!< LPUARTCKEN (Bitfield-Mask: 0x01)                      */
#define RCC_PCLKEN_LPUARTCKEN                      RCC_PCLKEN_LPUARTCKEN_Msk
#define RCC_PCLKEN_SPI0CKEN_Pos           (4UL)                     /*!< SPI0CKEN (Bit 4)                                      */
#define RCC_PCLKEN_SPI0CKEN_Msk           (0x10UL)                  /*!< SPI0CKEN (Bitfield-Mask: 0x01)                        */
#define RCC_PCLKEN_SPI0CKEN                      RCC_PCLKEN_SPI0CKEN_Msk
#define RCC_PCLKEN_LPTIMCKEN_Pos          (5UL)                     /*!< LPTIMCKEN (Bit 5)                                     */
#define RCC_PCLKEN_LPTIMCKEN_Msk          (0x20UL)                  /*!< LPTIMCKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_LPTIMCKEN                      RCC_PCLKEN_LPTIMCKEN_Msk
#define RCC_PCLKEN_BASETIMCKEN_Pos        (6UL)                     /*!< BASETIMCKEN (Bit 6)                                   */
#define RCC_PCLKEN_BASETIMCKEN_Msk        (0x40UL)                  /*!< BASETIMCKEN (Bitfield-Mask: 0x01)                     */
#define RCC_PCLKEN_BASETIMCKEN                      RCC_PCLKEN_BASETIMCKEN_Msk
#define RCC_PCLKEN_SYSCONCKEN_Pos         (7UL)                     /*!< SYSCONCKEN (Bit 7)                                    */
#define RCC_PCLKEN_SYSCONCKEN_Msk         (0x80UL)                  /*!< SYSCONCKEN (Bitfield-Mask: 0x01)                      */
#define RCC_PCLKEN_SYSCONCKEN                      RCC_PCLKEN_SYSCONCKEN_Msk
#define RCC_PCLKEN_PCACKEN_Pos            (8UL)                     /*!< PCACKEN (Bit 8)                                       */
#define RCC_PCLKEN_PCACKEN_Msk            (0x100UL)                 /*!< PCACKEN (Bitfield-Mask: 0x01)                         */
#define RCC_PCLKEN_PCACKEN                      RCC_PCLKEN_PCACKEN_Msk
#define RCC_PCLKEN_OWIRECKEN_Pos          (9UL)                     /*!< OWIRECKEN (Bit 9)                                     */
#define RCC_PCLKEN_OWIRECKEN_Msk          (0x200UL)                 /*!< OWIRECKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_OWIRECKEN                      RCC_PCLKEN_OWIRECKEN_Msk
#define RCC_PCLKEN_TIM1CKEN_Pos           (10UL)                    /*!< TIM1CKEN (Bit 10)                                     */
#define RCC_PCLKEN_TIM1CKEN_Msk           (0x400UL)                 /*!< TIM1CKEN (Bitfield-Mask: 0x01)                        */
#define RCC_PCLKEN_TIM1CKEN                      RCC_PCLKEN_TIM1CKEN_Msk
#define RCC_PCLKEN_TIM2CKEN_Pos           (11UL)                    /*!< TIM2CKEN (Bit 11)                                     */
#define RCC_PCLKEN_TIM2CKEN_Msk           (0x800UL)                 /*!< TIM2CKEN (Bitfield-Mask: 0x01)                        */
#define RCC_PCLKEN_TIM2CKEN                      RCC_PCLKEN_TIM2CKEN_Msk
#define RCC_PCLKEN_WWDGCKEN_Pos           (12UL)                    /*!< WWDGCKEN (Bit 12)                                     */
#define RCC_PCLKEN_WWDGCKEN_Msk           (0x1000UL)                /*!< WWDGCKEN (Bitfield-Mask: 0x01)                        */
#define RCC_PCLKEN_WWDGCKEN                      RCC_PCLKEN_WWDGCKEN_Msk
#define RCC_PCLKEN_ADCCKEN_Pos            (13UL)                    /*!< ADCCKEN (Bit 13)                                      */
#define RCC_PCLKEN_ADCCKEN_Msk            (0x2000UL)                /*!< ADCCKEN (Bitfield-Mask: 0x01)                         */
#define RCC_PCLKEN_ADCCKEN                      RCC_PCLKEN_ADCCKEN_Msk
#define RCC_PCLKEN_AWKCKEN_Pos            (14UL)                    /*!< AWKCKEN (Bit 14)                                      */
#define RCC_PCLKEN_AWKCKEN_Msk            (0x4000UL)                /*!< AWKCKEN (Bitfield-Mask: 0x01)                         */
#define RCC_PCLKEN_AWKCKEN                      RCC_PCLKEN_AWKCKEN_Msk
#define RCC_PCLKEN_RTCCKEN_Pos            (15UL)                    /*!< RTCCKEN (Bit 15)                                      */
#define RCC_PCLKEN_RTCCKEN_Msk            (0x8000UL)                /*!< RTCCKEN (Bitfield-Mask: 0x01)                         */
#define RCC_PCLKEN_RTCCKEN                      RCC_PCLKEN_RTCCKEN_Msk
#define RCC_PCLKEN_CLKCTRIMCKEN_Pos       (16UL)                    /*!< CLKCTRIMCKEN (Bit 16)                                 */
#define RCC_PCLKEN_CLKCTRIMCKEN_Msk       (0x10000UL)               /*!< CLKCTRIMCKEN (Bitfield-Mask: 0x01)                    */
#define RCC_PCLKEN_CLKCTRIMCKEN                      RCC_PCLKEN_CLKCTRIMCKEN_Msk
#define RCC_PCLKEN_IWDGCKEN_Pos           (17UL)                    /*!< IWDGCKEN (Bit 17)                                     */
#define RCC_PCLKEN_IWDGCKEN_Msk           (0x20000UL)               /*!< IWDGCKEN (Bitfield-Mask: 0x01)                        */
#define RCC_PCLKEN_IWDGCKEN                      RCC_PCLKEN_IWDGCKEN_Msk
#define RCC_PCLKEN_LVDVCCKEN_Pos          (18UL)                    /*!< LVDVCCKEN (Bit 18)                                    */
#define RCC_PCLKEN_LVDVCCKEN_Msk          (0x40000UL)               /*!< LVDVCCKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_LVDVCCKEN                      RCC_PCLKEN_LVDVCCKEN_Msk
#define RCC_PCLKEN_BEEPCKEN_Pos           (19UL)                    /*!< BEEPCKEN (Bit 19)                                     */
#define RCC_PCLKEN_BEEPCKEN_Msk           (0x80000UL)               /*!< BEEPCKEN (Bitfield-Mask: 0x01)                        */
#define RCC_PCLKEN_BEEPCKEN                      RCC_PCLKEN_BEEPCKEN_Msk
#define RCC_PCLKEN_DBGCKEN_Pos            (20UL)                    /*!< DBGCKEN (Bit 20)                                      */
#define RCC_PCLKEN_DBGCKEN_Msk            (0x100000UL)              /*!< DBGCKEN (Bitfield-Mask: 0x01)                         */
#define RCC_PCLKEN_DBGCKEN                      RCC_PCLKEN_DBGCKEN_Msk
#define RCC_PCLKEN_UART2CKEN_Pos          (21UL)                    /*!< UART2CKEN (Bit 21)                                    */
#define RCC_PCLKEN_UART2CKEN_Msk          (0x200000UL)              /*!< UART2CKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_UART2CKEN                      RCC_PCLKEN_UART2CKEN_Msk
#define RCC_PCLKEN_UART3CKEN_Pos          (22UL)                    /*!< UART3CKEN (Bit 22)                                    */
#define RCC_PCLKEN_UART3CKEN_Msk          (0x400000UL)              /*!< UART3CKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_UART3CKEN                      RCC_PCLKEN_UART3CKEN_Msk
#define RCC_PCLKEN_SPI1CKEN_Pos           (23UL)                    /*!< SPI1CKEN (Bit 23)                                     */
#define RCC_PCLKEN_SPI1CKEN_Msk           (0x800000UL)              /*!< SPI1CKEN (Bitfield-Mask: 0x01)                        */
#define RCC_PCLKEN_SPI1CKEN                      RCC_PCLKEN_SPI1CKEN_Msk
#define RCC_PCLKEN_I2C1CKEN_Pos           (24UL)                    /*!< I2C1CKEN (Bit 24)                                     */
#define RCC_PCLKEN_I2C1CKEN_Msk           (0x1000000UL)             /*!< I2C1CKEN (Bitfield-Mask: 0x01)                        */
#define RCC_PCLKEN_I2C1CKEN                      RCC_PCLKEN_I2C1CKEN_Msk
#define RCC_PCLKEN_TIM1ACKEN_Pos          (25UL)                    /*!< TIM1ACKEN (Bit 25)                                    */
#define RCC_PCLKEN_TIM1ACKEN_Msk          (0x2000000UL)             /*!< TIM1ACKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_TIM1ACKEN                      RCC_PCLKEN_TIM1ACKEN_Msk
#define RCC_PCLKEN_TIM1BCKEN_Pos          (26UL)                    /*!< TIM1BCKEN (Bit 26)                                    */
#define RCC_PCLKEN_TIM1BCKEN_Msk          (0x4000000UL)             /*!< TIM1BCKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_TIM1BCKEN                      RCC_PCLKEN_TIM1BCKEN_Msk
#define RCC_PCLKEN_TIM2ACKEN_Pos          (27UL)                    /*!< TIM2ACKEN (Bit 27)                                    */
#define RCC_PCLKEN_TIM2ACKEN_Msk          (0x8000000UL)             /*!< TIM2ACKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_TIM2ACKEN                      RCC_PCLKEN_TIM2ACKEN_Msk
#define RCC_PCLKEN_TIM2BCKEN_Pos          (28UL)                    /*!< TIM2BCKEN (Bit 28)                                    */
#define RCC_PCLKEN_TIM2BCKEN_Msk          (0x10000000UL)            /*!< TIM2BCKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_TIM2BCKEN                      RCC_PCLKEN_TIM2BCKEN_Msk
#define RCC_PCLKEN_TIM2CCKEN_Pos          (29UL)                    /*!< TIM2CCKEN (Bit 29)                                    */
#define RCC_PCLKEN_TIM2CCKEN_Msk          (0x20000000UL)            /*!< TIM2CCKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_TIM2CCKEN                      RCC_PCLKEN_TIM2CCKEN_Msk
#define RCC_PCLKEN_OPA12CKEN_Pos          (30UL)                    /*!< OPA12CKEN (Bit 30)                                    */
#define RCC_PCLKEN_OPA12CKEN_Msk          (0x40000000UL)            /*!< OPA12CKEN (Bitfield-Mask: 0x01)                       */
#define RCC_PCLKEN_OPA12CKEN                      RCC_PCLKEN_OPA12CKEN_Msk
#define RCC_PCLKEN_RNCCKEN_Pos            (31UL)                    /*!< RNCCKEN (Bit 31)                                      */
#define RCC_PCLKEN_RNCCKEN_Msk            (0x80000000UL)            /*!< RNCCKEN (Bitfield-Mask: 0x01)                         */
#define RCC_PCLKEN_RNCCKEN                      RCC_PCLKEN_RNCCKEN_Msk
/* =========================================================  MCOCR  ========================================================= */
#define RCC_MCOCR_MCODIV_Pos              (0UL)                     /*!< MCODIV (Bit 0)                                        */
#define RCC_MCOCR_MCODIV_Msk              (0xffUL)                  /*!< MCODIV (Bitfield-Mask: 0xff)                          */
#define RCC_MCOCR_MCODIV                      RCC_MCOCR_MCODIV_Msk
#define RCC_MCOCR_MCOSEL_Pos              (8UL)                     /*!< MCOSEL (Bit 8)                                        */
#define RCC_MCOCR_MCOSEL_Msk              (0xf00UL)                 /*!< MCOSEL (Bitfield-Mask: 0x0f)                          */
#define RCC_MCOCR_MCOSEL                      RCC_MCOCR_MCOSEL_Msk
#define RCC_MCOCR_MCOEN_Pos               (12UL)                    /*!< MCOEN (Bit 12)                                        */
#define RCC_MCOCR_MCOEN_Msk               (0x1000UL)                /*!< MCOEN (Bitfield-Mask: 0x01)                           */
#define RCC_MCOCR_MCOEN                      RCC_MCOCR_MCOEN_Msk
/* =========================================================  RSTCR  ========================================================= */
#define RCC_RSTCR_MCURST_Pos              (0UL)                     /*!< MCURST (Bit 0)                                        */
#define RCC_RSTCR_MCURST_Msk              (0x1UL)                   /*!< MCURST (Bitfield-Mask: 0x01)                          */
#define RCC_RSTCR_MCURST                      RCC_RSTCR_MCURST_Msk
#define RCC_RSTCR_CPURST_Pos              (1UL)                     /*!< CPURST (Bit 1)                                        */
#define RCC_RSTCR_CPURST_Msk              (0x2UL)                   /*!< CPURST (Bitfield-Mask: 0x01)                          */
#define RCC_RSTCR_CPURST                      RCC_RSTCR_CPURST_Msk
#define RCC_RSTCR_RSTKEY_Pos              (2UL)                     /*!< RSTKEY (Bit 2)                                        */
#define RCC_RSTCR_RSTKEY_Msk              (0xfffffffcUL)            /*!< RSTKEY (Bitfield-Mask: 0x3fffffff)                    */
#define RCC_RSTCR_RSTKEY                      RCC_RSTCR_RSTKEY_Msk
/* =========================================================  RSTSR  ========================================================= */
#define RCC_RSTSR_MCURST_Pos              (0UL)                     /*!< MCURST (Bit 0)                                        */
#define RCC_RSTSR_MCURST_Msk              (0x1UL)                   /*!< MCURST (Bitfield-Mask: 0x01)                          */
#define RCC_RSTSR_MCURST                      RCC_RSTSR_MCURST_Msk
#define RCC_RSTSR_CPURST_Pos              (1UL)                     /*!< CPURST (Bit 1)                                        */
#define RCC_RSTSR_CPURST_Msk              (0x2UL)                   /*!< CPURST (Bitfield-Mask: 0x01)                          */
#define RCC_RSTSR_CPURST                      RCC_RSTSR_CPURST_Msk
#define RCC_RSTSR_WWDGRST_Pos             (2UL)                     /*!< WWDGRST (Bit 2)                                       */
#define RCC_RSTSR_WWDGRST_Msk             (0x4UL)                   /*!< WWDGRST (Bitfield-Mask: 0x01)                         */
#define RCC_RSTSR_WWDGRST                      RCC_RSTSR_WWDGRST_Msk
#define RCC_RSTSR_IWDGRST_Pos             (3UL)                     /*!< IWDGRST (Bit 3)                                       */
#define RCC_RSTSR_IWDGRST_Msk             (0x8UL)                   /*!< IWDGRST (Bitfield-Mask: 0x01)                         */
#define RCC_RSTSR_IWDGRST                      RCC_RSTSR_IWDGRST_Msk
#define RCC_RSTSR_LVDRST_Pos              (4UL)                     /*!< LVDRST (Bit 4)                                        */
#define RCC_RSTSR_LVDRST_Msk              (0x10UL)                  /*!< LVDRST (Bitfield-Mask: 0x01)                          */
#define RCC_RSTSR_LVDRST                      RCC_RSTSR_LVDRST_Msk
#define RCC_RSTSR_PORRST_Pos              (5UL)                     /*!< PORRST (Bit 5)                                        */
#define RCC_RSTSR_PORRST_Msk              (0x20UL)                  /*!< PORRST (Bitfield-Mask: 0x01)                          */
#define RCC_RSTSR_PORRST                      RCC_RSTSR_PORRST_Msk
#define RCC_RSTSR_LOCKUPRST_Pos           (6UL)                     /*!< LOCKUPRST (Bit 6)                                     */
#define RCC_RSTSR_LOCKUPRST_Msk           (0x40UL)                  /*!< LOCKUPRST (Bitfield-Mask: 0x01)                       */
#define RCC_RSTSR_LOCKUPRST                      RCC_RSTSR_LOCKUPRST_Msk
#define RCC_RSTSR_PADRST_Pos              (7UL)                     /*!< PADRST (Bit 7)                                        */
#define RCC_RSTSR_PADRST_Msk              (0x80UL)                  /*!< PADRST (Bitfield-Mask: 0x01)                          */
#define RCC_RSTSR_PADRST                      RCC_RSTSR_PADRST_Msk
#define RCC_RSTSR_SFTRST_Pos              (8UL)                     /*!< SFTRST (Bit 8)                                        */
#define RCC_RSTSR_SFTRST_Msk              (0x100UL)                 /*!< SFTRST (Bitfield-Mask: 0x01)                          */
#define RCC_RSTSR_SFTRST                      RCC_RSTSR_SFTRST_Msk
/* =======================================================  SYSCLKCR  ======================================================== */
#define RCC_SYSCLKCR_HIRCEN_Pos           (0UL)                     /*!< HIRCEN (Bit 0)                                        */
#define RCC_SYSCLKCR_HIRCEN_Msk           (0x1UL)                   /*!< HIRCEN (Bitfield-Mask: 0x01)                          */
#define RCC_SYSCLKCR_HIRCEN                      RCC_SYSCLKCR_HIRCEN_Msk
#define RCC_SYSCLKCR_HXTEN_Pos            (1UL)                     /*!< HXTEN (Bit 1)                                         */
#define RCC_SYSCLKCR_HXTEN_Msk            (0x2UL)                   /*!< HXTEN (Bitfield-Mask: 0x01)                           */
#define RCC_SYSCLKCR_HXTEN                      RCC_SYSCLKCR_HXTEN_Msk
#define RCC_SYSCLKCR_SIRCEN_Pos           (2UL)                     /*!< SIRCEN (Bit 2)                                        */
#define RCC_SYSCLKCR_SIRCEN_Msk           (0x4UL)                   /*!< SIRCEN (Bitfield-Mask: 0x01)                          */
#define RCC_SYSCLKCR_SIRCEN                      RCC_SYSCLKCR_SIRCEN_Msk
#define RCC_SYSCLKCR_HXTBYP_Pos           (5UL)                     /*!< HXTBYP (Bit 5)                                        */
#define RCC_SYSCLKCR_HXTBYP_Msk           (0x20UL)                  /*!< HXTBYP (Bitfield-Mask: 0x01)                          */
#define RCC_SYSCLKCR_HXTBYP                      RCC_SYSCLKCR_HXTBYP_Msk
#define RCC_SYSCLKCR_HXTPORT_Pos          (6UL)                     /*!< HXTPORT (Bit 6)                                       */
#define RCC_SYSCLKCR_HXTPORT_Msk          (0x40UL)                  /*!< HXTPORT (Bitfield-Mask: 0x01)                         */
#define RCC_SYSCLKCR_HXTPORT                      RCC_SYSCLKCR_HXTPORT_Msk
#define RCC_SYSCLKCR_CLKFAILEN_Pos        (8UL)                     /*!< CLKFAILEN (Bit 8)                                     */
#define RCC_SYSCLKCR_CLKFAILEN_Msk        (0x100UL)                 /*!< CLKFAILEN (Bitfield-Mask: 0x01)                       */
#define RCC_SYSCLKCR_CLKFAILEN                      RCC_SYSCLKCR_CLKFAILEN_Msk
#define RCC_SYSCLKCR_WKBYHIRC_Pos         (15UL)                    /*!< WKBYHIRC (Bit 15)                                     */
#define RCC_SYSCLKCR_WKBYHIRC_Msk         (0x8000UL)                /*!< WKBYHIRC (Bitfield-Mask: 0x01)                        */
#define RCC_SYSCLKCR_WKBYHIRC                      RCC_SYSCLKCR_WKBYHIRC_Msk
#define RCC_SYSCLKCR_KEY_Pos              (16UL)                    /*!< KEY (Bit 16)                                          */
#define RCC_SYSCLKCR_KEY_Msk              (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define RCC_SYSCLKCR_KEY                      RCC_SYSCLKCR_KEY_Msk
/* =======================================================  SYSCLKSEL  ======================================================= */
#define RCC_SYSCLKSEL_CLKSW_Pos           (0UL)                     /*!< CLKSW (Bit 0)                                         */
#define RCC_SYSCLKSEL_CLKSW_Msk           (0xfUL)                   /*!< CLKSW (Bitfield-Mask: 0x0f)                           */
#define RCC_SYSCLKSEL_CLKSW                      RCC_SYSCLKSEL_CLKSW_Msk
#define RCC_SYSCLKSEL_KEY_Pos             (16UL)                    /*!< KEY (Bit 16)                                          */
#define RCC_SYSCLKSEL_KEY_Msk             (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define RCC_SYSCLKSEL_KEY                      RCC_SYSCLKSEL_KEY_Msk
/* ========================================================  HIRCCR  ========================================================= */
#define RCC_HIRCCR_HIRCTRIM_Pos           (0UL)                     /*!< HIRCTRIM (Bit 0)                                      */
#define RCC_HIRCCR_HIRCTRIM_Msk           (0xfffUL)                 /*!< HIRCTRIM (Bitfield-Mask: 0xfff)                       */
#define RCC_HIRCCR_HIRCTRIM                      RCC_HIRCCR_HIRCTRIM_Msk
#define RCC_HIRCCR_HIRCRDY_Pos            (12UL)                    /*!< HIRCRDY (Bit 12)                                      */
#define RCC_HIRCCR_HIRCRDY_Msk            (0x1000UL)                /*!< HIRCRDY (Bitfield-Mask: 0x01)                         */
#define RCC_HIRCCR_HIRCRDY                      RCC_HIRCCR_HIRCRDY_Msk
#define RCC_HIRCCR_KEY_Pos                (16UL)                    /*!< KEY (Bit 16)                                          */
#define RCC_HIRCCR_KEY_Msk                (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define RCC_HIRCCR_KEY                      RCC_HIRCCR_KEY_Msk
/* =========================================================  HXTCR  ========================================================= */
#define RCC_HXTCR_HXTDRV_Pos              (0UL)                     /*!< HXTDRV (Bit 0)                                        */
#define RCC_HXTCR_HXTDRV_Msk              (0x7UL)                   /*!< HXTDRV (Bitfield-Mask: 0x07)                          */
#define RCC_HXTCR_HXTDRV                      RCC_HXTCR_HXTDRV_Msk
#define RCC_HXTCR_HXTSTARTUP_Pos          (4UL)                     /*!< HXTSTARTUP (Bit 4)                                    */
#define RCC_HXTCR_HXTSTARTUP_Msk          (0x30UL)                  /*!< HXTSTARTUP (Bitfield-Mask: 0x03)                      */
#define RCC_HXTCR_HXTSTARTUP                      RCC_HXTCR_HXTSTARTUP_Msk
#define RCC_HXTCR_HXTRDY_Pos              (6UL)                     /*!< HXTRDY (Bit 6)                                        */
#define RCC_HXTCR_HXTRDY_Msk              (0x40UL)                  /*!< HXTRDY (Bitfield-Mask: 0x01)                          */
#define RCC_HXTCR_HXTRDY                      RCC_HXTCR_HXTRDY_Msk
#define RCC_HXTCR_KEY_Pos                 (16UL)                    /*!< KEY (Bit 16)                                          */
#define RCC_HXTCR_KEY_Msk                 (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define RCC_HXTCR_KEY                      RCC_HXTCR_KEY_Msk
/* ========================================================  SIRCCR  ========================================================= */
#define RCC_SIRCCR_SIRCTRIM_Pos           (0UL)                     /*!< SIRCTRIM (Bit 0)                                      */
#define RCC_SIRCCR_SIRCTRIM_Msk           (0x1ffUL)                 /*!< SIRCTRIM (Bitfield-Mask: 0x1ff)                       */
#define RCC_SIRCCR_SIRCTRIM                      RCC_SIRCCR_SIRCTRIM_Msk
#define RCC_SIRCCR_SIRCSTARTUP_Pos        (10UL)                    /*!< SIRCSTARTUP (Bit 10)                                  */
#define RCC_SIRCCR_SIRCSTARTUP_Msk        (0xc00UL)                 /*!< SIRCSTARTUP (Bitfield-Mask: 0x03)                     */
#define RCC_SIRCCR_SIRCSTARTUP                      RCC_SIRCCR_SIRCSTARTUP_Msk
#define RCC_SIRCCR_SIRCRDY_Pos            (12UL)                    /*!< SIRCRDY (Bit 12)                                      */
#define RCC_SIRCCR_SIRCRDY_Msk            (0x1000UL)                /*!< SIRCRDY (Bitfield-Mask: 0x01)                         */
#define RCC_SIRCCR_SIRCRDY                      RCC_SIRCCR_SIRCRDY_Msk
#define RCC_SIRCCR_KEY_Pos                (16UL)                    /*!< KEY (Bit 16)                                          */
#define RCC_SIRCCR_KEY_Msk                (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define RCC_SIRCCR_KEY                      RCC_SIRCCR_KEY_Msk
/* =========================================================  LXTCR  ========================================================= */
#define RCC_LXTCR_LXTDRV_Pos              (0UL)                     /*!< LXTDRV (Bit 0)                                        */
#define RCC_LXTCR_LXTDRV_Msk              (0xfUL)                   /*!< LXTDRV (Bitfield-Mask: 0x0f)                          */
#define RCC_LXTCR_LXTDRV                      RCC_LXTCR_LXTDRV_Msk
#define RCC_LXTCR_LXTSTARTUP_Pos          (4UL)                     /*!< LXTSTARTUP (Bit 4)                                    */
#define RCC_LXTCR_LXTSTARTUP_Msk          (0x30UL)                  /*!< LXTSTARTUP (Bitfield-Mask: 0x03)                      */
#define RCC_LXTCR_LXTSTARTUP                      RCC_LXTCR_LXTSTARTUP_Msk
#define RCC_LXTCR_LXTRDY_Pos              (6UL)                     /*!< LXTRDY (Bit 6)                                        */
#define RCC_LXTCR_LXTRDY_Msk              (0x40UL)                  /*!< LXTRDY (Bitfield-Mask: 0x01)                          */
#define RCC_LXTCR_LXTRDY                      RCC_LXTCR_LXTRDY_Msk
#define RCC_LXTCR_LXTEN_Pos               (8UL)                     /*!< LXTEN (Bit 8)                                         */
#define RCC_LXTCR_LXTEN_Msk               (0x100UL)                 /*!< LXTEN (Bitfield-Mask: 0x01)                           */
#define RCC_LXTCR_LXTEN                      RCC_LXTCR_LXTEN_Msk
#define RCC_LXTCR_LXTBYP_Pos              (9UL)                     /*!< LXTBYP (Bit 9)                                        */
#define RCC_LXTCR_LXTBYP_Msk              (0x200UL)                 /*!< LXTBYP (Bitfield-Mask: 0x01)                          */
#define RCC_LXTCR_LXTBYP                      RCC_LXTCR_LXTBYP_Msk
#define RCC_LXTCR_LXTAON_Pos              (10UL)                    /*!< LXTAON (Bit 10)                                       */
#define RCC_LXTCR_LXTAON_Msk              (0x400UL)                 /*!< LXTAON (Bitfield-Mask: 0x01)                          */
#define RCC_LXTCR_LXTAON                      RCC_LXTCR_LXTAON_Msk
#define RCC_LXTCR_LXTPORT_Pos             (11UL)                    /*!< LXTPORT (Bit 11)                                      */
#define RCC_LXTCR_LXTPORT_Msk             (0x800UL)                 /*!< LXTPORT (Bitfield-Mask: 0x01)                         */
#define RCC_LXTCR_LXTPORT                      RCC_LXTCR_LXTPORT_Msk
#define RCC_LXTCR_KEY_Pos                 (16UL)                    /*!< KEY (Bit 16)                                          */
#define RCC_LXTCR_KEY_Msk                 (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define RCC_LXTCR_KEY                      RCC_LXTCR_KEY_Msk
/* ======================================================  IRQLATENCY  ======================================================= */
#define RCC_IRQLATENCY_IRQLATENCY_Pos     (0UL)                     /*!< IRQLATENCY (Bit 0)                                    */
#define RCC_IRQLATENCY_IRQLATENCY_Msk     (0xffUL)                  /*!< IRQLATENCY (Bitfield-Mask: 0xff)                      */
#define RCC_IRQLATENCY_IRQLATENCY                      RCC_IRQLATENCY_IRQLATENCY_Msk
/* ========================================================  STICKCR  ======================================================== */
#define RCC_STICKCR_STCALIB_Pos           (0UL)                     /*!< STCALIB (Bit 0)                                       */
#define RCC_STICKCR_STCALIB_Msk           (0xffffffUL)              /*!< STCALIB (Bitfield-Mask: 0xffffff)                     */
#define RCC_STICKCR_STCALIB                      RCC_STICKCR_STCALIB_Msk
#define RCC_STICKCR_SKEW_Pos              (24UL)                    /*!< SKEW (Bit 24)                                         */
#define RCC_STICKCR_SKEW_Msk              (0x1000000UL)             /*!< SKEW (Bitfield-Mask: 0x01)                            */
#define RCC_STICKCR_SKEW                      RCC_STICKCR_SKEW_Msk
#define RCC_STICKCR_NOREF_Pos             (25UL)                    /*!< NOREF (Bit 25)                                        */
#define RCC_STICKCR_NOREF_Msk             (0x2000000UL)             /*!< NOREF (Bitfield-Mask: 0x01)                           */
#define RCC_STICKCR_NOREF                      RCC_STICKCR_NOREF_Msk
/* ========================================================  SWDIOCR  ======================================================== */
#define RCC_SWDIOCR_SWDPORT_Pos           (0UL)                     /*!< SWDPORT (Bit 0)                                       */
#define RCC_SWDIOCR_SWDPORT_Msk           (0x1UL)                   /*!< SWDPORT (Bitfield-Mask: 0x01)                         */
#define RCC_SWDIOCR_SWDPORT                      RCC_SWDIOCR_SWDPORT_Msk
#define RCC_SWDIOCR_KEY_Pos               (16UL)                    /*!< KEY (Bit 16)                                          */
#define RCC_SWDIOCR_KEY_Msk               (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define RCC_SWDIOCR_KEY                      RCC_SWDIOCR_KEY_Msk
/* ========================================================  PERIRST  ======================================================== */
#define RCC_PERIRST_UART0RST_Pos          (0UL)                     /*!< UART0RST (Bit 0)                                      */
#define RCC_PERIRST_UART0RST_Msk          (0x1UL)                   /*!< UART0RST (Bitfield-Mask: 0x01)                        */
#define RCC_PERIRST_UART0RST                      RCC_PERIRST_UART0RST_Msk
#define RCC_PERIRST_UART1RST_Pos          (1UL)                     /*!< UART1RST (Bit 1)                                      */
#define RCC_PERIRST_UART1RST_Msk          (0x2UL)                   /*!< UART1RST (Bitfield-Mask: 0x01)                        */
#define RCC_PERIRST_UART1RST                      RCC_PERIRST_UART1RST_Msk
#define RCC_PERIRST_I2C0RST_Pos           (2UL)                     /*!< I2C0RST (Bit 2)                                       */
#define RCC_PERIRST_I2C0RST_Msk           (0x4UL)                   /*!< I2C0RST (Bitfield-Mask: 0x01)                         */
#define RCC_PERIRST_I2C0RST                      RCC_PERIRST_I2C0RST_Msk
#define RCC_PERIRST_LPUARTRST_Pos         (3UL)                     /*!< LPUARTRST (Bit 3)                                     */
#define RCC_PERIRST_LPUARTRST_Msk         (0x8UL)                   /*!< LPUARTRST (Bitfield-Mask: 0x01)                       */
#define RCC_PERIRST_LPUARTRST                      RCC_PERIRST_LPUARTRST_Msk
#define RCC_PERIRST_SPI0RST_Pos           (4UL)                     /*!< SPI0RST (Bit 4)                                       */
#define RCC_PERIRST_SPI0RST_Msk           (0x10UL)                  /*!< SPI0RST (Bitfield-Mask: 0x01)                         */
#define RCC_PERIRST_SPI0RST                      RCC_PERIRST_SPI0RST_Msk
#define RCC_PERIRST_LPTIMRST_Pos          (5UL)                     /*!< LPTIMRST (Bit 5)                                      */
#define RCC_PERIRST_LPTIMRST_Msk          (0x20UL)                  /*!< LPTIMRST (Bitfield-Mask: 0x01)                        */
#define RCC_PERIRST_LPTIMRST                      RCC_PERIRST_LPTIMRST_Msk
#define RCC_PERIRST_BASETIMRST_Pos        (6UL)                     /*!< BASETIMRST (Bit 6)                                    */
#define RCC_PERIRST_BASETIMRST_Msk        (0x40UL)                  /*!< BASETIMRST (Bitfield-Mask: 0x01)                      */
#define RCC_PERIRST_BASETIMRST                      RCC_PERIRST_BASETIMRST_Msk
#define RCC_PERIRST_SYSCONRST_Pos         (7UL)                     /*!< SYSCONRST (Bit 7)                                     */
#define RCC_PERIRST_SYSCONRST_Msk         (0x80UL)                  /*!< SYSCONRST (Bitfield-Mask: 0x01)                       */
#define RCC_PERIRST_SYSCONRST                      RCC_PERIRST_SYSCONRST_Msk
#define RCC_PERIRST_PCARST_Pos            (8UL)                     /*!< PCARST (Bit 8)                                        */
#define RCC_PERIRST_PCARST_Msk            (0x100UL)                 /*!< PCARST (Bitfield-Mask: 0x01)                          */
#define RCC_PERIRST_PCARST                      RCC_PERIRST_PCARST_Msk
#define RCC_PERIRST_OWIRERST_Pos          (9UL)                     /*!< OWIRERST (Bit 9)                                      */
#define RCC_PERIRST_OWIRERST_Msk          (0x200UL)                 /*!< OWIRERST (Bitfield-Mask: 0x01)                        */
#define RCC_PERIRST_OWIRERST                      RCC_PERIRST_OWIRERST_Msk
#define RCC_PERIRST_TIM1RST_Pos           (10UL)                    /*!< TIM1RST (Bit 10)                                      */
#define RCC_PERIRST_TIM1RST_Msk           (0x400UL)                 /*!< TIM1RST (Bitfield-Mask: 0x01)                         */
#define RCC_PERIRST_TIM1RST                      RCC_PERIRST_TIM1RST_Msk
#define RCC_PERIRST_TIM2RST_Pos           (11UL)                    /*!< TIM2RST (Bit 11)                                      */
#define RCC_PERIRST_TIM2RST_Msk           (0x800UL)                 /*!< TIM2RST (Bitfield-Mask: 0x01)                         */
#define RCC_PERIRST_TIM2RST                      RCC_PERIRST_TIM2RST_Msk
#define RCC_PERIRST_WWDGRST_Pos           (12UL)                    /*!< WWDGRST (Bit 12)                                      */
#define RCC_PERIRST_WWDGRST_Msk           (0x1000UL)                /*!< WWDGRST (Bitfield-Mask: 0x01)                         */
#define RCC_PERIRST_WWDGRST                      RCC_PERIRST_WWDGRST_Msk
#define RCC_PERIRST_ADCRST_Pos            (13UL)                    /*!< ADCRST (Bit 13)                                       */
#define RCC_PERIRST_ADCRST_Msk            (0x2000UL)                /*!< ADCRST (Bitfield-Mask: 0x01)                          */
#define RCC_PERIRST_ADCRST                      RCC_PERIRST_ADCRST_Msk
#define RCC_PERIRST_AWKRST_Pos            (14UL)                    /*!< AWKRST (Bit 14)                                       */
#define RCC_PERIRST_AWKRST_Msk            (0x4000UL)                /*!< AWKRST (Bitfield-Mask: 0x01)                          */
#define RCC_PERIRST_AWKRST                      RCC_PERIRST_AWKRST_Msk
#define RCC_PERIRST_I2C1RST_Pos           (15UL)                    /*!< I2C1RST (Bit 15)                                      */
#define RCC_PERIRST_I2C1RST_Msk           (0x8000UL)                /*!< I2C1RST (Bitfield-Mask: 0x01)                         */
#define RCC_PERIRST_I2C1RST                      RCC_PERIRST_I2C1RST_Msk
#define RCC_PERIRST_CLKTRIMRST_Pos        (16UL)                    /*!< CLKTRIMRST (Bit 16)                                   */
#define RCC_PERIRST_CLKTRIMRST_Msk        (0x10000UL)               /*!< CLKTRIMRST (Bitfield-Mask: 0x01)                      */
#define RCC_PERIRST_CLKTRIMRST                      RCC_PERIRST_CLKTRIMRST_Msk
#define RCC_PERIRST_SPI1RST_Pos           (17UL)                    /*!< SPI1RST (Bit 17)                                      */
#define RCC_PERIRST_SPI1RST_Msk           (0x20000UL)               /*!< SPI1RST (Bitfield-Mask: 0x01)                         */
#define RCC_PERIRST_SPI1RST                      RCC_PERIRST_SPI1RST_Msk
#define RCC_PERIRST_LVDVCRST_Pos          (18UL)                    /*!< LVDVCRST (Bit 18)                                     */
#define RCC_PERIRST_LVDVCRST_Msk          (0x40000UL)               /*!< LVDVCRST (Bitfield-Mask: 0x01)                        */
#define RCC_PERIRST_LVDVCRST                      RCC_PERIRST_LVDVCRST_Msk
#define RCC_PERIRST_BEEPRST_Pos           (19UL)                    /*!< BEEPRST (Bit 19)                                      */
#define RCC_PERIRST_BEEPRST_Msk           (0x80000UL)               /*!< BEEPRST (Bitfield-Mask: 0x01)                         */
#define RCC_PERIRST_BEEPRST                      RCC_PERIRST_BEEPRST_Msk
#define RCC_PERIRST_DBGRST_Pos            (20UL)                    /*!< DBGRST (Bit 20)                                       */
#define RCC_PERIRST_DBGRST_Msk            (0x100000UL)              /*!< DBGRST (Bitfield-Mask: 0x01)                          */
#define RCC_PERIRST_DBGRST                      RCC_PERIRST_DBGRST_Msk
#define RCC_PERIRST_UART2RST_Pos          (21UL)                    /*!< UART2RST (Bit 21)                                     */
#define RCC_PERIRST_UART2RST_Msk          (0x200000UL)              /*!< UART2RST (Bitfield-Mask: 0x01)                        */
#define RCC_PERIRST_UART2RST                      RCC_PERIRST_UART2RST_Msk
#define RCC_PERIRST_UART3RST_Pos          (22UL)                    /*!< UART3RST (Bit 22)                                     */
#define RCC_PERIRST_UART3RST_Msk          (0x400000UL)              /*!< UART3RST (Bitfield-Mask: 0x01)                        */
#define RCC_PERIRST_UART3RST                      RCC_PERIRST_UART3RST_Msk
#define RCC_PERIRST_OPA12RST_Pos          (23UL)                    /*!< OPA12RST (Bit 23)                                     */
#define RCC_PERIRST_OPA12RST_Msk          (0x800000UL)              /*!< OPA12RST (Bitfield-Mask: 0x01)                        */
#define RCC_PERIRST_OPA12RST                      RCC_PERIRST_OPA12RST_Msk
#define RCC_PERIRST_GPIOARST_Pos          (24UL)                    /*!< GPIOARST (Bit 24)                                     */
#define RCC_PERIRST_GPIOARST_Msk          (0x1000000UL)             /*!< GPIOARST (Bitfield-Mask: 0x01)                        */
#define RCC_PERIRST_GPIOARST                      RCC_PERIRST_GPIOARST_Msk
#define RCC_PERIRST_GPIOBRST_Pos          (25UL)                    /*!< GPIOBRST (Bit 25)                                     */
#define RCC_PERIRST_GPIOBRST_Msk          (0x2000000UL)             /*!< GPIOBRST (Bitfield-Mask: 0x01)                        */
#define RCC_PERIRST_GPIOBRST                      RCC_PERIRST_GPIOBRST_Msk
#define RCC_PERIRST_GPIOCRST_Pos          (26UL)                    /*!< GPIOCRST (Bit 26)                                     */
#define RCC_PERIRST_GPIOCRST_Msk          (0x4000000UL)             /*!< GPIOCRST (Bitfield-Mask: 0x01)                        */
#define RCC_PERIRST_GPIOCRST                      RCC_PERIRST_GPIOCRST_Msk
#define RCC_PERIRST_GPIODRST_Pos          (27UL)                    /*!< GPIODRST (Bit 27)                                     */
#define RCC_PERIRST_GPIODRST_Msk          (0x8000000UL)             /*!< GPIODRST (Bitfield-Mask: 0x01)                        */
#define RCC_PERIRST_GPIODRST                      RCC_PERIRST_GPIODRST_Msk
#define RCC_PERIRST_CRCRST_Pos            (28UL)                    /*!< CRCRST (Bit 28)                                       */
#define RCC_PERIRST_CRCRST_Msk            (0x10000000UL)            /*!< CRCRST (Bitfield-Mask: 0x01)                          */
#define RCC_PERIRST_CRCRST                      RCC_PERIRST_CRCRST_Msk
#define RCC_PERIRST_TIMXRST_Pos           (29UL)                    /*!< TIMXRST (Bit 29)                                      */
#define RCC_PERIRST_TIMXRST_Msk           (0xe0000000UL)            /*!< TIMXRST (Bitfield-Mask: 0x07)                         */
#define RCC_PERIRST_TIMXRST                      RCC_PERIRST_TIMXRST_Msk
/* ========================================================  RTCRST  ========================================================= */
#define RCC_RTCRST_RTCRST_Pos             (0UL)                     /*!< RTCRST (Bit 0)                                        */
#define RCC_RTCRST_RTCRST_Msk             (0x1UL)                   /*!< RTCRST (Bitfield-Mask: 0x01)                          */
#define RCC_RTCRST_RTCRST                      RCC_RTCRST_RTCRST_Msk
#define RCC_RTCRST_KEY_Pos                (16UL)                    /*!< KEY (Bit 16)                                          */
#define RCC_RTCRST_KEY_Msk                (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define RCC_RTCRST_KEY                      RCC_RTCRST_KEY_Msk
/* ======================================================  MASK_INT_T  ======================================================= */
#define RCC_MASK_INT_T_MASK_INT_T_Pos     (0UL)                     /*!< MASK_INT_T (Bit 0)                                    */
#define RCC_MASK_INT_T_MASK_INT_T_Msk     (0x7UL)                   /*!< MASK_INT_T (Bitfield-Mask: 0x07)                      */
#define RCC_MASK_INT_T_MASK_INT_T                      RCC_MASK_INT_T_MASK_INT_T_Msk
#define RCC_MASK_INT_T_KEY_Pos            (16UL)                    /*!< KEY (Bit 16)                                          */
#define RCC_MASK_INT_T_KEY_Msk            (0xffff0000UL)            /*!< KEY (Bitfield-Mask: 0xffff)                           */
#define RCC_MASK_INT_T_KEY                      RCC_MASK_INT_T_KEY_Msk
/* ========================================================  UNLOCK  ========================================================= */
#define RCC_UNLOCK_UNLOCK_Pos             (0UL)                     /*!< UNLOCK (Bit 0)                                        */
#define RCC_UNLOCK_UNLOCK_Msk             (0x1UL)                   /*!< UNLOCK (Bitfield-Mask: 0x01)                          */
#define RCC_UNLOCK_UNLOCK                      RCC_UNLOCK_UNLOCK_Msk
#define RCC_UNLOCK_KEY_Pos                (1UL)                     /*!< KEY (Bit 1)                                           */
#define RCC_UNLOCK_KEY_Msk                (0xfffffffeUL)            /*!< KEY (Bitfield-Mask: 0x7fffffff)                       */
#define RCC_UNLOCK_KEY                      RCC_UNLOCK_KEY_Msk

/** @} */ /* End of group PosMask_peripherals */


/* =========================================================================================================================== */
/* ================                           Enumerated Values Peripheral Section                            ================ */
/* =========================================================================================================================== */


/** @addtogroup EnumValue_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                         MMP_ALIAS                                         ================ */
/* =========================================================================================================================== */

/* =========================================================  DATA0  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            OPA                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  OP1_CR0  ======================================================== */
/* ========================================================  OP2_CR0  ======================================================== */
/* =======================================================  OPDAC_CR  ======================================================== */


/* =========================================================================================================================== */
/* ================                                            VC                                             ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR0  ========================================================== */
/* ================================================  VC CR0 VPxINSEL [0..3]  ================================================= */
typedef enum {                                  /*!< VC_CR0_VPxINSEL                                                           */
  VC_CR0_VPxINSEL_VC_P4                = 4,     /*!< VC_P4 : VC_P4 input channel                                               */
  VC_CR0_VPxINSEL_VC_P5                = 5,     /*!< VC_P5 : VC_P5 input channel                                               */
  VC_CR0_VPxINSEL_VC_P6                = 6,     /*!< VC_P6 : VC_P6 input channel                                               */
  VC_CR0_VPxINSEL_VC_P7                = 7,     /*!< VC_P7 : VC_P7 input channel                                               */
  VC_CR0_VPxINSEL_VC_P8                = 8,     /*!< VC_P8 : VC_P8 input channel                                               */
  VC_CR0_VPxINSEL_VC_P9                = 9,     /*!< VC_P9 : VC_P9 input channel                                               */
  VC_CR0_VPxINSEL_VC_P10               = 10,    /*!< VC_P10 : VC_P10 input channel                                             */
  VC_CR0_VPxINSEL_VC_P11               = 11,    /*!< VC_P11 : VC_P11 input channel                                             */
  VC_CR0_VPxINSEL_VC_P12               = 12,    /*!< VC_P12 : VC_P12 input channel                                             */
  VC_CR0_VPxINSEL_VC_P13               = 13,    /*!< VC_P13 : VC_P13 input channel                                             */
  VC_CR0_VPxINSEL_VC_P14               = 14,    /*!< VC_P14 : VC_P14 input channel                                             */
  VC_CR0_VPxINSEL_VC_P15               = 15,    /*!< VC_P15 : VC_P15 input channel                                             */
} VC_CR0_VPxINSEL_Enum;

/* ================================================  VC CR0 VNxINSEL [8..11]  ================================================ */
typedef enum {                                  /*!< VC_CR0_VNxINSEL                                                           */
  VC_CR0_VNxINSEL_VC_N0                = 0,     /*!< VC_N0 : VC_N0 input channel                                               */
  VC_CR0_VNxINSEL_VC_N1                = 1,     /*!< VC_N1 : VC_N0=1 input channel                                             */
  VC_CR0_VNxINSEL_VC_N2                = 2,     /*!< VC_N2 : VC_N2 input channel                                               */
  VC_CR0_VNxINSEL_VC_N3                = 3,     /*!< VC_N3 : VC_N3 input channel                                               */
  VC_CR0_VNxINSEL_VC_N4                = 4,     /*!< VC_N4 : VC_N4 input channel                                               */
  VC_CR0_VNxINSEL_VC_N5                = 5,     /*!< VC_N5 : VC_N5 input channel                                               */
  VC_CR0_VNxINSEL_VC_N6                = 6,     /*!< VC_N6 : VC_N6 input channel                                               */
  VC_CR0_VNxINSEL_VC_N7                = 7,     /*!< VC_N7 : VC_N7 input channel                                               */
  VC_CR0_VNxINSEL_VC_N10               = 10,    /*!< VC_N10 : VC_N10 input channel                                             */
  VC_CR0_VNxINSEL_VC_N11               = 11,    /*!< VC_N11 : VC_N11 (DAC0O) input channel                                     */
  VC_CR0_VNxINSEL_VC_N13               = 13,    /*!< VC_N13 : VC_N13 (1.2V) input channel                                      */
  VC_CR0_VNxINSEL_VC_N14               = 14,    /*!< VC_N14 : VC_N14 (ADCVREF) input channel                                   */
  VC_CR0_VNxINSEL_VC_N15               = 15,    /*!< VC_N15 : VC_N15 (VCAP) input channel                                      */
} VC_CR0_VNxINSEL_Enum;

/* ==========================================================  CR1  ========================================================== */
/* ========================================================  OUTCFG  ========================================================= */
/* ==========================================================  SR  =========================================================== */


/* =========================================================================================================================== */
/* ================                                            VC1                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR0  ========================================================== */
/* ================================================  VC1 CR0 VPxINSEL [0..3]  ================================================ */
typedef enum {                                  /*!< VC1_CR0_VPxINSEL                                                          */
  VC1_CR0_VPxINSEL_VC_P0               = 0,     /*!< VC_P0 : VC_P0 input channel                                               */
  VC1_CR0_VPxINSEL_VC_P1               = 1,     /*!< VC_P1 : VC_P1 input channel                                               */
  VC1_CR0_VPxINSEL_VC_P2               = 2,     /*!< VC_P2 : VC_P2 input channel                                               */
  VC1_CR0_VPxINSEL_VC_P3               = 3,     /*!< VC_P3 : VC_P3 input channel                                               */
  VC1_CR0_VPxINSEL_VC_P4               = 4,     /*!< VC_P4 : VC_P4 input channel                                               */
  VC1_CR0_VPxINSEL_VC_P5               = 5,     /*!< VC_P5 : VC_P5 input channel                                               */
  VC1_CR0_VPxINSEL_VC_P6               = 6,     /*!< VC_P6 : VC_P6 input channel                                               */
  VC1_CR0_VPxINSEL_VC_P7               = 7,     /*!< VC_P7 : VC_P7 input channel                                               */
  VC1_CR0_VPxINSEL_VC_P8               = 8,     /*!< VC_P8 : VC_P8 input channel                                               */
  VC1_CR0_VPxINSEL_VC_P9               = 9,     /*!< VC_P9 : VC_P9 input channel                                               */
  VC1_CR0_VPxINSEL_VC_P10              = 10,    /*!< VC_P10 : VC_P10 input channel                                             */
  VC1_CR0_VPxINSEL_VC_P11              = 11,    /*!< VC_P11 : VC_P11 input channel                                             */
  VC1_CR0_VPxINSEL_VC_P12              = 12,    /*!< VC_P12 : VC_P12 input channel                                             */
  VC1_CR0_VPxINSEL_VC_P13              = 13,    /*!< VC_P13 : VC_P13 input channel                                             */
  VC1_CR0_VPxINSEL_VC_P14              = 14,    /*!< VC_P14 : VC_P14 input channel                                             */
  VC1_CR0_VPxINSEL_VC_P15              = 15,    /*!< VC_P15 : VC_P15 input channel                                             */
} VC1_CR0_VPxINSEL_Enum;

/* ===============================================  VC1 CR0 VNxINSEL [8..11]  ================================================ */
typedef enum {                                  /*!< VC1_CR0_VNxINSEL                                                          */
  VC1_CR0_VNxINSEL_VC_N4               = 4,     /*!< VC_N4 : VC_N4 input channel                                               */
  VC1_CR0_VNxINSEL_VC_N5               = 5,     /*!< VC_N5 : VC_N5 input channel                                               */
  VC1_CR0_VNxINSEL_VC_N6               = 6,     /*!< VC_N6 : VC_N6 input channel                                               */
  VC1_CR0_VNxINSEL_VC_N7               = 7,     /*!< VC_N7 : VC_N7 input channel                                               */
  VC1_CR0_VNxINSEL_VC_N8               = 8,     /*!< VC_N8 : VC_N8 input channel                                               */
  VC1_CR0_VNxINSEL_VC_N9               = 9,     /*!< VC_N9 : VC_N9 input channel                                               */
  VC1_CR0_VNxINSEL_VC_N10              = 10,    /*!< VC_N10 : VC_N10 input channel                                             */
  VC1_CR0_VNxINSEL_VC_N11              = 11,    /*!< VC_N11 : VC_N11 (DAC1O) input channel                                     */
  VC1_CR0_VNxINSEL_VC_N14              = 14,    /*!< VC_N14 : VC_N14 (1.2V) input channel                                      */
  VC1_CR0_VNxINSEL_VC_N15              = 15,    /*!< VC_N15 : VC_N15 (VCAP) input channel                                      */
} VC1_CR0_VNxINSEL_Enum;

/* ==========================================================  CR1  ========================================================== */
/* ========================================================  OUTCFG  ========================================================= */
/* ==========================================================  SR  =========================================================== */


/* =========================================================================================================================== */
/* ================                                            DBG                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  APBFZ  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            LVD                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
/* =================================================  LVD CR DIV_SEL [0..2]  ================================================= */
typedef enum {                                  /*!< LVD_CR_DIV_SEL                                                            */
  LVD_CR_DIV_SEL_4_4                   = 0,     /*!< 4_4 : 4.4v                                                                */
  LVD_CR_DIV_SEL_4_0                   = 1,     /*!< 4_0 : 4.0v                                                                */
  LVD_CR_DIV_SEL_3_6                   = 2,     /*!< 3_6 : 3.6v                                                                */
  LVD_CR_DIV_SEL_3_3                   = 3,     /*!< 3_3 : 3.3v                                                                */
  LVD_CR_DIV_SEL_3_1                   = 4,     /*!< 3_1 : 3.1v                                                                */
  LVD_CR_DIV_SEL_2_9                   = 5,     /*!< 2_9 : 2.9v                                                                */
  LVD_CR_DIV_SEL_2_7                   = 6,     /*!< 2_7 : 2.7v                                                                */
  LVD_CR_DIV_SEL_2_5                   = 7,     /*!< 2_5 : 2.5v                                                                */
} LVD_CR_DIV_SEL_Enum;

/* ===============================================  LVD CR FLTCLK_SEL [8..9]  ================================================ */
typedef enum {                                  /*!< LVD_CR_FLTCLK_SEL                                                         */
  LVD_CR_FLTCLK_SEL_NONE               = 0,     /*!< NONE : disable                                                            */
  LVD_CR_FLTCLK_SEL_PCLK               = 1,     /*!< PCLK : use PCLK                                                           */
  LVD_CR_FLTCLK_SEL_SIRC               = 2,     /*!< SIRC : use SIRC                                                           */
} LVD_CR_FLTCLK_SEL_Enum;

/* ==========================================================  SR  =========================================================== */


/* =========================================================================================================================== */
/* ================                                            ADC                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR0  ========================================================== */
/* =================================================  ADC CR0 VRSEL [2..3]  ================================================== */
typedef enum {                                  /*!< ADC_CR0_VRSEL                                                             */
  ADC_CR0_VRSEL_AVDD                   = 0,     /*!< AVDD : select AVDD                                                        */
  ADC_CR0_VRSEL_EXT_VREF               = 2,     /*!< EXT_VREF : select external Vref (PB1)                                     */
  ADC_CR0_VRSEL_VCAP                   = 3,     /*!< VCAP : VCAP (2.5V)                                                        */
} ADC_CR0_VRSEL_Enum;

/* =================================================  ADC CR0 CLKSEL [4..6]  ================================================= */
typedef enum {                                  /*!< ADC_CR0_CLKSEL                                                            */
  ADC_CR0_CLKSEL_PCLK_DIV1             = 0,     /*!< PCLK_DIV1 : PCLK dev 1                                                    */
  ADC_CR0_CLKSEL_PCLK_DIV2             = 1,     /*!< PCLK_DIV2 : PCLK dev 2                                                    */
  ADC_CR0_CLKSEL_PCLK_DIV4             = 2,     /*!< PCLK_DIV4 : PCLK dev 4                                                    */
  ADC_CR0_CLKSEL_PCLK_DIV8             = 3,     /*!< PCLK_DIV8 : PCLK dev 8                                                    */
  ADC_CR0_CLKSEL_PCLK_DIV16            = 4,     /*!< PCLK_DIV16 : PCLK dev 16                                                  */
  ADC_CR0_CLKSEL_PCLK_DIV32            = 5,     /*!< PCLK_DIV32 : PCLK dev 132                                                 */
  ADC_CR0_CLKSEL_PCLK_DIV64            = 6,     /*!< PCLK_DIV64 : PCLK dev 64                                                  */
  ADC_CR0_CLKSEL_PCLK_DIV128           = 7,     /*!< PCLK_DIV128 : PCLK dev 128                                                */
} ADC_CR0_CLKSEL_Enum;

/* ==================================================  ADC CR0 SEL [7..11]  ================================================== */
typedef enum {                                  /*!< ADC_CR0_SEL                                                               */
  ADC_CR0_SEL_AIN0                     = 0,     /*!< AIN0 : Analog Input channel                                               */
  ADC_CR0_SEL_AIN1                     = 1,     /*!< AIN1 : Analog Input channel                                               */
  ADC_CR0_SEL_AIN2                     = 2,     /*!< AIN2 : Analog Input channel                                               */
  ADC_CR0_SEL_AIN3                     = 3,     /*!< AIN3 : Analog Input channel                                               */
  ADC_CR0_SEL_AIN4                     = 4,     /*!< AIN4 : Analog Input channel                                               */
  ADC_CR0_SEL_AIN5                     = 5,     /*!< AIN5 : Analog Input channel                                               */
  ADC_CR0_SEL_AIN6                     = 6,     /*!< AIN6 : Analog Input channel                                               */
  ADC_CR0_SEL_AIN7                     = 7,     /*!< AIN7 : Analog Input channel                                               */
  ADC_CR0_SEL_AIN8                     = 8,     /*!< AIN8 : Analog Input channel                                               */
  ADC_CR0_SEL_AIN9                     = 9,     /*!< AIN9 : Analog Input channel                                               */
  ADC_CR0_SEL_AIN10                    = 10,    /*!< AIN10 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN11                    = 11,    /*!< AIN11 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN12                    = 12,    /*!< AIN12 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN13                    = 13,    /*!< AIN13 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN14                    = 14,    /*!< AIN14 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN15                    = 15,    /*!< AIN15 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN16                    = 16,    /*!< AIN16 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN17                    = 17,    /*!< AIN17 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN18                    = 18,    /*!< AIN18 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN19                    = 19,    /*!< AIN19 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN20                    = 20,    /*!< AIN20 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN21                    = 21,    /*!< AIN21 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN22                    = 22,    /*!< AIN22 : Analog Input channel                                              */
  ADC_CR0_SEL_AIN23                    = 23,    /*!< AIN23 : Analog Input channel                                              */
} ADC_CR0_SEL_Enum;

/* ===============================================  ADC CR0 ADCK_SF [16..18]  ================================================ */
typedef enum {                                  /*!< ADC_CR0_ADCK_SF                                                           */
  ADC_CR0_ADCK_SF_NO_SHIFT             = 0,     /*!< NO_SHIFT : no shift with SYSCLK                                           */
  ADC_CR0_ADCK_SF_4NS_SHIFT            = 1,     /*!< 4NS_SHIFT : shift 4ns with SYSCLK                                         */
  ADC_CR0_ADCK_SF_8NS_SHIFT            = 2,     /*!< 8NS_SHIFT : shift 8ns with SYSCLK                                         */
  ADC_CR0_ADCK_SF_12NS_SHIFT           = 3,     /*!< 12NS_SHIFT : shift 12ns with SYSCLK                                       */
  ADC_CR0_ADCK_SF_NO_SHIFT_NEDGE       = 4,     /*!< NO_SHIFT_NEDGE : no shift with SYSCLK negative edge                       */
  ADC_CR0_ADCK_SF_4NS_SHIFT_NEDGE      = 5,     /*!< 4NS_SHIFT_NEDGE : shift 4ns with SYSCLK negative edge                     */
  ADC_CR0_ADCK_SF_8NS_SHIFT_NEDGE      = 6,     /*!< 8NS_SHIFT_NEDGE : shift 8ns with SYSCLK negative edge                     */
  ADC_CR0_ADCK_SF_12NS_SHIFT_NEDGE     = 7,     /*!< 12NS_SHIFT_NEDGE : shift 12ns with SYSCLK negative edge                   */
} ADC_CR0_ADCK_SF_Enum;

/* ==========================================================  CR1  ========================================================== */
/* ==========================================================  CR2  ========================================================== */
/* ==================================================  ADC CR2 CHEN [0..7]  ================================================== */
typedef enum {                                  /*!< ADC_CR2_CHEN                                                              */
  ADC_CR2_CHEN_CH_0                    = 1,     /*!< CH_0 : Channel 0                                                          */
  ADC_CR2_CHEN_CH_1                    = 2,     /*!< CH_1 : Channel 1                                                          */
  ADC_CR2_CHEN_CH_2                    = 4,     /*!< CH_2 : Channel 2                                                          */
  ADC_CR2_CHEN_CH_3                    = 8,     /*!< CH_3 : Channel 3                                                          */
  ADC_CR2_CHEN_CH_4                    = 16,    /*!< CH_4 : Channel 4                                                          */
  ADC_CR2_CHEN_CH_5                    = 32,    /*!< CH_5 : Channel 5                                                          */
  ADC_CR2_CHEN_CH_6                    = 64,    /*!< CH_6 : Channel 6                                                          */
  ADC_CR2_CHEN_CH_7                    = 128,   /*!< CH_7 : Channel 7                                                          */
} ADC_CR2_CHEN_Enum;

/* ================================================  ADC CR2 CHSEL [17..18]  ================================================= */
typedef enum {                                  /*!< ADC_CR2_CHSEL                                                             */
  ADC_CR2_CHSEL_AIN7_0                 = 0,     /*!< AIN7_0 : Group Channel AIN7 ~ 0                                           */
  ADC_CR2_CHSEL_AIN15_8                = 1,     /*!< AIN15_8 : Group Channel AIN15 ~ 8                                         */
  ADC_CR2_CHSEL_AIN23_16               = 2,     /*!< AIN23_16 : Group Channel AIN23 ~ 16                                       */
} ADC_CR2_CHSEL_Enum;

/* ========================================================  RESULT0  ======================================================== */
/* ========================================================  RESULT1  ======================================================== */
/* ========================================================  RESULT2  ======================================================== */
/* ========================================================  RESULT3  ======================================================== */
/* ========================================================  RESULT4  ======================================================== */
/* ========================================================  RESULT5  ======================================================== */
/* ========================================================  RESULT6  ======================================================== */
/* ========================================================  RESULT7  ======================================================== */
/* ========================================================  RESULT  ========================================================= */
/* ======================================================  RESULT_ACC  ======================================================= */
/* ==========================================================  HT  =========================================================== */
/* ==========================================================  LT  =========================================================== */
/* =========================================================  INTEN  ========================================================= */
/* ========================================================  INTCLR  ========================================================= */
/* =======================================================  RAWINTSR  ======================================================== */
/* =======================================================  MSKINTSR  ======================================================== */


/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
/* =========================================================  CLKCR  ========================================================= */
/* =========================================================  TIME  ========================================================== */
/* =========================================================  DATE  ========================================================== */
/* =======================================================  ALM1TIME  ======================================================== */
/* =======================================================  ALM1DATE  ======================================================== */
/* ========================================================  ALM2PRD  ======================================================== */
/* =============================================  RTC ALM2PRD ALM2PR_CNT [0..3]  ============================================= */
typedef enum {                                  /*!< RTC_ALM2PRD_ALM2PR_CNT                                                    */
  RTC_ALM2PRD_ALM2PR_CNT_ALM2_OFF      = 0,     /*!< ALM2_OFF : Disable Alarm 2                                                */
  RTC_ALM2PRD_ALM2PR_CNT_1_SEC         = 1,     /*!< 1_SEC : 1 second                                                          */
  RTC_ALM2PRD_ALM2PR_CNT_500_MSEC      = 2,     /*!< 500_MSEC : 500 mseconds                                                   */
  RTC_ALM2PRD_ALM2PR_CNT_250_MSEC      = 3,     /*!< 250_MSEC : 250 msecond                                                    */
  RTC_ALM2PRD_ALM2PR_CNT_125_MSEC      = 4,     /*!< 125_MSEC : 125 msecond                                                    */
  RTC_ALM2PRD_ALM2PR_CNT_62_5_MSEC     = 5,     /*!< 62_5_MSEC : 62.5 msecond                                                  */
  RTC_ALM2PRD_ALM2PR_CNT_31_25_MSEC    = 6,     /*!< 31_25_MSEC : 31.25 msecond                                                */
  RTC_ALM2PRD_ALM2PR_CNT_15_625_MSEC   = 7,     /*!< 15_625_MSEC : 15.625 msecond                                              */
  RTC_ALM2PRD_ALM2PR_CNT_7_8125_MSEC   = 8,     /*!< 7_8125_MSEC : 7.8125 msecond                                              */
  RTC_ALM2PRD_ALM2PR_CNT_10_SEC        = 9,     /*!< 10_SEC : 10 seconds                                                       */
  RTC_ALM2PRD_ALM2PR_CNT_30_SEC        = 10,    /*!< 30_SEC : 30 seconds                                                       */
  RTC_ALM2PRD_ALM2PR_CNT_1_MIN         = 11,    /*!< 1_MIN : 1 minute                                                          */
  RTC_ALM2PRD_ALM2PR_CNT_30_MIN        = 12,    /*!< 30_MIN : 30 minute                                                        */
  RTC_ALM2PRD_ALM2PR_CNT_60_MIN        = 13,    /*!< 60_MIN : 60 minute                                                        */
  RTC_ALM2PRD_ALM2PR_CNT_12_HOUR       = 14,    /*!< 12_HOUR : 12 hours                                                        */
  RTC_ALM2PRD_ALM2PR_CNT_24_HOUR       = 15,    /*!< 24_HOUR : 24 hours                                                        */
} RTC_ALM2PRD_ALM2PR_CNT_Enum;

/* =======================================================  RCLKTRIM  ======================================================== */
/* ===============================================  RTC RCLKTRIM MODE [8..9]  ================================================ */
typedef enum {                                  /*!< RTC_RCLKTRIM_MODE                                                         */
  RTC_RCLKTRIM_MODE_60_SEC             = 0,     /*!< 60_SEC : 60 seconds                                                       */
  RTC_RCLKTRIM_MODE_30_SEC             = 1,     /*!< 30_SEC : 30 seconds                                                       */
  RTC_RCLKTRIM_MODE_15_SEC             = 2,     /*!< 15_SEC : 15 seconds                                                       */
  RTC_RCLKTRIM_MODE_6_SEC              = 3,     /*!< 6_SEC : 6 seconds                                                         */
} RTC_RCLKTRIM_MODE_Enum;

/* ==========================================================  ISR  ========================================================== */
/* ========================================================  INTCLR  ========================================================= */
/* ==========================================================  WPR  ========================================================== */


/* =========================================================================================================================== */
/* ================                                          CLKTRIM                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
/* =============================================  CLKTRIM CR REFCLK_SEL [1..3]  ============================================== */
typedef enum {                                  /*!< CLKTRIM_CR_REFCLK_SEL                                                     */
  CLKTRIM_CR_REFCLK_SEL_HIRC           = 0,     /*!< HIRC : use HIRC                                                           */
  CLKTRIM_CR_REFCLK_SEL_HXT            = 1,     /*!< HXT : use HXT                                                             */
  CLKTRIM_CR_REFCLK_SEL_SIRC           = 2,     /*!< SIRC : use SIRC                                                           */
  CLKTRIM_CR_REFCLK_SEL_LXT            = 3,     /*!< LXT : use LXT                                                             */
  CLKTRIM_CR_REFCLK_SEL_HXT_BYPASS     = 4,     /*!< HXT_BYPASS : use HXT-Bypass                                               */
} CLKTRIM_CR_REFCLK_SEL_Enum;

/* =============================================  CLKTRIM CR CALCLK_SEL [4..5]  ============================================== */
typedef enum {                                  /*!< CLKTRIM_CR_CALCLK_SEL                                                     */
  CLKTRIM_CR_CALCLK_SEL_HIRC           = 0,     /*!< HIRC : use HIRC                                                           */
  CLKTRIM_CR_CALCLK_SEL_HXT            = 1,     /*!< HXT : use HXT                                                             */
  CLKTRIM_CR_CALCLK_SEL_SIRC           = 2,     /*!< SIRC : use SIRC                                                           */
  CLKTRIM_CR_CALCLK_SEL_LXT            = 3,     /*!< LXT : use LXT                                                             */
} CLKTRIM_CR_CALCLK_SEL_Enum;

/* ========================================================  REFCON  ========================================================= */
/* ========================================================  REFCNT  ========================================================= */
/* ========================================================  CALCNT  ========================================================= */
/* ==========================================================  IFR  ========================================================== */
/* =========================================================  ICLR  ========================================================== */
/* ========================================================  CALCON  ========================================================= */


/* =========================================================================================================================== */
/* ================                                           OWIRE                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
/* ================================================  OWIRE CR CLKDIV [0..1]  ================================================= */
typedef enum {                                  /*!< OWIRE_CR_CLKDIV                                                           */
  OWIRE_CR_CLKDIV_DIV1                 = 0,     /*!< DIV1 : Prescale 1                                                         */
  OWIRE_CR_CLKDIV_DIV2                 = 1,     /*!< DIV2 : Prescale 2                                                         */
  OWIRE_CR_CLKDIV_DIV4                 = 2,     /*!< DIV4 : Prescale 4                                                         */
  OWIRE_CR_CLKDIV_DIV16                = 3,     /*!< DIV16 : Prescale 16                                                       */
} OWIRE_CR_CLKDIV_Enum;

/* =========================================================  NFCR  ========================================================== */
/* ================================================  OWIRE NFCR NFDIV [0..1]  ================================================ */
typedef enum {                                  /*!< OWIRE_NFCR_NFDIV                                                          */
  OWIRE_NFCR_NFDIV_DIV1                = 0,     /*!< DIV1 : Prescale 1                                                         */
  OWIRE_NFCR_NFDIV_DIV2                = 1,     /*!< DIV2 : Prescale 2                                                         */
  OWIRE_NFCR_NFDIV_DIV4                = 2,     /*!< DIV4 : Prescale 4                                                         */
  OWIRE_NFCR_NFDIV_DIV8                = 3,     /*!< DIV8 : Prescale 8                                                         */
} OWIRE_NFCR_NFDIV_Enum;

/* ========================================================  RSTCNT  ========================================================= */
/* ========================================================  PRESCNT  ======================================================== */
/* ======================================================  BITRATECNT  ======================================================= */
/* ========================================================  DRVCNT  ========================================================= */
/* =======================================================  RDSMPCNT  ======================================================== */
/* ========================================================  RECCNT  ========================================================= */
/* =========================================================  DATA  ========================================================== */
/* ==========================================================  CMD  ========================================================== */
/* =========================================================  INTEN  ========================================================= */
/* ==========================================================  SR  =========================================================== */
/* ========================================================  INTCLR  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            SPI                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
/* ==========================================================  SSN  ========================================================== */
/* ==========================================================  SR  =========================================================== */
/* =========================================================  DATA  ========================================================== */


/* =========================================================================================================================== */
/* ================                                            I2C                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
/* =========================================================  DATA  ========================================================== */
/* =========================================================  ADDR  ========================================================== */
/* ==========================================================  SR  =========================================================== */
/* ========================================================  TIMRUN  ========================================================= */
/* ========================================================  BAUDCR  ========================================================= */


/* =========================================================================================================================== */
/* ================                                          LPUART                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  SBUF  ========================================================== */
/* =========================================================  SCON  ========================================================== */
/* ==============================================  LPUART SCON SM0_SM1 [6..7]  =============================================== */
typedef enum {                                  /*!< LPUART_SCON_SM0_SM1                                                       */
  LPUART_SCON_SM0_SM1_MODE_0           = 0,     /*!< MODE_0 : 8 Data bits                                                      */
  LPUART_SCON_SM0_SM1_MODE_1           = 1,     /*!< MODE_1 : 8 Data bits, Variable baud rate                                  */
  LPUART_SCON_SM0_SM1_MODE_2           = 2,     /*!< MODE_2 : 9 Data bits                                                      */
  LPUART_SCON_SM0_SM1_MODE_3           = 3,     /*!< MODE_3 : 9 Data bits, Variable baud rate                                  */
} LPUART_SCON_SM0_SM1_Enum;

/* =============================================  LPUART SCON SCLKSEL [11..12]  ============================================== */
typedef enum {                                  /*!< LPUART_SCON_SCLKSEL                                                       */
  LPUART_SCON_SCLKSEL_PCLK             = 0,     /*!< PCLK : SCLK is PCLK                                                       */
  LPUART_SCON_SCLKSEL_LXT              = 2,     /*!< LXT : SCLK is LXT                                                         */
  LPUART_SCON_SCLKSEL_SIRC             = 3,     /*!< SIRC : SCLK is SIRC                                                       */
} LPUART_SCON_SCLKSEL_Enum;

/* ===============================================  LPUART SCON PRSC [13..15]  =============================================== */
typedef enum {                                  /*!< LPUART_SCON_PRSC                                                          */
  LPUART_SCON_PRSC_DIV128              = 0,     /*!< DIV128 : SCLK div128                                                      */
  LPUART_SCON_PRSC_DIV64               = 1,     /*!< DIV64 : SCLK div64                                                        */
  LPUART_SCON_PRSC_DIV32               = 2,     /*!< DIV32 : SCLK div32                                                        */
  LPUART_SCON_PRSC_DIV16               = 3,     /*!< DIV16 : SCLK div16                                                        */
  LPUART_SCON_PRSC_DIV8                = 4,     /*!< DIV8 : SCLK div8                                                          */
  LPUART_SCON_PRSC_DIV4                = 5,     /*!< DIV4 : SCLK div4                                                          */
  LPUART_SCON_PRSC_DIV2                = 6,     /*!< DIV2 : SCLK div2                                                          */
  LPUART_SCON_PRSC_DIV1                = 7,     /*!< DIV1 : SCLK div1                                                          */
} LPUART_SCON_PRSC_Enum;

/* =========================================================  SADDR  ========================================================= */
/* =========================================================  SADEN  ========================================================= */
/* =========================================================  INTSR  ========================================================= */
/* ========================================================  INTCLR  ========================================================= */
/* ========================================================  BAUDCR  ========================================================= */


/* =========================================================================================================================== */
/* ================                                           UART                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  SCON  ========================================================== */
/* ===============================================  UART SCON SM0_SM1 [6..7]  ================================================ */
typedef enum {                                  /*!< UART_SCON_SM0_SM1                                                         */
  UART_SCON_SM0_SM1_MODE_0             = 0,     /*!< MODE_0 : 8 Data bits                                                      */
  UART_SCON_SM0_SM1_MODE_1             = 1,     /*!< MODE_1 : 8 Data bits, Variable baud rate                                  */
  UART_SCON_SM0_SM1_MODE_2             = 2,     /*!< MODE_2 : 9 Data bits                                                      */
  UART_SCON_SM0_SM1_MODE_3             = 3,     /*!< MODE_3 : 9 Data bits, Variable baud rate                                  */
} UART_SCON_SM0_SM1_Enum;

/* =========================================================  SBUF  ========================================================== */
/* =========================================================  SADDR  ========================================================= */
/* =========================================================  SADEN  ========================================================= */
/* =========================================================  INTSR  ========================================================= */
/* ========================================================  INTCLR  ========================================================= */
/* ========================================================  BAUDCR  ========================================================= */
/* ========================================================  IRDACR  ========================================================= */


/* =========================================================================================================================== */
/* ================                                           WWDG                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  RLOAD  ========================================================= */
/* ==========================================================  CR  =========================================================== */
/* =========================================================  INTEN  ========================================================= */
/* ==========================================================  SR  =========================================================== */
/* ========================================================  INTCLR  ========================================================= */
/* ========================================================  CNTVAL  ========================================================= */


/* =========================================================================================================================== */
/* ================                                           IWDG                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  CMDCR  ========================================================= */
/* =========================================================  CFGR  ========================================================== */
/* =========================================================  RLOAD  ========================================================= */
/* ========================================================  CNTVAL  ========================================================= */
/* ==========================================================  SR  =========================================================== */
/* ========================================================  INTCLR  ========================================================= */
/* ========================================================  UNLOCK  ========================================================= */


/* =========================================================================================================================== */
/* ================                                           BEEP                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CSR  ========================================================== */
/* ===============================================  BEEP CSR BEEPSEL [16..17]  =============================================== */
typedef enum {                                  /*!< BEEP_CSR_BEEPSEL                                                          */
  BEEP_CSR_BEEPSEL_div8                = 0,     /*!< div8 : divide 8                                                           */
  BEEP_CSR_BEEPSEL_div4                = 1,     /*!< div4 : divide 4                                                           */
  BEEP_CSR_BEEPSEL_div2                = 2,     /*!< div2 : divide 2                                                           */
} BEEP_CSR_BEEPSEL_Enum;

/* ===============================================  BEEP CSR CLKSEL [20..21]  ================================================ */
typedef enum {                                  /*!< BEEP_CSR_CLKSEL                                                           */
  BEEP_CSR_CLKSEL_STOP                 = 0,     /*!< STOP : clock stop                                                         */
  BEEP_CSR_CLKSEL_SIRC                 = 1,     /*!< SIRC : clock use SIRC                                                     */
  BEEP_CSR_CLKSEL_HXT                  = 2,     /*!< HXT : clock use HXT                                                       */
  BEEP_CSR_CLKSEL_PCLK                 = 3,     /*!< PCLK : clock use PCLK                                                     */
} BEEP_CSR_CLKSEL_Enum;



/* =========================================================================================================================== */
/* ================                                            AWK                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
/* =================================================  AWK CR DIVSEL [0..3]  ================================================== */
typedef enum {                                  /*!< AWK_CR_DIVSEL                                                             */
  AWK_CR_DIVSEL_DIV2                   = 0,     /*!< DIV2 : divide by 2                                                        */
  AWK_CR_DIVSEL_DIV4                   = 1,     /*!< DIV4 : divide by 4                                                        */
  AWK_CR_DIVSEL_DIV8                   = 2,     /*!< DIV8 : divide by 8                                                        */
  AWK_CR_DIVSEL_DIV16                  = 3,     /*!< DIV16 : divide by 16                                                      */
  AWK_CR_DIVSEL_DIV32                  = 4,     /*!< DIV32 : divide by 32                                                      */
  AWK_CR_DIVSEL_DIV64                  = 5,     /*!< DIV64 : divide by 64                                                      */
  AWK_CR_DIVSEL_DIV128                 = 6,     /*!< DIV128 : divide by 128                                                    */
  AWK_CR_DIVSEL_DIV256                 = 7,     /*!< DIV256 : divide by 256                                                    */
  AWK_CR_DIVSEL_DIV512                 = 8,     /*!< DIV512 : divide by 512                                                    */
  AWK_CR_DIVSEL_DIV1024                = 9,     /*!< DIV1024 : divide by 1024                                                  */
  AWK_CR_DIVSEL_DIV2048                = 10,    /*!< DIV2048 : divide by 2048                                                  */
  AWK_CR_DIVSEL_DIV4096                = 11,    /*!< DIV4096 : divide by 4096                                                  */
  AWK_CR_DIVSEL_DIV8192                = 12,    /*!< DIV8192 : divide by 8192                                                  */
  AWK_CR_DIVSEL_DIV16384               = 13,    /*!< DIV16384 : divide by 16384                                                */
  AWK_CR_DIVSEL_DIV32768               = 14,    /*!< DIV32768 : divide by 32768                                                */
  AWK_CR_DIVSEL_DIV65536               = 15,    /*!< DIV65536 : divide by 65536                                                */
} AWK_CR_DIVSEL_Enum;

/* =================================================  AWK CR TCLKSEL [5..6]  ================================================= */
typedef enum {                                  /*!< AWK_CR_TCLKSEL                                                            */
  AWK_CR_TCLKSEL_STOP                  = 0,     /*!< STOP : stop                                                               */
  AWK_CR_TCLKSEL_SIRC                  = 1,     /*!< SIRC : SIRC clock                                                         */
  AWK_CR_TCLKSEL_HXT                   = 2,     /*!< HXT : External high speed clock                                           */
  AWK_CR_TCLKSEL_LXT                   = 3,     /*!< LXT : External low speed clock                                            */
} AWK_CR_TCLKSEL_Enum;

/* =========================================================  RLOAD  ========================================================= */
/* ==========================================================  SR  =========================================================== */
/* ========================================================  INTCLR  ========================================================= */


/* =========================================================================================================================== */
/* ================                                           LPTIM                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  CNTVAL  ========================================================= */
/* ==========================================================  CR  =========================================================== */
/* ================================================  LPTIM CR TCK_SEL [4..5]  ================================================ */
typedef enum {                                  /*!< LPTIM_CR_TCK_SEL                                                          */
  LPTIM_CR_TCK_SEL_PCLK                = 0,     /*!< PCLK : use PCLK                                                           */
  LPTIM_CR_TCK_SEL_LXT                 = 2,     /*!< LXT : use LXT                                                             */
  LPTIM_CR_TCK_SEL_SIRC                = 3,     /*!< SIRC : use SIRC                                                           */
} LPTIM_CR_TCK_SEL_Enum;

/* =========================================================  LOAD  ========================================================== */
/* =========================================================  INTSR  ========================================================= */
/* ========================================================  INTCLR  ========================================================= */
/* ========================================================  BGLOAD  ========================================================= */


/* =========================================================================================================================== */
/* ================                                          BASETIM                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
/* ==============================================  BASETIM CR TMR_PRSC [0..2]  =============================================== */
typedef enum {                                  /*!< BASETIM_CR_TMR_PRSC                                                       */
  BASETIM_CR_TMR_PRSC_DIV1             = 0,     /*!< DIV1 : division by 1                                                      */
  BASETIM_CR_TMR_PRSC_DIV2             = 1,     /*!< DIV2 : division by 2                                                      */
  BASETIM_CR_TMR_PRSC_DIV4             = 2,     /*!< DIV4 : division by 4                                                      */
  BASETIM_CR_TMR_PRSC_DIV8             = 3,     /*!< DIV8 : division by 8                                                      */
  BASETIM_CR_TMR_PRSC_DIV16            = 4,     /*!< DIV16 : division by 16                                                    */
  BASETIM_CR_TMR_PRSC_DIV32            = 5,     /*!< DIV32 : division by 32                                                    */
  BASETIM_CR_TMR_PRSC_DIV64            = 6,     /*!< DIV64 : division by 64                                                    */
  BASETIM_CR_TMR_PRSC_DIV128           = 7,     /*!< DIV128 : division by 128                                                  */
} BASETIM_CR_TMR_PRSC_Enum;

/* =========================================================  LOAD  ========================================================== */
/* ==========================================================  CNT  ========================================================== */
/* =======================================================  RAWINTSR  ======================================================== */
/* =======================================================  MSKINTSR  ======================================================== */
/* ========================================================  INTCLR  ========================================================= */
/* ========================================================  BGLOAD  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            PCA                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
/* ==========================================================  MOD  ========================================================== */
/* ==================================================  PCA MOD CPS [1..3]  =================================================== */
typedef enum {                                  /*!< PCA_MOD_CPS                                                               */
  PCA_MOD_CPS_DIV32                    = 0,     /*!< DIV32 : PCLK divide by 32                                                 */
  PCA_MOD_CPS_DIV16                    = 1,     /*!< DIV16 : PCLK divide by 16                                                 */
  PCA_MOD_CPS_DIV8                     = 2,     /*!< DIV8 : PCLK divide by 8                                                   */
  PCA_MOD_CPS_DIV4                     = 3,     /*!< DIV4 : PCLK divide by 4                                                   */
  PCA_MOD_CPS_DIV2                     = 4,     /*!< DIV2 : PCLK divide by 2                                                   */
  PCA_MOD_CPS_TIM10_OVERFLOW           = 5,     /*!< TIM10_OVERFLOW : Timer10 overflow                                         */
  PCA_MOD_CPS_TIM11_OVERFLOW           = 6,     /*!< TIM11_OVERFLOW : Timer11 overflow                                         */
  PCA_MOD_CPS_ECI                      = 7,     /*!< ECI : External clock                                                      */
} PCA_MOD_CPS_Enum;

/* ==========================================================  CNT  ========================================================== */
/* ========================================================  INTCLR  ========================================================= */
/* ========================================================  CCAPM0  ========================================================= */
/* ========================================================  CCAPM1  ========================================================= */
/* ========================================================  CCAPM2  ========================================================= */
/* ========================================================  CCAPM3  ========================================================= */
/* ========================================================  CCAPM4  ========================================================= */
/* ========================================================  CCAP0L  ========================================================= */
/* ========================================================  CCAP0H  ========================================================= */
/* ========================================================  CCAP1L  ========================================================= */
/* ========================================================  CCAP1H  ========================================================= */
/* ========================================================  CCAP2L  ========================================================= */
/* ========================================================  CCAP2H  ========================================================= */
/* ========================================================  CCAP3L  ========================================================= */
/* ========================================================  CCAP3H  ========================================================= */
/* ========================================================  CCAP4L  ========================================================= */
/* ========================================================  CCAP4H  ========================================================= */
/* =========================================================  CCAPO  ========================================================= */
/* =========================================================  POCR  ========================================================== */
/* =========================================================  CCAP0  ========================================================= */
/* =========================================================  CCAP1  ========================================================= */
/* =========================================================  CCAP2  ========================================================= */
/* =========================================================  CCAP3  ========================================================= */
/* =========================================================  CCAP4  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            TIM                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR1  ========================================================== */
/* ==========================================================  CR2  ========================================================== */
/* ==================================================  TIM CR2 MMS [4..6]  =================================================== */
typedef enum {                                  /*!< TIM_CR2_MMS                                                               */
  TIM_CR2_MMS_RESET                    = 0,     /*!< RESET : Reset                                                             */
  TIM_CR2_MMS_ENABLE                   = 1,     /*!< ENABLE : Enable                                                           */
  TIM_CR2_MMS_UPDATE                   = 2,     /*!< UPDATE : Update                                                           */
  TIM_CR2_MMS_CMP_PLUSE                = 3,     /*!< CMP_PLUSE : Compare Pulse                                                 */
  TIM_CR2_MMS_OC1REF                   = 4,     /*!< OC1REF : OC1REF signal is used as trigger output                          */
  TIM_CR2_MMS_OC2REF                   = 5,     /*!< OC2REF : OC2REF signal is used as trigger output                          */
  TIM_CR2_MMS_OC3REF                   = 6,     /*!< OC3REF : OC3REF signal is used as trigger output                          */
  TIM_CR2_MMS_OC4REF                   = 7,     /*!< OC4REF : OC4REF signal is used as trigger output                          */
} TIM_CR2_MMS_Enum;

/* =========================================================  SMCR  ========================================================== */
/* ==================================================  TIM SMCR SMS [0..2]  ================================================== */
typedef enum {                                  /*!< TIM_SMCR_SMS                                                              */
  TIM_SMCR_SMS_SLAVE_OFF               = 0,     /*!< SLAVE_OFF : Slave mode disabled                                           */
  TIM_SMCR_SMS_ENCODER_MODE_1          = 1,     /*!< ENCODER_MODE_1 : Encoder mode 1                                           */
  TIM_SMCR_SMS_ENCODER_MODE_2          = 2,     /*!< ENCODER_MODE_2 : Encoder mode 2                                           */
  TIM_SMCR_SMS_ENCODER_MODE_3          = 3,     /*!< ENCODER_MODE_3 : Encoder mode 3                                           */
  TIM_SMCR_SMS_RESET_MODE              = 4,     /*!< RESET_MODE : Reset mode                                                   */
  TIM_SMCR_SMS_GATED_MODE              = 5,     /*!< GATED_MODE : Gated mode                                                   */
  TIM_SMCR_SMS_TRIGGER_MODE            = 6,     /*!< TRIGGER_MODE : Trigger mode                                               */
  TIM_SMCR_SMS_EXT_CLK_MODE_1          = 7,     /*!< EXT_CLK_MODE_1 : External Clock mode 1                                    */
} TIM_SMCR_SMS_Enum;

/* ==================================================  TIM SMCR TS [4..6]  =================================================== */
typedef enum {                                  /*!< TIM_SMCR_TS                                                               */
  TIM_SMCR_TS_ITR0                     = 0,     /*!< ITR0 : Internal Trigger 0                                                 */
  TIM_SMCR_TS_ITR1                     = 1,     /*!< ITR1 : Internal Trigger 1                                                 */
  TIM_SMCR_TS_ITR2                     = 2,     /*!< ITR2 : Internal Trigger 2                                                 */
  TIM_SMCR_TS_ITR3                     = 3,     /*!< ITR3 : Internal Trigger 3                                                 */
  TIM_SMCR_TS_TI1F_ED                  = 4,     /*!< TI1F_ED : TI1 Edge Detector                                               */
  TIM_SMCR_TS_TI1FP1                   = 5,     /*!< TI1FP1 : Filtered Timer Input 1                                           */
  TIM_SMCR_TS_TI1FP2                   = 6,     /*!< TI1FP2 : Filtered Timer Input 2                                           */
  TIM_SMCR_TS_ETRF                     = 7,     /*!< ETRF : External Trigger input                                             */
} TIM_SMCR_TS_Enum;

/* ================================================  TIM SMCR ETPS [12..13]  ================================================= */
typedef enum {                                  /*!< TIM_SMCR_ETPS                                                             */
  TIM_SMCR_ETPS_ETRP_DIV1              = 0,     /*!< ETRP_DIV1 : ETRP frequency divided by 1                                   */
  TIM_SMCR_ETPS_ETRP_DIV2              = 1,     /*!< ETRP_DIV2 : ETRP frequency divided by 2                                   */
  TIM_SMCR_ETPS_ETRP_DIV4              = 2,     /*!< ETRP_DIV4 : ETRP frequency divided by 4                                   */
  TIM_SMCR_ETPS_ETRP_DIV8              = 3,     /*!< ETRP_DIV8 : ETRP frequency divided by 8                                   */
} TIM_SMCR_ETPS_Enum;

/* =========================================================  DIER  ========================================================== */
/* ==========================================================  SR  =========================================================== */
/* ==========================================================  EGR  ========================================================== */
/* =======================================================  CCMR1_OUT  ======================================================= */
/* ===============================================  TIM CCMR1_OUT OC1M [4..6]  =============================================== */
typedef enum {                                  /*!< TIM_CCMR1_OUT_OC1M                                                        */
  TIM_CCMR1_OUT_OC1M_FROZEN            = 0,     /*!< FROZEN : Frozen                                                           */
  TIM_CCMR1_OUT_OC1M_CH1_ACTIVE        = 1,     /*!< CH1_ACTIVE : Set channel 1 to active level on match                       */
  TIM_CCMR1_OUT_OC1M_CH1_INACTIVE      = 2,     /*!< CH1_INACTIVE : Set channel 1 to inactive level on match.                  */
  TIM_CCMR1_OUT_OC1M_TOGGLE            = 3,     /*!< TOGGLE : Toggle                                                           */
  TIM_CCMR1_OUT_OC1M_FORCE_INACTIVE    = 4,     /*!< FORCE_INACTIVE : Force inactive level                                     */
  TIM_CCMR1_OUT_OC1M_FORCE_ACTIVE      = 5,     /*!< FORCE_ACTIVE : Force active level                                         */
  TIM_CCMR1_OUT_OC1M_PWM_MODE1         = 6,     /*!< PWM_MODE1 : PWM mode 1                                                    */
  TIM_CCMR1_OUT_OC1M_PWM_MODE2         = 7,     /*!< PWM_MODE2 : PWM mode 2                                                    */
} TIM_CCMR1_OUT_OC1M_Enum;

/* =======================================================  CCMR1_IN  ======================================================== */
/* ===============================================  TIM CCMR1_IN CC1S [0..1]  ================================================ */
typedef enum {                                  /*!< TIM_CCMR1_IN_CC1S                                                         */
  TIM_CCMR1_IN_CC1S_OUTPUT             = 0,     /*!< OUTPUT : CC1 channel is configured as output                              */
  TIM_CCMR1_IN_CC1S_INPUT_TI1          = 1,     /*!< INPUT_TI1 : CC1 channel is configured as input, IC1 is mapped
                                                                    on TI1                                                     */
  TIM_CCMR1_IN_CC1S_INPUT_TI2          = 2,     /*!< INPUT_TI2 : CC1 channel is configured as input, IC1 is mapped
                                                     on TI2                                                                    */
  TIM_CCMR1_IN_CC1S_INPUT_TRC          = 3,     /*!< INPUT_TRC : CC1 channel is configured as input, IC1 is mapped
                                                     on TRC                                                                    */
} TIM_CCMR1_IN_CC1S_Enum;

/* =======================================================  CCMR2_OUT  ======================================================= */
/* =======================================================  CCMR2_IN  ======================================================== */
/* =========================================================  CCER  ========================================================== */
/* ==========================================================  CNT  ========================================================== */
/* ==========================================================  PSC  ========================================================== */
/* ==========================================================  ARR  ========================================================== */
/* ==========================================================  RCR  ========================================================== */
/* =========================================================  CCR1  ========================================================== */
/* =========================================================  CCR2  ========================================================== */
/* =========================================================  CCR3  ========================================================== */
/* =========================================================  CCR4  ========================================================== */
/* =========================================================  BDTR  ========================================================== */
/* =================================================  TIM BDTR LOCK [8..9]  ================================================== */
typedef enum {                                  /*!< TIM_BDTR_LOCK                                                             */
  TIM_BDTR_LOCK_OFF                    = 0,     /*!< OFF : Lock off                                                            */
  TIM_BDTR_LOCK_LV1                    = 1,     /*!< LV1 : Lock level 1                                                        */
  TIM_BDTR_LOCK_LV2                    = 2,     /*!< LV2 : Lock level 2                                                        */
  TIM_BDTR_LOCK_LV3                    = 3,     /*!< LV3 : Lock level 3                                                        */
} TIM_BDTR_LOCK_Enum;



/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  RESULT  ========================================================= */
/* =========================================================  DATA0  ========================================================= */


/* =========================================================================================================================== */
/* ================                                           FLASH                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  CR  =========================================================== */
/* ==================================================  FLASH CR OP [0..1]  =================================================== */
typedef enum {                                  /*!< FLASH_CR_OP                                                               */
  FLASH_CR_OP_READ                     = 0,     /*!< READ : Flash read                                                         */
  FLASH_CR_OP_PROG                     = 1,     /*!< PROG : Flash program                                                      */
  FLASH_CR_OP_ERASE_SECTOR             = 2,     /*!< ERASE_SECTOR : Flash sector erase                                         */
  FLASH_CR_OP_ERASE_CHIP               = 3,     /*!< ERASE_CHIP : Flash chip erase                                             */
} FLASH_CR_OP_Enum;

/* ==========================================================  IFR  ========================================================== */
/* =========================================================  ICLR  ========================================================== */
/* ========================================================  BYPASS  ========================================================= */
/* ========================================================  SLOCK0  ========================================================= */
/* ========================================================  SLOCK1  ========================================================= */
/* ========================================================  ISPCON  ========================================================= */
/* ========================================================  IAPCON  ========================================================= */
/* =======================================================  IAP_SIZE  ======================================================== */
/* =====================================================  ISP_AUX_FLAG  ====================================================== */
/* =========================================================  SWCFG  ========================================================= */
/* =========================================================  HWCFG  ========================================================= */


/* =========================================================================================================================== */
/* ================                                           GPIO                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DIRCR  ========================================================= */
/* ===============================================  GPIO DIRCR PxDIR [0..15]  ================================================ */
typedef enum {                                  /*!< GPIO_DIRCR_PxDIR                                                          */
  GPIO_DIRCR_PxDIR_0                   = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_DIRCR_PxDIR_1                   = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_DIRCR_PxDIR_2                   = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_DIRCR_PxDIR_3                   = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_DIRCR_PxDIR_4                   = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_DIRCR_PxDIR_5                   = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_DIRCR_PxDIR_6                   = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_DIRCR_PxDIR_7                   = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_DIRCR_PxDIR_8                   = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_DIRCR_PxDIR_9                   = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_DIRCR_PxDIR_10                  = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_DIRCR_PxDIR_11                  = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_DIRCR_PxDIR_12                  = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_DIRCR_PxDIR_13                  = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_DIRCR_PxDIR_14                  = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_DIRCR_PxDIR_15                  = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_DIRCR_PxDIR_Enum;

/* ========================================================  OTYPER  ========================================================= */
/* ==============================================  GPIO OTYPER PxOTYP [0..15]  =============================================== */
typedef enum {                                  /*!< GPIO_OTYPER_PxOTYP                                                        */
  GPIO_OTYPER_PxOTYP_0                 = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_OTYPER_PxOTYP_1                 = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_OTYPER_PxOTYP_2                 = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_OTYPER_PxOTYP_3                 = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_OTYPER_PxOTYP_4                 = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_OTYPER_PxOTYP_5                 = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_OTYPER_PxOTYP_6                 = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_OTYPER_PxOTYP_7                 = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_OTYPER_PxOTYP_8                 = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_OTYPER_PxOTYP_9                 = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_OTYPER_PxOTYP_10                = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_OTYPER_PxOTYP_11                = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_OTYPER_PxOTYP_12                = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_OTYPER_PxOTYP_13                = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_OTYPER_PxOTYP_14                = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_OTYPER_PxOTYP_15                = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_OTYPER_PxOTYP_Enum;

/* ==========================================================  ODR  ========================================================== */
/* =================================================  GPIO ODR PxOD [0..15]  ================================================= */
typedef enum {                                  /*!< GPIO_ODR_PxOD                                                             */
  GPIO_ODR_PxOD_0                      = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_ODR_PxOD_1                      = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_ODR_PxOD_2                      = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_ODR_PxOD_3                      = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_ODR_PxOD_4                      = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_ODR_PxOD_5                      = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_ODR_PxOD_6                      = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_ODR_PxOD_7                      = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_ODR_PxOD_8                      = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_ODR_PxOD_9                      = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_ODR_PxOD_10                     = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_ODR_PxOD_11                     = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_ODR_PxOD_12                     = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_ODR_PxOD_13                     = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_ODR_PxOD_14                     = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_ODR_PxOD_15                     = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_ODR_PxOD_Enum;

/* ==========================================================  IDR  ========================================================== */
/* =================================================  GPIO IDR PxID [0..15]  ================================================= */
typedef enum {                                  /*!< GPIO_IDR_PxID                                                             */
  GPIO_IDR_PxID_0                      = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_IDR_PxID_1                      = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_IDR_PxID_2                      = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_IDR_PxID_3                      = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_IDR_PxID_4                      = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_IDR_PxID_5                      = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_IDR_PxID_6                      = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_IDR_PxID_7                      = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_IDR_PxID_8                      = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_IDR_PxID_9                      = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_IDR_PxID_10                     = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_IDR_PxID_11                     = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_IDR_PxID_12                     = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_IDR_PxID_13                     = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_IDR_PxID_14                     = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_IDR_PxID_15                     = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_IDR_PxID_Enum;

/* =========================================================  INTEN  ========================================================= */
/* ===============================================  GPIO INTEN PxIEN [0..15]  ================================================ */
typedef enum {                                  /*!< GPIO_INTEN_PxIEN                                                          */
  GPIO_INTEN_PxIEN_0                   = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_INTEN_PxIEN_1                   = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_INTEN_PxIEN_2                   = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_INTEN_PxIEN_3                   = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_INTEN_PxIEN_4                   = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_INTEN_PxIEN_5                   = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_INTEN_PxIEN_6                   = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_INTEN_PxIEN_7                   = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_INTEN_PxIEN_8                   = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_INTEN_PxIEN_9                   = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_INTEN_PxIEN_10                  = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_INTEN_PxIEN_11                  = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_INTEN_PxIEN_12                  = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_INTEN_PxIEN_13                  = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_INTEN_PxIEN_14                  = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_INTEN_PxIEN_15                  = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_INTEN_PxIEN_Enum;

/* =======================================================  RAWINTSR  ======================================================== */
/* ==============================================  GPIO RAWINTSR PxRIS [0..15]  ============================================== */
typedef enum {                                  /*!< GPIO_RAWINTSR_PxRIS                                                       */
  GPIO_RAWINTSR_PxRIS_0                = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_RAWINTSR_PxRIS_1                = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_RAWINTSR_PxRIS_2                = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_RAWINTSR_PxRIS_3                = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_RAWINTSR_PxRIS_4                = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_RAWINTSR_PxRIS_5                = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_RAWINTSR_PxRIS_6                = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_RAWINTSR_PxRIS_7                = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_RAWINTSR_PxRIS_8                = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_RAWINTSR_PxRIS_9                = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_RAWINTSR_PxRIS_10               = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_RAWINTSR_PxRIS_11               = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_RAWINTSR_PxRIS_12               = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_RAWINTSR_PxRIS_13               = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_RAWINTSR_PxRIS_14               = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_RAWINTSR_PxRIS_15               = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_RAWINTSR_PxRIS_Enum;

/* =======================================================  MSKINTSR  ======================================================== */
/* ==============================================  GPIO MSKINTSR PxMIS [0..15]  ============================================== */
typedef enum {                                  /*!< GPIO_MSKINTSR_PxMIS                                                       */
  GPIO_MSKINTSR_PxMIS_0                = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_MSKINTSR_PxMIS_1                = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_MSKINTSR_PxMIS_2                = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_MSKINTSR_PxMIS_3                = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_MSKINTSR_PxMIS_4                = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_MSKINTSR_PxMIS_5                = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_MSKINTSR_PxMIS_6                = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_MSKINTSR_PxMIS_7                = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_MSKINTSR_PxMIS_8                = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_MSKINTSR_PxMIS_9                = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_MSKINTSR_PxMIS_10               = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_MSKINTSR_PxMIS_11               = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_MSKINTSR_PxMIS_12               = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_MSKINTSR_PxMIS_13               = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_MSKINTSR_PxMIS_14               = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_MSKINTSR_PxMIS_15               = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_MSKINTSR_PxMIS_Enum;

/* ========================================================  INTCLR  ========================================================= */
/* ==============================================  GPIO INTCLR PxICLR [0..15]  =============================================== */
typedef enum {                                  /*!< GPIO_INTCLR_PxICLR                                                        */
  GPIO_INTCLR_PxICLR_0                 = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_INTCLR_PxICLR_1                 = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_INTCLR_PxICLR_2                 = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_INTCLR_PxICLR_3                 = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_INTCLR_PxICLR_4                 = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_INTCLR_PxICLR_5                 = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_INTCLR_PxICLR_6                 = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_INTCLR_PxICLR_7                 = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_INTCLR_PxICLR_8                 = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_INTCLR_PxICLR_9                 = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_INTCLR_PxICLR_10                = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_INTCLR_PxICLR_11                = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_INTCLR_PxICLR_12                = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_INTCLR_PxICLR_13                = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_INTCLR_PxICLR_14                = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_INTCLR_PxICLR_15                = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_INTCLR_PxICLR_Enum;

/* =======================================================  INTTYPCR  ======================================================== */
/* =============================================  GPIO INTTYPCR PxITYPE [0..15]  ============================================= */
typedef enum {                                  /*!< GPIO_INTTYPCR_PxITYPE                                                     */
  GPIO_INTTYPCR_PxITYPE_0              = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_INTTYPCR_PxITYPE_1              = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_INTTYPCR_PxITYPE_2              = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_INTTYPCR_PxITYPE_3              = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_INTTYPCR_PxITYPE_4              = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_INTTYPCR_PxITYPE_5              = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_INTTYPCR_PxITYPE_6              = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_INTTYPCR_PxITYPE_7              = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_INTTYPCR_PxITYPE_8              = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_INTTYPCR_PxITYPE_9              = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_INTTYPCR_PxITYPE_10             = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_INTTYPCR_PxITYPE_11             = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_INTTYPCR_PxITYPE_12             = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_INTTYPCR_PxITYPE_13             = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_INTTYPCR_PxITYPE_14             = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_INTTYPCR_PxITYPE_15             = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_INTTYPCR_PxITYPE_Enum;

/* =======================================================  INTPOLCR  ======================================================== */
/* =============================================  GPIO INTPOLCR PxIVAL [0..15]  ============================================== */
typedef enum {                                  /*!< GPIO_INTPOLCR_PxIVAL                                                      */
  GPIO_INTPOLCR_PxIVAL_0               = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_INTPOLCR_PxIVAL_1               = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_INTPOLCR_PxIVAL_2               = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_INTPOLCR_PxIVAL_3               = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_INTPOLCR_PxIVAL_4               = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_INTPOLCR_PxIVAL_5               = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_INTPOLCR_PxIVAL_6               = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_INTPOLCR_PxIVAL_7               = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_INTPOLCR_PxIVAL_8               = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_INTPOLCR_PxIVAL_9               = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_INTPOLCR_PxIVAL_10              = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_INTPOLCR_PxIVAL_11              = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_INTPOLCR_PxIVAL_12              = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_INTPOLCR_PxIVAL_13              = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_INTPOLCR_PxIVAL_14              = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_INTPOLCR_PxIVAL_15              = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_INTPOLCR_PxIVAL_Enum;

/* ========================================================  INTANY  ========================================================= */
/* ==============================================  GPIO INTANY PxIANY [0..15]  =============================================== */
typedef enum {                                  /*!< GPIO_INTANY_PxIANY                                                        */
  GPIO_INTANY_PxIANY_0                 = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_INTANY_PxIANY_1                 = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_INTANY_PxIANY_2                 = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_INTANY_PxIANY_3                 = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_INTANY_PxIANY_4                 = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_INTANY_PxIANY_5                 = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_INTANY_PxIANY_6                 = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_INTANY_PxIANY_7                 = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_INTANY_PxIANY_8                 = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_INTANY_PxIANY_9                 = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_INTANY_PxIANY_10                = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_INTANY_PxIANY_11                = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_INTANY_PxIANY_12                = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_INTANY_PxIANY_13                = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_INTANY_PxIANY_14                = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_INTANY_PxIANY_15                = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_INTANY_PxIANY_Enum;

/* =========================================================  ODSET  ========================================================= */
/* ==============================================  GPIO ODSET PxODSET [0..15]  =============================================== */
typedef enum {                                  /*!< GPIO_ODSET_PxODSET                                                        */
  GPIO_ODSET_PxODSET_0                 = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_ODSET_PxODSET_1                 = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_ODSET_PxODSET_2                 = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_ODSET_PxODSET_3                 = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_ODSET_PxODSET_4                 = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_ODSET_PxODSET_5                 = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_ODSET_PxODSET_6                 = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_ODSET_PxODSET_7                 = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_ODSET_PxODSET_8                 = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_ODSET_PxODSET_9                 = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_ODSET_PxODSET_10                = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_ODSET_PxODSET_11                = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_ODSET_PxODSET_12                = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_ODSET_PxODSET_13                = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_ODSET_PxODSET_14                = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_ODSET_PxODSET_15                = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_ODSET_PxODSET_Enum;

/* =========================================================  ODCLR  ========================================================= */
/* ==============================================  GPIO ODCLR PxODCLR [0..15]  =============================================== */
typedef enum {                                  /*!< GPIO_ODCLR_PxODCLR                                                        */
  GPIO_ODCLR_PxODCLR_0                 = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_ODCLR_PxODCLR_1                 = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_ODCLR_PxODCLR_2                 = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_ODCLR_PxODCLR_3                 = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_ODCLR_PxODCLR_4                 = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_ODCLR_PxODCLR_5                 = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_ODCLR_PxODCLR_6                 = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_ODCLR_PxODCLR_7                 = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_ODCLR_PxODCLR_8                 = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_ODCLR_PxODCLR_9                 = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_ODCLR_PxODCLR_10                = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_ODCLR_PxODCLR_11                = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_ODCLR_PxODCLR_12                = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_ODCLR_PxODCLR_13                = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_ODCLR_PxODCLR_14                = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_ODCLR_PxODCLR_15                = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_ODCLR_PxODCLR_Enum;

/* ========================================================  INDBEN  ========================================================= */
/* ==============================================  GPIO INDBEN PxDIDB [0..15]  =============================================== */
typedef enum {                                  /*!< GPIO_INDBEN_PxDIDB                                                        */
  GPIO_INDBEN_PxDIDB_0                 = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_INDBEN_PxDIDB_1                 = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_INDBEN_PxDIDB_2                 = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_INDBEN_PxDIDB_3                 = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_INDBEN_PxDIDB_4                 = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_INDBEN_PxDIDB_5                 = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_INDBEN_PxDIDB_6                 = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_INDBEN_PxDIDB_7                 = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_INDBEN_PxDIDB_8                 = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_INDBEN_PxDIDB_9                 = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_INDBEN_PxDIDB_10                = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_INDBEN_PxDIDB_11                = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_INDBEN_PxDIDB_12                = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_INDBEN_PxDIDB_13                = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_INDBEN_PxDIDB_14                = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_INDBEN_PxDIDB_15                = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_INDBEN_PxDIDB_Enum;

/* ========================================================  DBCLKCR  ======================================================== */
/* =============================================  GPIO DBCLKCR DBCLK_DIV [0..3]  ============================================= */
typedef enum {                                  /*!< GPIO_DBCLKCR_DBCLK_DIV                                                    */
  GPIO_DBCLKCR_DBCLK_DIV_1             = 0,     /*!< 1 : Sample clock HCLK divide 1                                            */
  GPIO_DBCLKCR_DBCLK_DIV_2             = 1,     /*!< 2 : Sample clock HCLK divide 2                                            */
  GPIO_DBCLKCR_DBCLK_DIV_4             = 2,     /*!< 4 : Sample clock HCLK divide 4                                            */
  GPIO_DBCLKCR_DBCLK_DIV_8             = 3,     /*!< 8 : Sample clock HCLK divide 8                                            */
  GPIO_DBCLKCR_DBCLK_DIV_16            = 4,     /*!< 16 : Sample clock HCLK divide 16                                          */
  GPIO_DBCLKCR_DBCLK_DIV_32            = 5,     /*!< 32 : Sample clock HCLK divide 32                                          */
  GPIO_DBCLKCR_DBCLK_DIV_64            = 6,     /*!< 64 : Sample clock HCLK divide 64                                          */
  GPIO_DBCLKCR_DBCLK_DIV_128           = 7,     /*!< 128 : Sample clock HCLK divide 128                                        */
  GPIO_DBCLKCR_DBCLK_DIV_256           = 8,     /*!< 256 : Sample clock HCLK divide 256                                        */
  GPIO_DBCLKCR_DBCLK_DIV_512           = 9,     /*!< 512 : Sample clock HCLK divide 512                                        */
  GPIO_DBCLKCR_DBCLK_DIV_1024          = 10,    /*!< 1024 : Sample clock HCLK divide 1024                                      */
  GPIO_DBCLKCR_DBCLK_DIV_2048          = 11,    /*!< 2048 : Sample clock HCLK divide 2048                                      */
  GPIO_DBCLKCR_DBCLK_DIV_4096          = 12,    /*!< 4096 : Sample clock HCLK divide 4096                                      */
  GPIO_DBCLKCR_DBCLK_DIV_8192          = 13,    /*!< 8192 : Sample clock HCLK divide 8192                                      */
  GPIO_DBCLKCR_DBCLK_DIV_16384         = 14,    /*!< 16384 : Sample clock HCLK divide 16384                                    */
  GPIO_DBCLKCR_DBCLK_DIV_32768         = 15,    /*!< 32768 : Sample clock HCLK divide 32768                                    */
} GPIO_DBCLKCR_DBCLK_DIV_Enum;

/* =========================================================  PUPDR  ========================================================= */
/* ===============================================  GPIO PUPDR PxPUPD0 [0..1]  =============================================== */
typedef enum {                                  /*!< GPIO_PUPDR_PxPUPD0                                                        */
  GPIO_PUPDR_PxPUPD0_NO                = 0,     /*!< NO : No pull-up, pull-down                                             */
  GPIO_PUPDR_PxPUPD0_PU                = 1,     /*!< PU : Pull-up                                                              */
  GPIO_PUPDR_PxPUPD0_PD                = 2,     /*!< PD : pull-down                                                         */
  GPIO_PUPDR_PxPUPD0_RESVD             = 3,     /*!< RESVD : Reserved                                                          */
} GPIO_PUPDR_PxPUPD0_Enum;

/* ========================================================  SLEWCR  ========================================================= */
/* ===============================================  GPIO SLEWCR PxSR [0..15]  ================================================ */
typedef enum {                                  /*!< GPIO_SLEWCR_PxSR                                                          */
  GPIO_SLEWCR_PxSR_0                   = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_SLEWCR_PxSR_1                   = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_SLEWCR_PxSR_2                   = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_SLEWCR_PxSR_3                   = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_SLEWCR_PxSR_4                   = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_SLEWCR_PxSR_5                   = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_SLEWCR_PxSR_6                   = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_SLEWCR_PxSR_7                   = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_SLEWCR_PxSR_8                   = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_SLEWCR_PxSR_9                   = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_SLEWCR_PxSR_10                  = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_SLEWCR_PxSR_11                  = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_SLEWCR_PxSR_12                  = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_SLEWCR_PxSR_13                  = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_SLEWCR_PxSR_14                  = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_SLEWCR_PxSR_15                  = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_SLEWCR_PxSR_Enum;

/* =========================================================  DRVCR  ========================================================= */
/* ===============================================  GPIO DRVCR PxDRV [0..15]  ================================================ */
typedef enum {                                  /*!< GPIO_DRVCR_PxDRV                                                          */
  GPIO_DRVCR_PxDRV_0                   = 1,     /*!< 0 : Pin 0                                                                 */
  GPIO_DRVCR_PxDRV_1                   = 2,     /*!< 1 : Pin 1                                                                 */
  GPIO_DRVCR_PxDRV_2                   = 4,     /*!< 2 : Pin 2                                                                 */
  GPIO_DRVCR_PxDRV_3                   = 8,     /*!< 3 : Pin 3                                                                 */
  GPIO_DRVCR_PxDRV_4                   = 16,    /*!< 4 : Pin 4                                                                 */
  GPIO_DRVCR_PxDRV_5                   = 32,    /*!< 5 : Pin 5                                                                 */
  GPIO_DRVCR_PxDRV_6                   = 64,    /*!< 6 : Pin 6                                                                 */
  GPIO_DRVCR_PxDRV_7                   = 128,   /*!< 7 : Pin 7                                                                 */
  GPIO_DRVCR_PxDRV_8                   = 256,   /*!< 8 : Pin 8                                                                 */
  GPIO_DRVCR_PxDRV_9                   = 512,   /*!< 9 : Pin 9                                                                 */
  GPIO_DRVCR_PxDRV_10                  = 1024,  /*!< 10 : Pin 10                                                               */
  GPIO_DRVCR_PxDRV_11                  = 2048,  /*!< 11 : Pin 11                                                               */
  GPIO_DRVCR_PxDRV_12                  = 4096,  /*!< 12 : Pin 12                                                               */
  GPIO_DRVCR_PxDRV_13                  = 8192,  /*!< 13 : Pin 13                                                               */
  GPIO_DRVCR_PxDRV_14                  = 16384, /*!< 14 : Pin 14                                                               */
  GPIO_DRVCR_PxDRV_15                  = 32768, /*!< 15 : Pin 15                                                               */
} GPIO_DRVCR_PxDRV_Enum;

/* =========================================================  AFRL  ========================================================== */
/* =========================================================  AFRH  ========================================================== */


/* =========================================================================================================================== */
/* ================                                          OBYTES                                           ================ */
/* =========================================================================================================================== */

/* =======================================================  USERCFG0  ======================================================== */
/* =======================================================  USERCFG1  ======================================================== */
/* =======================================================  USERCFG2  ======================================================== */


/* =========================================================================================================================== */
/* ================                                          SYSCFG                                           ================ */
/* =========================================================================================================================== */

/* =======================================================  WORD0380  ======================================================== */
/* ============================================  SYSCFG WORD0380 FULLSIZE [0..0]  ============================================ */
typedef enum {                                  /*!< SYSCFG_WORD0380_FULLSIZE                                                  */
  SYSCFG_WORD0380_FULLSIZE_32KB        = 0,     /*!< 32KB : eFlash 32KBytes                                                    */
  SYSCFG_WORD0380_FULLSIZE_64KB        = 1,     /*!< 64KB : eFlash 64KBytes                                                    */
} SYSCFG_WORD0380_FULLSIZE_Enum;

/* =======================================================  WORD03A0  ======================================================== */
/* =======================================================  WORD03A1  ======================================================== */
/* =======================================================  WORD03A6  ======================================================== */
/* =======================================================  WORD03A8  ======================================================== */
/* =======================================================  WORD03A9  ======================================================== */
/* =======================================================  WORD03AA  ======================================================== */
/* =======================================================  WORD03AC  ======================================================== */
/* =======================================================  WORD03AD  ======================================================== */
/* =======================================================  WORD03B0  ======================================================== */
/* =======================================================  WORD03B1  ======================================================== */
/* =======================================================  WORD03B2  ======================================================== */
/* =======================================================  WORD03B4  ======================================================== */
/* =======================================================  WORD03B5  ======================================================== */
/* =======================================================  WORD03BC  ======================================================== */
/* =======================================================  WORD03BD  ======================================================== */
/* =======================================================  WORD03BE  ======================================================== */
/* =======================================================  WORD03BF  ======================================================== */


/* =========================================================================================================================== */
/* ================                                          SYSCON                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  CFGR0  ========================================================= */
/* =======================================================  PORTINTCR  ======================================================= */
/* ========================================================  PORTCR  ========================================================= */
/* =========================================================  PCACR  ========================================================= */
/* ========================================================  TIM1CR  ========================================================= */
/* ==========================================  SYSCON TIM1CR TIM1XCH1IN_SEL [0..2]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM1CR_TIM1XCH1IN_SEL                                              */
  SYSCON_TIM1CR_TIM1XCH1IN_SEL_TIMX_CH1 = 0,    /*!< TIMX_CH1 : TIMx CH1                                                       */
  SYSCON_TIM1CR_TIM1XCH1IN_SEL_UART0_RXD = 1,   /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM1CR_TIM1XCH1IN_SEL_UART1_RXD = 2,   /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM1CR_TIM1XCH1IN_SEL_LPUART_RXD = 3,  /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM1CR_TIM1XCH1IN_SEL_SIRC    = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM1CR_TIM1XCH1IN_SEL_Enum;

/* ==========================================  SYSCON TIM1CR TIM1XCH2IN_SEL [4..6]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM1CR_TIM1XCH2IN_SEL                                              */
  SYSCON_TIM1CR_TIM1XCH2IN_SEL_TIMX_CH2 = 0,    /*!< TIMX_CH2 : TIMx CH2                                                       */
  SYSCON_TIM1CR_TIM1XCH2IN_SEL_UART0_RXD = 1,   /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM1CR_TIM1XCH2IN_SEL_UART1_RXD = 2,   /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM1CR_TIM1XCH2IN_SEL_LPUART_RXD = 3,  /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM1CR_TIM1XCH2IN_SEL_SIRC    = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM1CR_TIM1XCH2IN_SEL_Enum;

/* =========================================  SYSCON TIM1CR TIM1XCH3IN_SEL [8..10]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM1CR_TIM1XCH3IN_SEL                                              */
  SYSCON_TIM1CR_TIM1XCH3IN_SEL_TIMX_CH3 = 0,    /*!< TIMX_CH3 : TIMx CH3                                                       */
  SYSCON_TIM1CR_TIM1XCH3IN_SEL_UART0_RXD = 1,   /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM1CR_TIM1XCH3IN_SEL_UART1_RXD = 2,   /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM1CR_TIM1XCH3IN_SEL_LPUART_RXD = 3,  /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM1CR_TIM1XCH3IN_SEL_SIRC    = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM1CR_TIM1XCH3IN_SEL_Enum;

/* =========================================  SYSCON TIM1CR TIM1XCH4IN_SEL [12..14]  ========================================= */
typedef enum {                                  /*!< SYSCON_TIM1CR_TIM1XCH4IN_SEL                                              */
  SYSCON_TIM1CR_TIM1XCH4IN_SEL_TIMX_CH4 = 0,    /*!< TIMX_CH4 : TIMx CH4                                                       */
  SYSCON_TIM1CR_TIM1XCH4IN_SEL_UART0_RXD = 1,   /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM1CR_TIM1XCH4IN_SEL_UART1_RXD = 2,   /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM1CR_TIM1XCH4IN_SEL_LPUART_RXD = 3,  /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM1CR_TIM1XCH4IN_SEL_SIRC    = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM1CR_TIM1XCH4IN_SEL_Enum;

/* ==========================================  SYSCON TIM1CR TIM1XETR_SEL [16..19]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM1CR_TIM1XETR_SEL                                                */
  SYSCON_TIM1CR_TIM1XETR_SEL_DEF       = 0,     /*!< DEF : Low level                                                           */
  SYSCON_TIM1CR_TIM1XETR_SEL_PA1       = 1,     /*!< PA1 : PA1 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PA2       = 2,     /*!< PA2 : PA2 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PA3       = 3,     /*!< PA3 : PA3 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PB4       = 4,     /*!< PB4 : PB4 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PB5       = 5,     /*!< PB5 : PB5 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PA0       = 6,     /*!< PA0 : PA0 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PD0       = 7,     /*!< PD0 : PD0 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PC5       = 8,     /*!< PC5 : PC5 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PC6       = 9,     /*!< PC6 : PC6 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PC7       = 10,    /*!< PC7 : PC7 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PD1       = 11,    /*!< PD1 : PD1 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PA03      = 12,    /*!< PA03 : PA3 pin                                                            */
  SYSCON_TIM1CR_TIM1XETR_SEL_PA4       = 13,    /*!< PA4 : PA4 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PA5       = 14,    /*!< PA5 : PA5 pin                                                             */
  SYSCON_TIM1CR_TIM1XETR_SEL_PA6       = 15,    /*!< PA6 : PA6 pin                                                             */
} SYSCON_TIM1CR_TIM1XETR_SEL_Enum;

/* ========================================================  TIM1ACR  ======================================================== */
/* =========================================  SYSCON TIM1ACR TIM1XCH1IN_SEL [0..2]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM1ACR_TIM1XCH1IN_SEL                                             */
  SYSCON_TIM1ACR_TIM1XCH1IN_SEL_TIMX_CH1 = 0,   /*!< TIMX_CH1 : TIMx CH1                                                       */
  SYSCON_TIM1ACR_TIM1XCH1IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM1ACR_TIM1XCH1IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM1ACR_TIM1XCH1IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM1ACR_TIM1XCH1IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM1ACR_TIM1XCH1IN_SEL_Enum;

/* =========================================  SYSCON TIM1ACR TIM1XCH2IN_SEL [4..6]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM1ACR_TIM1XCH2IN_SEL                                             */
  SYSCON_TIM1ACR_TIM1XCH2IN_SEL_TIMX_CH2 = 0,   /*!< TIMX_CH2 : TIMx CH2                                                       */
  SYSCON_TIM1ACR_TIM1XCH2IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM1ACR_TIM1XCH2IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM1ACR_TIM1XCH2IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM1ACR_TIM1XCH2IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM1ACR_TIM1XCH2IN_SEL_Enum;

/* =========================================  SYSCON TIM1ACR TIM1XCH3IN_SEL [8..10]  ========================================= */
typedef enum {                                  /*!< SYSCON_TIM1ACR_TIM1XCH3IN_SEL                                             */
  SYSCON_TIM1ACR_TIM1XCH3IN_SEL_TIMX_CH3 = 0,   /*!< TIMX_CH3 : TIMx CH3                                                       */
  SYSCON_TIM1ACR_TIM1XCH3IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM1ACR_TIM1XCH3IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM1ACR_TIM1XCH3IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM1ACR_TIM1XCH3IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM1ACR_TIM1XCH3IN_SEL_Enum;

/* ========================================  SYSCON TIM1ACR TIM1XCH4IN_SEL [12..14]  ========================================= */
typedef enum {                                  /*!< SYSCON_TIM1ACR_TIM1XCH4IN_SEL                                             */
  SYSCON_TIM1ACR_TIM1XCH4IN_SEL_TIMX_CH4 = 0,   /*!< TIMX_CH4 : TIMx CH4                                                       */
  SYSCON_TIM1ACR_TIM1XCH4IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM1ACR_TIM1XCH4IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM1ACR_TIM1XCH4IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM1ACR_TIM1XCH4IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM1ACR_TIM1XCH4IN_SEL_Enum;

/* =========================================  SYSCON TIM1ACR TIM1XETR_SEL [16..19]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM1ACR_TIM1XETR_SEL                                               */
  SYSCON_TIM1ACR_TIM1XETR_SEL_DEF      = 0,     /*!< DEF : Low level                                                           */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PA1      = 1,     /*!< PA1 : PA1 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PA2      = 2,     /*!< PA2 : PA2 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PA3      = 3,     /*!< PA3 : PA3 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PB4      = 4,     /*!< PB4 : PB4 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PB5      = 5,     /*!< PB5 : PB5 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PA0      = 6,     /*!< PA0 : PA0 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PD0      = 7,     /*!< PD0 : PD0 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PC5      = 8,     /*!< PC5 : PC5 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PC6      = 9,     /*!< PC6 : PC6 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PC7      = 10,    /*!< PC7 : PC7 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PD1      = 11,    /*!< PD1 : PD1 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PA03     = 12,    /*!< PA03 : PA3 pin                                                            */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PA4      = 13,    /*!< PA4 : PA4 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PA5      = 14,    /*!< PA5 : PA5 pin                                                             */
  SYSCON_TIM1ACR_TIM1XETR_SEL_PA6      = 15,    /*!< PA6 : PA6 pin                                                             */
} SYSCON_TIM1ACR_TIM1XETR_SEL_Enum;

/* ========================================================  TIM1BCR  ======================================================== */
/* =========================================  SYSCON TIM1BCR TIM1XCH1IN_SEL [0..2]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM1BCR_TIM1XCH1IN_SEL                                             */
  SYSCON_TIM1BCR_TIM1XCH1IN_SEL_TIMX_CH1 = 0,   /*!< TIMX_CH1 : TIMx CH1                                                       */
  SYSCON_TIM1BCR_TIM1XCH1IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM1BCR_TIM1XCH1IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM1BCR_TIM1XCH1IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM1BCR_TIM1XCH1IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM1BCR_TIM1XCH1IN_SEL_Enum;

/* =========================================  SYSCON TIM1BCR TIM1XCH2IN_SEL [4..6]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM1BCR_TIM1XCH2IN_SEL                                             */
  SYSCON_TIM1BCR_TIM1XCH2IN_SEL_TIMX_CH2 = 0,   /*!< TIMX_CH2 : TIMx CH2                                                       */
  SYSCON_TIM1BCR_TIM1XCH2IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM1BCR_TIM1XCH2IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM1BCR_TIM1XCH2IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM1BCR_TIM1XCH2IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM1BCR_TIM1XCH2IN_SEL_Enum;

/* =========================================  SYSCON TIM1BCR TIM1XCH3IN_SEL [8..10]  ========================================= */
typedef enum {                                  /*!< SYSCON_TIM1BCR_TIM1XCH3IN_SEL                                             */
  SYSCON_TIM1BCR_TIM1XCH3IN_SEL_TIMX_CH3 = 0,   /*!< TIMX_CH3 : TIMx CH3                                                       */
  SYSCON_TIM1BCR_TIM1XCH3IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM1BCR_TIM1XCH3IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM1BCR_TIM1XCH3IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM1BCR_TIM1XCH3IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM1BCR_TIM1XCH3IN_SEL_Enum;

/* ========================================  SYSCON TIM1BCR TIM1XCH4IN_SEL [12..14]  ========================================= */
typedef enum {                                  /*!< SYSCON_TIM1BCR_TIM1XCH4IN_SEL                                             */
  SYSCON_TIM1BCR_TIM1XCH4IN_SEL_TIMX_CH4 = 0,   /*!< TIMX_CH4 : TIMx CH4                                                       */
  SYSCON_TIM1BCR_TIM1XCH4IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM1BCR_TIM1XCH4IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM1BCR_TIM1XCH4IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM1BCR_TIM1XCH4IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM1BCR_TIM1XCH4IN_SEL_Enum;

/* =========================================  SYSCON TIM1BCR TIM1XETR_SEL [16..19]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM1BCR_TIM1XETR_SEL                                               */
  SYSCON_TIM1BCR_TIM1XETR_SEL_DEF      = 0,     /*!< DEF : Low level                                                           */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PA1      = 1,     /*!< PA1 : PA1 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PA2      = 2,     /*!< PA2 : PA2 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PA3      = 3,     /*!< PA3 : PA3 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PB4      = 4,     /*!< PB4 : PB4 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PB5      = 5,     /*!< PB5 : PB5 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PA0      = 6,     /*!< PA0 : PA0 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PD0      = 7,     /*!< PD0 : PD0 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PC5      = 8,     /*!< PC5 : PC5 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PC6      = 9,     /*!< PC6 : PC6 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PC7      = 10,    /*!< PC7 : PC7 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PD1      = 11,    /*!< PD1 : PD1 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PA03     = 12,    /*!< PA03 : PA3 pin                                                            */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PA4      = 13,    /*!< PA4 : PA4 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PA5      = 14,    /*!< PA5 : PA5 pin                                                             */
  SYSCON_TIM1BCR_TIM1XETR_SEL_PA6      = 15,    /*!< PA6 : PA6 pin                                                             */
} SYSCON_TIM1BCR_TIM1XETR_SEL_Enum;

/* ========================================================  TIM2CR  ========================================================= */
/* ==========================================  SYSCON TIM2CR TIM2XCH1IN_SEL [0..2]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2CR_TIM2XCH1IN_SEL                                              */
  SYSCON_TIM2CR_TIM2XCH1IN_SEL_TIMX_CH1 = 0,    /*!< TIMX_CH1 : TIMx CH1                                                       */
  SYSCON_TIM2CR_TIM2XCH1IN_SEL_UART0_RXD = 1,   /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2CR_TIM2XCH1IN_SEL_UART1_RXD = 2,   /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2CR_TIM2XCH1IN_SEL_LPUART_RXD = 3,  /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2CR_TIM2XCH1IN_SEL_SIRC    = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2CR_TIM2XCH1IN_SEL_Enum;

/* ==========================================  SYSCON TIM2CR TIM2XCH2IN_SEL [4..6]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2CR_TIM2XCH2IN_SEL                                              */
  SYSCON_TIM2CR_TIM2XCH2IN_SEL_TIMX_CH2 = 0,    /*!< TIMX_CH2 : TIMx CH2                                                       */
  SYSCON_TIM2CR_TIM2XCH2IN_SEL_UART0_RXD = 1,   /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2CR_TIM2XCH2IN_SEL_UART1_RXD = 2,   /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2CR_TIM2XCH2IN_SEL_LPUART_RXD = 3,  /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2CR_TIM2XCH2IN_SEL_SIRC    = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2CR_TIM2XCH2IN_SEL_Enum;

/* =========================================  SYSCON TIM2CR TIM2XCH3IN_SEL [8..10]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2CR_TIM2XCH3IN_SEL                                              */
  SYSCON_TIM2CR_TIM2XCH3IN_SEL_TIMX_CH3 = 0,    /*!< TIMX_CH3 : TIMx CH3                                                       */
  SYSCON_TIM2CR_TIM2XCH3IN_SEL_UART0_RXD = 1,   /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2CR_TIM2XCH3IN_SEL_UART1_RXD = 2,   /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2CR_TIM2XCH3IN_SEL_LPUART_RXD = 3,  /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2CR_TIM2XCH3IN_SEL_SIRC    = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2CR_TIM2XCH3IN_SEL_Enum;

/* =========================================  SYSCON TIM2CR TIM2XCH4IN_SEL [12..14]  ========================================= */
typedef enum {                                  /*!< SYSCON_TIM2CR_TIM2XCH4IN_SEL                                              */
  SYSCON_TIM2CR_TIM2XCH4IN_SEL_TIMX_CH4 = 0,    /*!< TIMX_CH4 : TIMx CH4                                                       */
  SYSCON_TIM2CR_TIM2XCH4IN_SEL_UART0_RXD = 1,   /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2CR_TIM2XCH4IN_SEL_UART1_RXD = 2,   /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2CR_TIM2XCH4IN_SEL_LPUART_RXD = 3,  /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2CR_TIM2XCH4IN_SEL_SIRC    = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2CR_TIM2XCH4IN_SEL_Enum;

/* ==========================================  SYSCON TIM2CR TIM2XETR_SEL [16..19]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2CR_TIM2XETR_SEL                                                */
  SYSCON_TIM2CR_TIM2XETR_SEL_DEF       = 0,     /*!< DEF : Low level                                                           */
  SYSCON_TIM2CR_TIM2XETR_SEL_PA1       = 1,     /*!< PA1 : PA1 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PA2       = 2,     /*!< PA2 : PA2 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PA3       = 3,     /*!< PA3 : PA3 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PB4       = 4,     /*!< PB4 : PB4 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PB5       = 5,     /*!< PB5 : PB5 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PA0       = 6,     /*!< PA0 : PA0 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PD0       = 7,     /*!< PD0 : PD0 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PC5       = 8,     /*!< PC5 : PC5 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PC6       = 9,     /*!< PC6 : PC6 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PC7       = 10,    /*!< PC7 : PC7 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PD1       = 11,    /*!< PD1 : PD1 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PA03      = 12,    /*!< PA03 : PA3 pin                                                            */
  SYSCON_TIM2CR_TIM2XETR_SEL_PA4       = 13,    /*!< PA4 : PA4 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PA5       = 14,    /*!< PA5 : PA5 pin                                                             */
  SYSCON_TIM2CR_TIM2XETR_SEL_PA6       = 15,    /*!< PA6 : PA6 pin                                                             */
} SYSCON_TIM2CR_TIM2XETR_SEL_Enum;

/* ========================================================  TIM2ACR  ======================================================== */
/* =========================================  SYSCON TIM2ACR TIM2XCH1IN_SEL [0..2]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2ACR_TIM2XCH1IN_SEL                                             */
  SYSCON_TIM2ACR_TIM2XCH1IN_SEL_TIMX_CH1 = 0,   /*!< TIMX_CH1 : TIMx CH1                                                       */
  SYSCON_TIM2ACR_TIM2XCH1IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2ACR_TIM2XCH1IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2ACR_TIM2XCH1IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2ACR_TIM2XCH1IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2ACR_TIM2XCH1IN_SEL_Enum;

/* =========================================  SYSCON TIM2ACR TIM2XCH2IN_SEL [4..6]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2ACR_TIM2XCH2IN_SEL                                             */
  SYSCON_TIM2ACR_TIM2XCH2IN_SEL_TIMX_CH2 = 0,   /*!< TIMX_CH2 : TIMx CH2                                                       */
  SYSCON_TIM2ACR_TIM2XCH2IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2ACR_TIM2XCH2IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2ACR_TIM2XCH2IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2ACR_TIM2XCH2IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2ACR_TIM2XCH2IN_SEL_Enum;

/* =========================================  SYSCON TIM2ACR TIM2XCH3IN_SEL [8..10]  ========================================= */
typedef enum {                                  /*!< SYSCON_TIM2ACR_TIM2XCH3IN_SEL                                             */
  SYSCON_TIM2ACR_TIM2XCH3IN_SEL_TIMX_CH3 = 0,   /*!< TIMX_CH3 : TIMx CH3                                                       */
  SYSCON_TIM2ACR_TIM2XCH3IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2ACR_TIM2XCH3IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2ACR_TIM2XCH3IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2ACR_TIM2XCH3IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2ACR_TIM2XCH3IN_SEL_Enum;

/* ========================================  SYSCON TIM2ACR TIM2XCH4IN_SEL [12..14]  ========================================= */
typedef enum {                                  /*!< SYSCON_TIM2ACR_TIM2XCH4IN_SEL                                             */
  SYSCON_TIM2ACR_TIM2XCH4IN_SEL_TIMX_CH4 = 0,   /*!< TIMX_CH4 : TIMx CH4                                                       */
  SYSCON_TIM2ACR_TIM2XCH4IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2ACR_TIM2XCH4IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2ACR_TIM2XCH4IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2ACR_TIM2XCH4IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2ACR_TIM2XCH4IN_SEL_Enum;

/* =========================================  SYSCON TIM2ACR TIM2XETR_SEL [16..19]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2ACR_TIM2XETR_SEL                                               */
  SYSCON_TIM2ACR_TIM2XETR_SEL_DEF      = 0,     /*!< DEF : Low level                                                           */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PA1      = 1,     /*!< PA1 : PA1 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PA2      = 2,     /*!< PA2 : PA2 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PA3      = 3,     /*!< PA3 : PA3 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PB4      = 4,     /*!< PB4 : PB4 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PB5      = 5,     /*!< PB5 : PB5 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PA0      = 6,     /*!< PA0 : PA0 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PD0      = 7,     /*!< PD0 : PD0 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PC5      = 8,     /*!< PC5 : PC5 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PC6      = 9,     /*!< PC6 : PC6 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PC7      = 10,    /*!< PC7 : PC7 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PD1      = 11,    /*!< PD1 : PD1 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PA03     = 12,    /*!< PA03 : PA3 pin                                                            */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PA4      = 13,    /*!< PA4 : PA4 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PA5      = 14,    /*!< PA5 : PA5 pin                                                             */
  SYSCON_TIM2ACR_TIM2XETR_SEL_PA6      = 15,    /*!< PA6 : PA6 pin                                                             */
} SYSCON_TIM2ACR_TIM2XETR_SEL_Enum;

/* ========================================================  TIM2BCR  ======================================================== */
/* =========================================  SYSCON TIM2BCR TIM2XCH1IN_SEL [0..2]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2BCR_TIM2XCH1IN_SEL                                             */
  SYSCON_TIM2BCR_TIM2XCH1IN_SEL_TIMX_CH1 = 0,   /*!< TIMX_CH1 : TIMx CH1                                                       */
  SYSCON_TIM2BCR_TIM2XCH1IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2BCR_TIM2XCH1IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2BCR_TIM2XCH1IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2BCR_TIM2XCH1IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2BCR_TIM2XCH1IN_SEL_Enum;

/* =========================================  SYSCON TIM2BCR TIM2XCH2IN_SEL [4..6]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2BCR_TIM2XCH2IN_SEL                                             */
  SYSCON_TIM2BCR_TIM2XCH2IN_SEL_TIMX_CH2 = 0,   /*!< TIMX_CH2 : TIMx CH2                                                       */
  SYSCON_TIM2BCR_TIM2XCH2IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2BCR_TIM2XCH2IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2BCR_TIM2XCH2IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2BCR_TIM2XCH2IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2BCR_TIM2XCH2IN_SEL_Enum;

/* =========================================  SYSCON TIM2BCR TIM2XCH3IN_SEL [8..10]  ========================================= */
typedef enum {                                  /*!< SYSCON_TIM2BCR_TIM2XCH3IN_SEL                                             */
  SYSCON_TIM2BCR_TIM2XCH3IN_SEL_TIMX_CH3 = 0,   /*!< TIMX_CH3 : TIMx CH3                                                       */
  SYSCON_TIM2BCR_TIM2XCH3IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2BCR_TIM2XCH3IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2BCR_TIM2XCH3IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2BCR_TIM2XCH3IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2BCR_TIM2XCH3IN_SEL_Enum;

/* ========================================  SYSCON TIM2BCR TIM2XCH4IN_SEL [12..14]  ========================================= */
typedef enum {                                  /*!< SYSCON_TIM2BCR_TIM2XCH4IN_SEL                                             */
  SYSCON_TIM2BCR_TIM2XCH4IN_SEL_TIMX_CH4 = 0,   /*!< TIMX_CH4 : TIMx CH4                                                       */
  SYSCON_TIM2BCR_TIM2XCH4IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2BCR_TIM2XCH4IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2BCR_TIM2XCH4IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2BCR_TIM2XCH4IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2BCR_TIM2XCH4IN_SEL_Enum;

/* =========================================  SYSCON TIM2BCR TIM2XETR_SEL [16..19]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2BCR_TIM2XETR_SEL                                               */
  SYSCON_TIM2BCR_TIM2XETR_SEL_DEF      = 0,     /*!< DEF : Low level                                                           */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PA1      = 1,     /*!< PA1 : PA1 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PA2      = 2,     /*!< PA2 : PA2 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PA3      = 3,     /*!< PA3 : PA3 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PB4      = 4,     /*!< PB4 : PB4 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PB5      = 5,     /*!< PB5 : PB5 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PA0      = 6,     /*!< PA0 : PA0 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PD0      = 7,     /*!< PD0 : PD0 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PC5      = 8,     /*!< PC5 : PC5 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PC6      = 9,     /*!< PC6 : PC6 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PC7      = 10,    /*!< PC7 : PC7 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PD1      = 11,    /*!< PD1 : PD1 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PA03     = 12,    /*!< PA03 : PA3 pin                                                            */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PA4      = 13,    /*!< PA4 : PA4 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PA5      = 14,    /*!< PA5 : PA5 pin                                                             */
  SYSCON_TIM2BCR_TIM2XETR_SEL_PA6      = 15,    /*!< PA6 : PA6 pin                                                             */
} SYSCON_TIM2BCR_TIM2XETR_SEL_Enum;

/* ========================================================  TIM2CCR  ======================================================== */
/* =========================================  SYSCON TIM2CCR TIM2XCH1IN_SEL [0..2]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2CCR_TIM2XCH1IN_SEL                                             */
  SYSCON_TIM2CCR_TIM2XCH1IN_SEL_TIMX_CH1 = 0,   /*!< TIMX_CH1 : TIMx CH1                                                       */
  SYSCON_TIM2CCR_TIM2XCH1IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2CCR_TIM2XCH1IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2CCR_TIM2XCH1IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2CCR_TIM2XCH1IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2CCR_TIM2XCH1IN_SEL_Enum;

/* =========================================  SYSCON TIM2CCR TIM2XCH2IN_SEL [4..6]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2CCR_TIM2XCH2IN_SEL                                             */
  SYSCON_TIM2CCR_TIM2XCH2IN_SEL_TIMX_CH2 = 0,   /*!< TIMX_CH2 : TIMx CH2                                                       */
  SYSCON_TIM2CCR_TIM2XCH2IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2CCR_TIM2XCH2IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2CCR_TIM2XCH2IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2CCR_TIM2XCH2IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2CCR_TIM2XCH2IN_SEL_Enum;

/* =========================================  SYSCON TIM2CCR TIM2XCH3IN_SEL [8..10]  ========================================= */
typedef enum {                                  /*!< SYSCON_TIM2CCR_TIM2XCH3IN_SEL                                             */
  SYSCON_TIM2CCR_TIM2XCH3IN_SEL_TIMX_CH3 = 0,   /*!< TIMX_CH3 : TIMx CH3                                                       */
  SYSCON_TIM2CCR_TIM2XCH3IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2CCR_TIM2XCH3IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2CCR_TIM2XCH3IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2CCR_TIM2XCH3IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2CCR_TIM2XCH3IN_SEL_Enum;

/* ========================================  SYSCON TIM2CCR TIM2XCH4IN_SEL [12..14]  ========================================= */
typedef enum {                                  /*!< SYSCON_TIM2CCR_TIM2XCH4IN_SEL                                             */
  SYSCON_TIM2CCR_TIM2XCH4IN_SEL_TIMX_CH4 = 0,   /*!< TIMX_CH4 : TIMx CH4                                                       */
  SYSCON_TIM2CCR_TIM2XCH4IN_SEL_UART0_RXD = 1,  /*!< UART0_RXD : UART0 RXD                                                     */
  SYSCON_TIM2CCR_TIM2XCH4IN_SEL_UART1_RXD = 2,  /*!< UART1_RXD : UART1 RXD                                                     */
  SYSCON_TIM2CCR_TIM2XCH4IN_SEL_LPUART_RXD = 3, /*!< LPUART_RXD : LPUART RXD                                                   */
  SYSCON_TIM2CCR_TIM2XCH4IN_SEL_SIRC   = 4,     /*!< SIRC : SIRC                                                               */
} SYSCON_TIM2CCR_TIM2XCH4IN_SEL_Enum;

/* =========================================  SYSCON TIM2CCR TIM2XETR_SEL [16..19]  ========================================== */
typedef enum {                                  /*!< SYSCON_TIM2CCR_TIM2XETR_SEL                                               */
  SYSCON_TIM2CCR_TIM2XETR_SEL_DEF      = 0,     /*!< DEF : Low level                                                           */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PA1      = 1,     /*!< PA1 : PA1 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PA2      = 2,     /*!< PA2 : PA2 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PA3      = 3,     /*!< PA3 : PA3 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PB4      = 4,     /*!< PB4 : PB4 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PB5      = 5,     /*!< PB5 : PB5 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PA0      = 6,     /*!< PA0 : PA0 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PD0      = 7,     /*!< PD0 : PD0 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PC5      = 8,     /*!< PC5 : PC5 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PC6      = 9,     /*!< PC6 : PC6 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PC7      = 10,    /*!< PC7 : PC7 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PD1      = 11,    /*!< PD1 : PD1 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PA03     = 12,    /*!< PA03 : PA3 pin                                                            */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PA4      = 13,    /*!< PA4 : PA4 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PA5      = 14,    /*!< PA5 : PA5 pin                                                             */
  SYSCON_TIM2CCR_TIM2XETR_SEL_PA6      = 15,    /*!< PA6 : PA6 pin                                                             */
} SYSCON_TIM2CCR_TIM2XETR_SEL_Enum;

/* ========================================================  UNLOCK  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            RCC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  HCLKDIV  ======================================================== */
/* ==============================================  RCC HCLKDIV AHBCKDIV [0..7]  ============================================== */
typedef enum {                                  /*!< RCC_HCLKDIV_AHBCKDIV                                                      */
  RCC_HCLKDIV_AHBCKDIV_DIV_1           = 0,     /*!< DIV_1 : Prescale 1                                                        */
  RCC_HCLKDIV_AHBCKDIV_DIV_2           = 1,     /*!< DIV_2 : Prescale 2                                                        */
  RCC_HCLKDIV_AHBCKDIV_DIV_4           = 2,     /*!< DIV_4 : Prescale 4                                                        */
  RCC_HCLKDIV_AHBCKDIV_DIV_6           = 3,     /*!< DIV_6 : Prescale 6                                                        */
} RCC_HCLKDIV_AHBCKDIV_Enum;

/* ========================================================  PCLKDIV  ======================================================== */
/* ==============================================  RCC PCLKDIV APBCKDIV [0..7]  ============================================== */
typedef enum {                                  /*!< RCC_PCLKDIV_APBCKDIV                                                      */
  RCC_PCLKDIV_APBCKDIV_DIV_1           = 0,     /*!< DIV_1 : Prescale 1                                                        */
  RCC_PCLKDIV_APBCKDIV_DIV_2           = 1,     /*!< DIV_2 : Prescale 2                                                        */
  RCC_PCLKDIV_APBCKDIV_DIV_4           = 2,     /*!< DIV_4 : Prescale 4                                                        */
  RCC_PCLKDIV_APBCKDIV_DIV_6           = 3,     /*!< DIV_6 : Prescale 6                                                        */
} RCC_PCLKDIV_APBCKDIV_Enum;

/* ========================================================  HCLKEN  ========================================================= */
/* ========================================================  PCLKEN  ========================================================= */
/* =========================================================  MCOCR  ========================================================= */
/* ===============================================  RCC MCOCR MCOSEL [8..11]  ================================================ */
typedef enum {                                  /*!< RCC_MCOCR_MCOSEL                                                          */
  RCC_MCOCR_MCOSEL_HIRC                = 0,     /*!< HIRC : HIRC clock                                                         */
  RCC_MCOCR_MCOSEL_HXT                 = 1,     /*!< HXT : External High Speed Clock                                           */
  RCC_MCOCR_MCOSEL_SIRC                = 2,     /*!< SIRC : SIRC clock                                                         */
  RCC_MCOCR_MCOSEL_LXT                 = 3,     /*!< LXT : External Low Speed Clock                                            */
  RCC_MCOCR_MCOSEL_SYSCLK              = 4,     /*!< SYSCLK : System clock                                                     */
  RCC_MCOCR_MCOSEL_HCLK                = 5,     /*!< HCLK : High performance Bus Clock                                         */
  RCC_MCOCR_MCOSEL_PCLK                = 8,     /*!< PCLK : Peripheral clock                                                   */
} RCC_MCOCR_MCOSEL_Enum;

/* =========================================================  RSTCR  ========================================================= */
/* =========================================================  RSTSR  ========================================================= */
/* =======================================================  SYSCLKCR  ======================================================== */
/* =======================================================  SYSCLKSEL  ======================================================= */
/* ==============================================  RCC SYSCLKSEL CLKSW [0..3]  =============================================== */
typedef enum {                                  /*!< RCC_SYSCLKSEL_CLKSW                                                       */
  RCC_SYSCLKSEL_CLKSW_HIRC             = 1,     /*!< HIRC : HIRC clock                                                         */
  RCC_SYSCLKSEL_CLKSW_HXT              = 2,     /*!< HXT : External High Speed Clock                                           */
  RCC_SYSCLKSEL_CLKSW_SIRC             = 4,     /*!< SIRC : SIRC clock                                                         */
  RCC_SYSCLKSEL_CLKSW_LXT              = 8,     /*!< LXT : External Low Speed Clock                                            */
} RCC_SYSCLKSEL_CLKSW_Enum;

/* ========================================================  HIRCCR  ========================================================= */
/* ==============================================  RCC HIRCCR HIRCTRIM [0..11]  ============================================== */
typedef enum {                                  /*!< RCC_HIRCCR_HIRCTRIM                                                       */
  RCC_HIRCCR_HIRCTRIM_TRIMLEVEL_4M     = 512,   /*!< TRIMLEVEL_4M : Trim level 4MHz, bit[9]                                    */
  RCC_HIRCCR_HIRCTRIM_TRIMLEVEL_8M     = 1024,  /*!< TRIMLEVEL_8M : Trim level 8MHz, bit[10]                                   */
  RCC_HIRCCR_HIRCTRIM_TRIMLEVEL_12M    = 1536,  /*!< TRIMLEVEL_12M : Trim level 12MHz, bit[10,9]                               */
  RCC_HIRCCR_HIRCTRIM_TRIMLEVEL_16M    = 2048,  /*!< TRIMLEVEL_16M : Trim level 16MHz, bit[11]                                 */
  RCC_HIRCCR_HIRCTRIM_TRIMLEVEL_22M    = 2560,  /*!< TRIMLEVEL_22M : Trim level 22MHz, bit[11,9]                               */
  RCC_HIRCCR_HIRCTRIM_TRIMLEVEL_24M    = 3072,  /*!< TRIMLEVEL_24M : Trim level 24MHz, bit[11,10]                              */
  RCC_HIRCCR_HIRCTRIM_TRIMLEVEL_MSK    = 3584,  /*!< TRIMLEVEL_MSK : Trim level bits[11:9]                                     */
} RCC_HIRCCR_HIRCTRIM_Enum;

/* =========================================================  HXTCR  ========================================================= */
/* ========================================================  SIRCCR  ========================================================= */
/* ============================================  RCC SIRCCR SIRCSTARTUP [10..11]  ============================================ */
typedef enum {                                  /*!< RCC_SIRCCR_SIRCSTARTUP                                                    */
  RCC_SIRCCR_SIRCSTARTUP_4CYCLE        = 0,     /*!< 4CYCLE : 4 cycle                                                          */
  RCC_SIRCCR_SIRCSTARTUP_16CYCLE       = 1,     /*!< 16CYCLE : 16 cycle                                                        */
  RCC_SIRCCR_SIRCSTARTUP_64CYCLE       = 2,     /*!< 64CYCLE : 64 cycle                                                        */
  RCC_SIRCCR_SIRCSTARTUP_256CYCLE      = 3,     /*!< 256CYCLE : 256 cycle                                                      */
} RCC_SIRCCR_SIRCSTARTUP_Enum;

/* =========================================================  LXTCR  ========================================================= */
/* ======================================================  IRQLATENCY  ======================================================= */
/* ========================================================  STICKCR  ======================================================== */
/* ========================================================  SWDIOCR  ======================================================== */
/* ========================================================  PERIRST  ======================================================== */
/* =============================================  RCC PERIRST TIMXRST [29..31]  ============================================== */
typedef enum {                                  /*!< RCC_PERIRST_TIMXRST                                                       */
  RCC_PERIRST_TIMXRST_TIM1ARST         = 1,     /*!< TIM1ARST : Timer1A reset                                                  */
  RCC_PERIRST_TIMXRST_TIM1BRST         = 2,     /*!< TIM1BRST : Timer1B reset                                                  */
  RCC_PERIRST_TIMXRST_TIM2ARST         = 3,     /*!< TIM2ARST : Timer2A reset                                                  */
  RCC_PERIRST_TIMXRST_TIM2BRST         = 4,     /*!< TIM2BRST : Timer2B reset                                                  */
  RCC_PERIRST_TIMXRST_TIM2CRST         = 5,     /*!< TIM2CRST : Timer2C reset                                                  */
} RCC_PERIRST_TIMXRST_Enum;

/* ========================================================  RTCRST  ========================================================= */
/* ======================================================  MASK_INT_T  ======================================================= */
/* ===========================================  RCC MASK_INT_T MASK_INT_T [0..2]  ============================================ */
typedef enum {                                  /*!< RCC_MASK_INT_T_MASK_INT_T                                                 */
  RCC_MASK_INT_T_MASK_INT_T_1_6_MS     = 0,     /*!< 1_6_MS : 1.6 ms                                                           */
  RCC_MASK_INT_T_MASK_INT_T_1_4_MS     = 1,     /*!< 1_4_MS : 1.4 ms                                                           */
  RCC_MASK_INT_T_MASK_INT_T_1_2_MS     = 2,     /*!< 1_2_MS : 1.2 ms                                                           */
  RCC_MASK_INT_T_MASK_INT_T_1_0_MS     = 3,     /*!< 1_0_MS : 1.0 ms                                                           */
  RCC_MASK_INT_T_MASK_INT_T_0_8_MS     = 4,     /*!< 0_8_MS : 0.8 ms                                                           */
  RCC_MASK_INT_T_MASK_INT_T_0_6_MS     = 5,     /*!< 0_6_MS : 0.6 ms                                                           */
  RCC_MASK_INT_T_MASK_INT_T_0_4_MS     = 6,     /*!< 0_4_MS : 0.4 ms                                                           */
  RCC_MASK_INT_T_MASK_INT_T_0_2_MS     = 7,     /*!< 0_2_MS : 0.2 ms                                                           */
} RCC_MASK_INT_T_MASK_INT_T_Enum;

/* ========================================================  UNLOCK  ========================================================= */

/** @} */ /* End of group EnumValue_peripherals */


#ifdef __cplusplus
}
#endif

#endif /* ZB32L030_H */


/** @} */ /* End of group ZB32L030 */

/** @} */ /* End of group ZBit. */
